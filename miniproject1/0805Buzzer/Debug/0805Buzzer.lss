
0805Buzzer.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000010c  00800100  00001c9c  00001d30  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001c9c  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          000000b5  0080020c  0080020c  00001e3c  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00001e3c  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00001e98  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000004a8  00000000  00000000  00001ed8  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00004185  00000000  00000000  00002380  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 0000182f  00000000  00000000  00006505  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00002749  00000000  00000000  00007d34  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000968  00000000  00000000  0000a480  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000dfa  00000000  00000000  0000ade8  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000182b  00000000  00000000  0000bbe2  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000398  00000000  00000000  0000d40d  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	45 c0       	rjmp	.+138    	; 0x8c <__ctors_end>
       2:	00 00       	nop
       4:	62 c0       	rjmp	.+196    	; 0xca <__bad_interrupt>
       6:	00 00       	nop
       8:	60 c0       	rjmp	.+192    	; 0xca <__bad_interrupt>
       a:	00 00       	nop
       c:	5e c0       	rjmp	.+188    	; 0xca <__bad_interrupt>
       e:	00 00       	nop
      10:	5c c0       	rjmp	.+184    	; 0xca <__bad_interrupt>
      12:	00 00       	nop
      14:	5a c0       	rjmp	.+180    	; 0xca <__bad_interrupt>
      16:	00 00       	nop
      18:	58 c0       	rjmp	.+176    	; 0xca <__bad_interrupt>
      1a:	00 00       	nop
      1c:	56 c0       	rjmp	.+172    	; 0xca <__bad_interrupt>
      1e:	00 00       	nop
      20:	54 c0       	rjmp	.+168    	; 0xca <__bad_interrupt>
      22:	00 00       	nop
      24:	8b c4       	rjmp	.+2326   	; 0x93c <__vector_9>
      26:	00 00       	nop
      28:	50 c0       	rjmp	.+160    	; 0xca <__bad_interrupt>
      2a:	00 00       	nop
      2c:	4e c0       	rjmp	.+156    	; 0xca <__bad_interrupt>
      2e:	00 00       	nop
      30:	4c c0       	rjmp	.+152    	; 0xca <__bad_interrupt>
      32:	00 00       	nop
      34:	4a c0       	rjmp	.+148    	; 0xca <__bad_interrupt>
      36:	00 00       	nop
      38:	48 c0       	rjmp	.+144    	; 0xca <__bad_interrupt>
      3a:	00 00       	nop
      3c:	46 c0       	rjmp	.+140    	; 0xca <__bad_interrupt>
      3e:	00 00       	nop
      40:	3f c4       	rjmp	.+2174   	; 0x8c0 <__vector_16>
      42:	00 00       	nop
      44:	42 c0       	rjmp	.+132    	; 0xca <__bad_interrupt>
      46:	00 00       	nop
      48:	a1 c4       	rjmp	.+2370   	; 0x98c <__vector_18>
      4a:	00 00       	nop
      4c:	3e c0       	rjmp	.+124    	; 0xca <__bad_interrupt>
      4e:	00 00       	nop
      50:	3c c0       	rjmp	.+120    	; 0xca <__bad_interrupt>
      52:	00 00       	nop
      54:	3a c0       	rjmp	.+116    	; 0xca <__bad_interrupt>
      56:	00 00       	nop
      58:	38 c0       	rjmp	.+112    	; 0xca <__bad_interrupt>
      5a:	00 00       	nop
      5c:	36 c0       	rjmp	.+108    	; 0xca <__bad_interrupt>
      5e:	00 00       	nop
      60:	34 c0       	rjmp	.+104    	; 0xca <__bad_interrupt>
      62:	00 00       	nop
      64:	32 c0       	rjmp	.+100    	; 0xca <__bad_interrupt>
      66:	00 00       	nop
      68:	30 c0       	rjmp	.+96     	; 0xca <__bad_interrupt>
      6a:	00 00       	nop
      6c:	2e c0       	rjmp	.+92     	; 0xca <__bad_interrupt>
      6e:	00 00       	nop
      70:	2c c0       	rjmp	.+88     	; 0xca <__bad_interrupt>
      72:	00 00       	nop
      74:	2a c0       	rjmp	.+84     	; 0xca <__bad_interrupt>
      76:	00 00       	nop
      78:	28 c0       	rjmp	.+80     	; 0xca <__bad_interrupt>
      7a:	00 00       	nop
      7c:	26 c0       	rjmp	.+76     	; 0xca <__bad_interrupt>
      7e:	00 00       	nop
      80:	24 c0       	rjmp	.+72     	; 0xca <__bad_interrupt>
      82:	00 00       	nop
      84:	22 c0       	rjmp	.+68     	; 0xca <__bad_interrupt>
      86:	00 00       	nop
      88:	20 c0       	rjmp	.+64     	; 0xca <__bad_interrupt>
	...

0000008c <__ctors_end>:
      8c:	11 24       	eor	r1, r1
      8e:	1f be       	out	0x3f, r1	; 63
      90:	cf ef       	ldi	r28, 0xFF	; 255
      92:	d0 e1       	ldi	r29, 0x10	; 16
      94:	de bf       	out	0x3e, r29	; 62
      96:	cd bf       	out	0x3d, r28	; 61

00000098 <__do_copy_data>:
      98:	12 e0       	ldi	r17, 0x02	; 2
      9a:	a0 e0       	ldi	r26, 0x00	; 0
      9c:	b1 e0       	ldi	r27, 0x01	; 1
      9e:	ec e9       	ldi	r30, 0x9C	; 156
      a0:	fc e1       	ldi	r31, 0x1C	; 28
      a2:	00 e0       	ldi	r16, 0x00	; 0
      a4:	0b bf       	out	0x3b, r16	; 59
      a6:	02 c0       	rjmp	.+4      	; 0xac <__do_copy_data+0x14>
      a8:	07 90       	elpm	r0, Z+
      aa:	0d 92       	st	X+, r0
      ac:	ac 30       	cpi	r26, 0x0C	; 12
      ae:	b1 07       	cpc	r27, r17
      b0:	d9 f7       	brne	.-10     	; 0xa8 <__do_copy_data+0x10>

000000b2 <__do_clear_bss>:
      b2:	22 e0       	ldi	r18, 0x02	; 2
      b4:	ac e0       	ldi	r26, 0x0C	; 12
      b6:	b2 e0       	ldi	r27, 0x02	; 2
      b8:	01 c0       	rjmp	.+2      	; 0xbc <.do_clear_bss_start>

000000ba <.do_clear_bss_loop>:
      ba:	1d 92       	st	X+, r1

000000bc <.do_clear_bss_start>:
      bc:	a1 3c       	cpi	r26, 0xC1	; 193
      be:	b2 07       	cpc	r27, r18
      c0:	e1 f7       	brne	.-8      	; 0xba <.do_clear_bss_loop>
      c2:	0e 94 46 0a 	call	0x148c	; 0x148c <main>
      c6:	0c 94 4c 0e 	jmp	0x1c98	; 0x1c98 <_exit>

000000ca <__bad_interrupt>:
      ca:	9a cf       	rjmp	.-204    	; 0x0 <__vectors>

000000cc <listen_init>:
button_t btnmode,btnauto,btntimer,timerstart;
uint8_t windstate,automode,timersel,startsw;

void listen_init()
{
	button_init(&btnmode, &DDRA, &PINA, 0);
      cc:	20 e0       	ldi	r18, 0x00	; 0
      ce:	49 e3       	ldi	r20, 0x39	; 57
      d0:	50 e0       	ldi	r21, 0x00	; 0
      d2:	6a e3       	ldi	r22, 0x3A	; 58
      d4:	70 e0       	ldi	r23, 0x00	; 0
      d6:	8c e1       	ldi	r24, 0x1C	; 28
      d8:	92 e0       	ldi	r25, 0x02	; 2
      da:	bc d5       	rcall	.+2936   	; 0xc54 <button_init>
	button_init(&btnauto, &DDRA, &PINA, 1);
      dc:	21 e0       	ldi	r18, 0x01	; 1
      de:	49 e3       	ldi	r20, 0x39	; 57
      e0:	50 e0       	ldi	r21, 0x00	; 0
      e2:	6a e3       	ldi	r22, 0x3A	; 58
      e4:	70 e0       	ldi	r23, 0x00	; 0
      e6:	83 e2       	ldi	r24, 0x23	; 35
      e8:	92 e0       	ldi	r25, 0x02	; 2
      ea:	b4 d5       	rcall	.+2920   	; 0xc54 <button_init>
	button_init(&btntimer, &DDRA, &PINA, 2);
      ec:	22 e0       	ldi	r18, 0x02	; 2
      ee:	49 e3       	ldi	r20, 0x39	; 57
      f0:	50 e0       	ldi	r21, 0x00	; 0
      f2:	6a e3       	ldi	r22, 0x3A	; 58
      f4:	70 e0       	ldi	r23, 0x00	; 0
      f6:	89 e2       	ldi	r24, 0x29	; 41
      f8:	92 e0       	ldi	r25, 0x02	; 2
      fa:	ac d5       	rcall	.+2904   	; 0xc54 <button_init>
	button_init(&timerstart, &DDRA, &PINA, 3);
      fc:	23 e0       	ldi	r18, 0x03	; 3
      fe:	49 e3       	ldi	r20, 0x39	; 57
     100:	50 e0       	ldi	r21, 0x00	; 0
     102:	6a e3       	ldi	r22, 0x3A	; 58
     104:	70 e0       	ldi	r23, 0x00	; 0
     106:	83 e1       	ldi	r24, 0x13	; 19
     108:	92 e0       	ldi	r25, 0x02	; 2
	model_setwindstatedata(0);
     10a:	a4 d5       	rcall	.+2888   	; 0xc54 <button_init>
     10c:	80 e0       	ldi	r24, 0x00	; 0
	model_setwindautodata(0);
     10e:	79 d0       	rcall	.+242    	; 0x202 <model_setwindstatedata>
     110:	80 e0       	ldi	r24, 0x00	; 0
	model_setwindtimerdata(0);
     112:	71 d0       	rcall	.+226    	; 0x1f6 <model_setwindautodata>
     114:	80 e0       	ldi	r24, 0x00	; 0
     116:	7b d0       	rcall	.+246    	; 0x20e <model_setwindtimerdata>
	model_settimestartdata(0);
     118:	80 e0       	ldi	r24, 0x00	; 0
     11a:	67 d0       	rcall	.+206    	; 0x1ea <model_settimestartdata>
     11c:	10 92 22 02 	sts	0x0222, r1	; 0x800222 <automode>
	automode = 0;
     120:	10 92 1b 02 	sts	0x021B, r1	; 0x80021b <windstate>
	windstate = 0;
     124:	81 e0       	ldi	r24, 0x01	; 1
	timersel = 1;
     126:	80 93 19 02 	sts	0x0219, r24	; 0x800219 <timersel>
     12a:	10 92 1a 02 	sts	0x021A, r1	; 0x80021a <startsw>
	startsw = 0;
     12e:	08 95       	ret

00000130 <listen_execute>:
     130:	89 e2       	ldi	r24, 0x29	; 41
}

void listen_execute()
{
	
	if(Button_GetState(&btntimer) == 1)
     132:	92 e0       	ldi	r25, 0x02	; 2
     134:	9c d5       	rcall	.+2872   	; 0xc6e <Button_GetState>
     136:	81 30       	cpi	r24, 0x01	; 1
     138:	d9 f4       	brne	.+54     	; 0x170 <listen_execute+0x40>
	{
		buzzer2_timechange();
     13a:	5a d6       	rcall	.+3252   	; 0xdf0 <buzzer2_timechange>
     13c:	80 91 19 02 	lds	r24, 0x0219	; 0x800219 <timersel>
		timersel++;
     140:	8f 5f       	subi	r24, 0xFF	; 255
     142:	80 93 19 02 	sts	0x0219, r24	; 0x800219 <timersel>
		model_setwindtimerdata(timersel);
     146:	63 d0       	rcall	.+198    	; 0x20e <model_setwindtimerdata>
     148:	10 92 1b 02 	sts	0x021B, r1	; 0x80021b <windstate>
		windstate = 0;
		model_setwindstatedata(windstate);
     14c:	80 e0       	ldi	r24, 0x00	; 0
     14e:	59 d0       	rcall	.+178    	; 0x202 <model_setwindstatedata>
		automode = 0;
     150:	10 92 22 02 	sts	0x0222, r1	; 0x800222 <automode>
		model_setwindautodata(automode);
     154:	80 e0       	ldi	r24, 0x00	; 0
     156:	4f d0       	rcall	.+158    	; 0x1f6 <model_setwindautodata>
		startsw = 0;
     158:	10 92 1a 02 	sts	0x021A, r1	; 0x80021a <startsw>
		model_settimestartdata(startsw);
     15c:	80 e0       	ldi	r24, 0x00	; 0
     15e:	45 d0       	rcall	.+138    	; 0x1ea <model_settimestartdata>
     160:	80 91 19 02 	lds	r24, 0x0219	; 0x800219 <timersel>
		if(timersel == 5)
     164:	85 30       	cpi	r24, 0x05	; 5
     166:	21 f4       	brne	.+8      	; 0x170 <listen_execute+0x40>
		{
			timersel = 1;
     168:	81 e0       	ldi	r24, 0x01	; 1
     16a:	80 93 19 02 	sts	0x0219, r24	; 0x800219 <timersel>
			model_setwindtimerdata(timersel);
		}
	}
	
	if(Button_GetState(&timerstart) == 1)
     16e:	4f d0       	rcall	.+158    	; 0x20e <model_setwindtimerdata>
     170:	83 e1       	ldi	r24, 0x13	; 19
     172:	92 e0       	ldi	r25, 0x02	; 2
     174:	7c d5       	rcall	.+2808   	; 0xc6e <Button_GetState>
     176:	81 30       	cpi	r24, 0x01	; 1
	{
		buzzer2_timestart();
     178:	79 f4       	brne	.+30     	; 0x198 <listen_execute+0x68>
     17a:	4c d6       	rcall	.+3224   	; 0xe14 <buzzer2_timestart>
		startsw++;
     17c:	80 91 1a 02 	lds	r24, 0x021A	; 0x80021a <startsw>
     180:	8f 5f       	subi	r24, 0xFF	; 255
     182:	80 93 1a 02 	sts	0x021A, r24	; 0x80021a <startsw>
		model_settimestartdata(startsw);
     186:	31 d0       	rcall	.+98     	; 0x1ea <model_settimestartdata>
		if(startsw >= 2)
     188:	80 91 1a 02 	lds	r24, 0x021A	; 0x80021a <startsw>
     18c:	82 30       	cpi	r24, 0x02	; 2
     18e:	20 f0       	brcs	.+8      	; 0x198 <listen_execute+0x68>
		{
			startsw = 0;
     190:	10 92 1a 02 	sts	0x021A, r1	; 0x80021a <startsw>
			model_settimestartdata(startsw);
     194:	80 e0       	ldi	r24, 0x00	; 0
     196:	29 c0       	rjmp	.+82     	; 0x1ea <model_settimestartdata>
     198:	08 95       	ret

0000019a <listener_state>:
     19a:	8c e1       	ldi	r24, 0x1C	; 28
	}
}

void listener_state()
{
	if(Button_GetState(&btnmode) == 1)
     19c:	92 e0       	ldi	r25, 0x02	; 2
     19e:	67 d5       	rcall	.+2766   	; 0xc6e <Button_GetState>
     1a0:	81 30       	cpi	r24, 0x01	; 1
     1a2:	a1 f4       	brne	.+40     	; 0x1cc <listener_state+0x32>
	{
		buzzer2_windchange();
     1a4:	01 d6       	rcall	.+3074   	; 0xda8 <buzzer2_windchange>
     1a6:	80 91 1b 02 	lds	r24, 0x021B	; 0x80021b <windstate>
		windstate++;
     1aa:	8f 5f       	subi	r24, 0xFF	; 255
     1ac:	80 93 1b 02 	sts	0x021B, r24	; 0x80021b <windstate>
		model_setwindstatedata(windstate);
     1b0:	28 d0       	rcall	.+80     	; 0x202 <model_setwindstatedata>
     1b2:	80 91 1b 02 	lds	r24, 0x021B	; 0x80021b <windstate>
		if(windstate >= 4)
     1b6:	84 30       	cpi	r24, 0x04	; 4
     1b8:	28 f0       	brcs	.+10     	; 0x1c4 <listener_state+0x2a>
		{
			buzzer2_windoff();
     1ba:	08 d6       	rcall	.+3088   	; 0xdcc <buzzer2_windoff>
			windstate = 0;
     1bc:	10 92 1b 02 	sts	0x021B, r1	; 0x80021b <windstate>
			model_setwindstatedata(windstate);
     1c0:	80 e0       	ldi	r24, 0x00	; 0
		}
		model_setwindautodata(0);
     1c2:	1f d0       	rcall	.+62     	; 0x202 <model_setwindstatedata>
     1c4:	80 e0       	ldi	r24, 0x00	; 0
		model_settimestartdata(0);
     1c6:	17 d0       	rcall	.+46     	; 0x1f6 <model_setwindautodata>
     1c8:	80 e0       	ldi	r24, 0x00	; 0
	}
	if(Button_GetState(&btnauto) == 1)
     1ca:	0f d0       	rcall	.+30     	; 0x1ea <model_settimestartdata>
     1cc:	83 e2       	ldi	r24, 0x23	; 35
     1ce:	92 e0       	ldi	r25, 0x02	; 2
     1d0:	4e d5       	rcall	.+2716   	; 0xc6e <Button_GetState>
	{
		buzzer2_timestart();
     1d2:	81 30       	cpi	r24, 0x01	; 1
     1d4:	31 f4       	brne	.+12     	; 0x1e2 <listener_state+0x48>
		model_setwindautodata(1);
     1d6:	1e d6       	rcall	.+3132   	; 0xe14 <buzzer2_timestart>
     1d8:	81 e0       	ldi	r24, 0x01	; 1
     1da:	0d d0       	rcall	.+26     	; 0x1f6 <model_setwindautodata>
		model_setwindstatedata(windstate);
     1dc:	80 91 1b 02 	lds	r24, 0x021B	; 0x80021b <windstate>
     1e0:	10 c0       	rjmp	.+32     	; 0x202 <model_setwindstatedata>
     1e2:	08 95       	ret

000001e4 <model_gettimestartdata>:
uint8_t timestartdata;

uint8_t model_gettimestartdata()
{
	return timestartdata;
}
     1e4:	80 91 2f 02 	lds	r24, 0x022F	; 0x80022f <timestartdata>
     1e8:	08 95       	ret

000001ea <model_settimestartdata>:

void model_settimestartdata(uint8_t state)
{
	timestartdata = state;
     1ea:	80 93 2f 02 	sts	0x022F, r24	; 0x80022f <timestartdata>
     1ee:	08 95       	ret

000001f0 <model_getwindautodata>:
uint8_t autostatedata;

uint8_t model_getwindautodata()
{
	return autostatedata;
}
     1f0:	80 91 30 02 	lds	r24, 0x0230	; 0x800230 <autostatedata>
     1f4:	08 95       	ret

000001f6 <model_setwindautodata>:

void model_setwindautodata(uint8_t state)
{
	autostatedata = state;
     1f6:	80 93 30 02 	sts	0x0230, r24	; 0x800230 <autostatedata>
     1fa:	08 95       	ret

000001fc <model_getwindstatedata>:
uint8_t windstatedata;

uint8_t model_getwindstatedata()
{
	return windstatedata;
}
     1fc:	80 91 31 02 	lds	r24, 0x0231	; 0x800231 <windstatedata>
     200:	08 95       	ret

00000202 <model_setwindstatedata>:

void model_setwindstatedata(uint8_t state)
{
	windstatedata = state;
     202:	80 93 31 02 	sts	0x0231, r24	; 0x800231 <windstatedata>
     206:	08 95       	ret

00000208 <model_getwindtimerdata>:
uint8_t windtimerdata;

uint8_t model_getwindtimerdata()
{
	return windtimerdata;
}
     208:	80 91 32 02 	lds	r24, 0x0232	; 0x800232 <windtimerdata>
     20c:	08 95       	ret

0000020e <model_setwindtimerdata>:

void model_setwindtimerdata(uint8_t state)
{
	windtimerdata = state;
     20e:	80 93 32 02 	sts	0x0232, r24	; 0x800232 <windtimerdata>
     212:	08 95       	ret

00000214 <presenterinit>:
void fndfan(uint16_t dir)
{
	uint16_t fndfandata;
	
	fndfandata = dir;
	FND_dispfan(fndfandata);
     214:	36 d6       	rcall	.+3180   	; 0xe82 <fndinit>
     216:	0c 94 a1 09 	jmp	0x1342	; 0x1342 <LCDinit>
     21a:	08 95       	ret

0000021c <showstrength>:
     21c:	1f 93       	push	r17
     21e:	cf 93       	push	r28
     220:	df 93       	push	r29
     222:	cd b7       	in	r28, 0x3d	; 61
     224:	de b7       	in	r29, 0x3e	; 62
     226:	6e 97       	sbiw	r28, 0x1e	; 30
     228:	0f b6       	in	r0, 0x3f	; 63
     22a:	f8 94       	cli
     22c:	de bf       	out	0x3e, r29	; 62
     22e:	0f be       	out	0x3f, r0	; 63
     230:	cd bf       	out	0x3d, r28	; 61
     232:	18 2f       	mov	r17, r24
     234:	46 e3       	ldi	r20, 0x36	; 54
     236:	51 e0       	ldi	r21, 0x01	; 1
     238:	63 e0       	ldi	r22, 0x03	; 3
     23a:	80 e0       	ldi	r24, 0x00	; 0
     23c:	0e 94 ee 09 	call	0x13dc	; 0x13dc <LCDwrtiestringxy>
     240:	11 30       	cpi	r17, 0x01	; 1
     242:	b9 f0       	breq	.+46     	; 0x272 <showstrength+0x56>
     244:	28 f0       	brcs	.+10     	; 0x250 <showstrength+0x34>
     246:	12 30       	cpi	r17, 0x02	; 2
     248:	29 f1       	breq	.+74     	; 0x294 <showstrength+0x78>
     24a:	13 30       	cpi	r17, 0x03	; 3
     24c:	a1 f1       	breq	.+104    	; 0x2b6 <showstrength+0x9a>
     24e:	43 c0       	rjmp	.+134    	; 0x2d6 <showstrength+0xba>
     250:	8d e0       	ldi	r24, 0x0D	; 13
     252:	e1 e4       	ldi	r30, 0x41	; 65
     254:	f1 e0       	ldi	r31, 0x01	; 1
     256:	de 01       	movw	r26, r28
     258:	11 96       	adiw	r26, 0x01	; 1
     25a:	01 90       	ld	r0, Z+
     25c:	0d 92       	st	X+, r0
     25e:	8a 95       	dec	r24
     260:	e1 f7       	brne	.-8      	; 0x25a <showstrength+0x3e>
     262:	ae 01       	movw	r20, r28
     264:	4f 5f       	subi	r20, 0xFF	; 255
     266:	5f 4f       	sbci	r21, 0xFF	; 255
     268:	63 e0       	ldi	r22, 0x03	; 3
     26a:	81 e0       	ldi	r24, 0x01	; 1
     26c:	0e 94 ee 09 	call	0x13dc	; 0x13dc <LCDwrtiestringxy>
     270:	32 c0       	rjmp	.+100    	; 0x2d6 <showstrength+0xba>
     272:	8c e0       	ldi	r24, 0x0C	; 12
     274:	ee e4       	ldi	r30, 0x4E	; 78
     276:	f1 e0       	ldi	r31, 0x01	; 1
     278:	de 01       	movw	r26, r28
     27a:	11 96       	adiw	r26, 0x01	; 1
     27c:	01 90       	ld	r0, Z+
     27e:	0d 92       	st	X+, r0
     280:	8a 95       	dec	r24
     282:	e1 f7       	brne	.-8      	; 0x27c <showstrength+0x60>
     284:	ae 01       	movw	r20, r28
     286:	4f 5f       	subi	r20, 0xFF	; 255
     288:	5f 4f       	sbci	r21, 0xFF	; 255
     28a:	63 e0       	ldi	r22, 0x03	; 3
     28c:	81 e0       	ldi	r24, 0x01	; 1
     28e:	0e 94 ee 09 	call	0x13dc	; 0x13dc <LCDwrtiestringxy>
     292:	21 c0       	rjmp	.+66     	; 0x2d6 <showstrength+0xba>
     294:	8d e0       	ldi	r24, 0x0D	; 13
     296:	ea e5       	ldi	r30, 0x5A	; 90
     298:	f1 e0       	ldi	r31, 0x01	; 1
     29a:	de 01       	movw	r26, r28
     29c:	11 96       	adiw	r26, 0x01	; 1
     29e:	01 90       	ld	r0, Z+
     2a0:	0d 92       	st	X+, r0
     2a2:	8a 95       	dec	r24
     2a4:	e1 f7       	brne	.-8      	; 0x29e <showstrength+0x82>
     2a6:	ae 01       	movw	r20, r28
     2a8:	4f 5f       	subi	r20, 0xFF	; 255
     2aa:	5f 4f       	sbci	r21, 0xFF	; 255
     2ac:	63 e0       	ldi	r22, 0x03	; 3
     2ae:	81 e0       	ldi	r24, 0x01	; 1
     2b0:	0e 94 ee 09 	call	0x13dc	; 0x13dc <LCDwrtiestringxy>
     2b4:	10 c0       	rjmp	.+32     	; 0x2d6 <showstrength+0xba>
     2b6:	8d e0       	ldi	r24, 0x0D	; 13
     2b8:	e7 e6       	ldi	r30, 0x67	; 103
     2ba:	f1 e0       	ldi	r31, 0x01	; 1
     2bc:	de 01       	movw	r26, r28
     2be:	11 96       	adiw	r26, 0x01	; 1
     2c0:	01 90       	ld	r0, Z+
     2c2:	0d 92       	st	X+, r0
     2c4:	8a 95       	dec	r24
     2c6:	e1 f7       	brne	.-8      	; 0x2c0 <showstrength+0xa4>
     2c8:	ae 01       	movw	r20, r28
     2ca:	4f 5f       	subi	r20, 0xFF	; 255
     2cc:	5f 4f       	sbci	r21, 0xFF	; 255
     2ce:	63 e0       	ldi	r22, 0x03	; 3
     2d0:	81 e0       	ldi	r24, 0x01	; 1
     2d2:	0e 94 ee 09 	call	0x13dc	; 0x13dc <LCDwrtiestringxy>
     2d6:	6e 96       	adiw	r28, 0x1e	; 30
     2d8:	0f b6       	in	r0, 0x3f	; 63
     2da:	f8 94       	cli
     2dc:	de bf       	out	0x3e, r29	; 62
     2de:	0f be       	out	0x3f, r0	; 63
     2e0:	cd bf       	out	0x3d, r28	; 61
     2e2:	df 91       	pop	r29
     2e4:	cf 91       	pop	r28
     2e6:	1f 91       	pop	r17
     2e8:	08 95       	ret

000002ea <Presenter_dispstopwatchdata>:
     2ea:	af 92       	push	r10
     2ec:	bf 92       	push	r11
     2ee:	df 92       	push	r13
     2f0:	ef 92       	push	r14
     2f2:	ff 92       	push	r15
     2f4:	0f 93       	push	r16
     2f6:	1f 93       	push	r17
     2f8:	cf 93       	push	r28
     2fa:	df 93       	push	r29
     2fc:	cd b7       	in	r28, 0x3d	; 61
     2fe:	de b7       	in	r29, 0x3e	; 62
     300:	6e 97       	sbiw	r28, 0x1e	; 30
     302:	0f b6       	in	r0, 0x3f	; 63
     304:	f8 94       	cli
     306:	de bf       	out	0x3e, r29	; 62
     308:	0f be       	out	0x3f, r0	; 63
     30a:	cd bf       	out	0x3d, r28	; 61
     30c:	18 2f       	mov	r17, r24
     30e:	f6 2e       	mov	r15, r22
     310:	e4 2e       	mov	r14, r20
     312:	59 01       	movw	r10, r18
     314:	0f 2e       	mov	r0, r31
     316:	f4 e6       	ldi	r31, 0x64	; 100
     318:	df 2e       	mov	r13, r31
     31a:	f0 2d       	mov	r31, r0
     31c:	84 2f       	mov	r24, r20
     31e:	90 e0       	ldi	r25, 0x00	; 0
     320:	d6 9e       	mul	r13, r22
     322:	80 0d       	add	r24, r0
     324:	91 1d       	adc	r25, r1
     326:	11 24       	eor	r1, r1
     328:	b4 d7       	rcall	.+3944   	; 0x1292 <FND_setFndData>
     32a:	1f 92       	push	r1
     32c:	1f 93       	push	r17
     32e:	84 e7       	ldi	r24, 0x74	; 116
     330:	91 e0       	ldi	r25, 0x01	; 1
     332:	9f 93       	push	r25
     334:	8f 93       	push	r24
     336:	8e 01       	movw	r16, r28
     338:	0f 5f       	subi	r16, 0xFF	; 255
     33a:	1f 4f       	sbci	r17, 0xFF	; 255
     33c:	1f 93       	push	r17
     33e:	0f 93       	push	r16
     340:	0e 94 71 0b 	call	0x16e2	; 0x16e2 <sprintf>
     344:	a8 01       	movw	r20, r16
     346:	62 e0       	ldi	r22, 0x02	; 2
     348:	80 e0       	ldi	r24, 0x00	; 0
     34a:	0e 94 ee 09 	call	0x13dc	; 0x13dc <LCDwrtiestringxy>
     34e:	95 01       	movw	r18, r10
     350:	ad ec       	ldi	r26, 0xCD	; 205
     352:	bc ec       	ldi	r27, 0xCC	; 204
     354:	0e 94 07 0b 	call	0x160e	; 0x160e <__umulhisi3>
     358:	ac 01       	movw	r20, r24
     35a:	56 95       	lsr	r21
     35c:	47 95       	ror	r20
     35e:	56 95       	lsr	r21
     360:	47 95       	ror	r20
     362:	56 95       	lsr	r21
     364:	47 95       	ror	r20
     366:	9a 01       	movw	r18, r20
     368:	36 95       	lsr	r19
     36a:	27 95       	ror	r18
     36c:	36 95       	lsr	r19
     36e:	27 95       	ror	r18
     370:	ab e7       	ldi	r26, 0x7B	; 123
     372:	b4 e1       	ldi	r27, 0x14	; 20
     374:	0e 94 07 0b 	call	0x160e	; 0x160e <__umulhisi3>
     378:	96 95       	lsr	r25
     37a:	87 95       	ror	r24
     37c:	d8 9e       	mul	r13, r24
     37e:	90 01       	movw	r18, r0
     380:	d9 9e       	mul	r13, r25
     382:	30 0d       	add	r19, r0
     384:	11 24       	eor	r1, r1
     386:	42 1b       	sub	r20, r18
     388:	53 0b       	sbc	r21, r19
     38a:	5f 93       	push	r21
     38c:	4f 93       	push	r20
     38e:	1f 92       	push	r1
     390:	ef 92       	push	r14
     392:	1f 92       	push	r1
     394:	ff 92       	push	r15
     396:	81 e8       	ldi	r24, 0x81	; 129
     398:	91 e0       	ldi	r25, 0x01	; 1
     39a:	9f 93       	push	r25
     39c:	8f 93       	push	r24
     39e:	1f 93       	push	r17
     3a0:	0f 93       	push	r16
     3a2:	0e 94 71 0b 	call	0x16e2	; 0x16e2 <sprintf>
     3a6:	a8 01       	movw	r20, r16
     3a8:	63 e0       	ldi	r22, 0x03	; 3
     3aa:	81 e0       	ldi	r24, 0x01	; 1
     3ac:	0e 94 ee 09 	call	0x13dc	; 0x13dc <LCDwrtiestringxy>
     3b0:	0f b6       	in	r0, 0x3f	; 63
     3b2:	f8 94       	cli
     3b4:	de bf       	out	0x3e, r29	; 62
     3b6:	0f be       	out	0x3f, r0	; 63
     3b8:	cd bf       	out	0x3d, r28	; 61
     3ba:	6e 96       	adiw	r28, 0x1e	; 30
     3bc:	0f b6       	in	r0, 0x3f	; 63
     3be:	f8 94       	cli
     3c0:	de bf       	out	0x3e, r29	; 62
     3c2:	0f be       	out	0x3f, r0	; 63
     3c4:	cd bf       	out	0x3d, r28	; 61
     3c6:	df 91       	pop	r29
     3c8:	cf 91       	pop	r28
     3ca:	1f 91       	pop	r17
     3cc:	0f 91       	pop	r16
     3ce:	ff 90       	pop	r15
     3d0:	ef 90       	pop	r14
     3d2:	df 90       	pop	r13
     3d4:	bf 90       	pop	r11
     3d6:	af 90       	pop	r10
     3d8:	08 95       	ret

000003da <Presenter_dispstopwatchdata2>:
}

void Presenter_dispstopwatchdata2(uint8_t hour,uint8_t min,uint8_t sec,uint16_t milisec)
{
     3da:	af 92       	push	r10
     3dc:	bf 92       	push	r11
     3de:	df 92       	push	r13
     3e0:	ef 92       	push	r14
     3e2:	ff 92       	push	r15
     3e4:	0f 93       	push	r16
     3e6:	1f 93       	push	r17
     3e8:	cf 93       	push	r28
     3ea:	df 93       	push	r29
     3ec:	cd b7       	in	r28, 0x3d	; 61
     3ee:	de b7       	in	r29, 0x3e	; 62
     3f0:	6e 97       	sbiw	r28, 0x1e	; 30
     3f2:	0f b6       	in	r0, 0x3f	; 63
     3f4:	f8 94       	cli
     3f6:	de bf       	out	0x3e, r29	; 62
     3f8:	0f be       	out	0x3f, r0	; 63
     3fa:	cd bf       	out	0x3d, r28	; 61
     3fc:	f6 2e       	mov	r15, r22
     3fe:	e4 2e       	mov	r14, r20
     400:	59 01       	movw	r10, r18
	uint16_t stopwatch2data;
	
	stopwatch2data = (min*100)+(sec);
     402:	0f 2e       	mov	r0, r31
     404:	f4 e6       	ldi	r31, 0x64	; 100
     406:	df 2e       	mov	r13, r31
     408:	f0 2d       	mov	r31, r0
     40a:	84 2f       	mov	r24, r20
     40c:	90 e0       	ldi	r25, 0x00	; 0
	FND_setFndData(stopwatch2data);
     40e:	d6 9e       	mul	r13, r22
     410:	80 0d       	add	r24, r0
     412:	91 1d       	adc	r25, r1
     414:	11 24       	eor	r1, r1
     416:	3d d7       	rcall	.+3706   	; 0x1292 <FND_setFndData>
	
	char buff[30];
	sprintf(buff, " %2d MINUTE ",min);
     418:	1f 92       	push	r1
     41a:	ff 92       	push	r15
     41c:	84 e7       	ldi	r24, 0x74	; 116
     41e:	91 e0       	ldi	r25, 0x01	; 1
     420:	9f 93       	push	r25
     422:	8f 93       	push	r24
     424:	8e 01       	movw	r16, r28
     426:	0f 5f       	subi	r16, 0xFF	; 255
     428:	1f 4f       	sbci	r17, 0xFF	; 255
     42a:	1f 93       	push	r17
     42c:	0f 93       	push	r16
     42e:	0e 94 71 0b 	call	0x16e2	; 0x16e2 <sprintf>
	LCDwrtiestringxy(0,2,buff);
     432:	a8 01       	movw	r20, r16
     434:	62 e0       	ldi	r22, 0x02	; 2
     436:	80 e0       	ldi	r24, 0x00	; 0
     438:	d1 d7       	rcall	.+4002   	; 0x13dc <LCDwrtiestringxy>
	sprintf(buff, " %02d:%02d:%02d   ", min, sec, milisec/10%100);
     43a:	95 01       	movw	r18, r10
     43c:	ad ec       	ldi	r26, 0xCD	; 205
     43e:	bc ec       	ldi	r27, 0xCC	; 204
     440:	0e 94 07 0b 	call	0x160e	; 0x160e <__umulhisi3>
     444:	ac 01       	movw	r20, r24
     446:	56 95       	lsr	r21
     448:	47 95       	ror	r20
     44a:	56 95       	lsr	r21
     44c:	47 95       	ror	r20
     44e:	56 95       	lsr	r21
     450:	47 95       	ror	r20
     452:	9a 01       	movw	r18, r20
     454:	36 95       	lsr	r19
     456:	27 95       	ror	r18
     458:	36 95       	lsr	r19
     45a:	27 95       	ror	r18
     45c:	ab e7       	ldi	r26, 0x7B	; 123
     45e:	b4 e1       	ldi	r27, 0x14	; 20
     460:	0e 94 07 0b 	call	0x160e	; 0x160e <__umulhisi3>
     464:	96 95       	lsr	r25
     466:	87 95       	ror	r24
     468:	d8 9e       	mul	r13, r24
     46a:	90 01       	movw	r18, r0
     46c:	d9 9e       	mul	r13, r25
     46e:	30 0d       	add	r19, r0
     470:	11 24       	eor	r1, r1
     472:	42 1b       	sub	r20, r18
     474:	53 0b       	sbc	r21, r19
     476:	5f 93       	push	r21
     478:	4f 93       	push	r20
     47a:	1f 92       	push	r1
     47c:	ef 92       	push	r14
     47e:	1f 92       	push	r1
     480:	ff 92       	push	r15
     482:	81 e8       	ldi	r24, 0x81	; 129
     484:	91 e0       	ldi	r25, 0x01	; 1
     486:	9f 93       	push	r25
     488:	8f 93       	push	r24
     48a:	1f 93       	push	r17
     48c:	0f 93       	push	r16
     48e:	0e 94 71 0b 	call	0x16e2	; 0x16e2 <sprintf>
	LCDwrtiestringxy(1,3,buff);
     492:	a8 01       	movw	r20, r16
     494:	63 e0       	ldi	r22, 0x03	; 3
     496:	81 e0       	ldi	r24, 0x01	; 1
     498:	a1 d7       	rcall	.+3906   	; 0x13dc <LCDwrtiestringxy>
	
     49a:	0f b6       	in	r0, 0x3f	; 63
     49c:	f8 94       	cli
     49e:	de bf       	out	0x3e, r29	; 62
     4a0:	0f be       	out	0x3f, r0	; 63
     4a2:	cd bf       	out	0x3d, r28	; 61
     4a4:	6e 96       	adiw	r28, 0x1e	; 30
     4a6:	0f b6       	in	r0, 0x3f	; 63
     4a8:	f8 94       	cli
     4aa:	de bf       	out	0x3e, r29	; 62
     4ac:	0f be       	out	0x3f, r0	; 63
     4ae:	cd bf       	out	0x3d, r28	; 61
     4b0:	df 91       	pop	r29
     4b2:	cf 91       	pop	r28
     4b4:	1f 91       	pop	r17
     4b6:	0f 91       	pop	r16
     4b8:	ff 90       	pop	r15
     4ba:	ef 90       	pop	r14
     4bc:	df 90       	pop	r13
     4be:	bf 90       	pop	r11
     4c0:	af 90       	pop	r10
     4c2:	08 95       	ret

000004c4 <stopwatchinit>:
	
	min2 = (min2 + 1) % 60;
	if(min2) return;
	
	hour2 = (hour2 + 1) % 24;
}
     4c4:	10 92 3a 02 	sts	0x023A, r1	; 0x80023a <milisec+0x1>
     4c8:	10 92 39 02 	sts	0x0239, r1	; 0x800239 <milisec>
     4cc:	10 92 49 02 	sts	0x0249, r1	; 0x800249 <sec+0x1>
     4d0:	10 92 48 02 	sts	0x0248, r1	; 0x800248 <sec>
     4d4:	10 92 47 02 	sts	0x0247, r1	; 0x800247 <min+0x1>
     4d8:	10 92 46 02 	sts	0x0246, r1	; 0x800246 <min>
     4dc:	10 92 42 02 	sts	0x0242, r1	; 0x800242 <hour+0x1>
     4e0:	10 92 41 02 	sts	0x0241, r1	; 0x800241 <hour>
     4e4:	10 92 40 02 	sts	0x0240, r1	; 0x800240 <milisec2+0x1>
     4e8:	10 92 3f 02 	sts	0x023F, r1	; 0x80023f <milisec2>
     4ec:	10 92 34 02 	sts	0x0234, r1	; 0x800234 <sec2+0x1>
     4f0:	10 92 33 02 	sts	0x0233, r1	; 0x800233 <sec2>
     4f4:	10 92 44 02 	sts	0x0244, r1	; 0x800244 <min2+0x1>
     4f8:	10 92 43 02 	sts	0x0243, r1	; 0x800243 <min2>
     4fc:	10 92 38 02 	sts	0x0238, r1	; 0x800238 <hour2+0x1>
     500:	10 92 37 02 	sts	0x0237, r1	; 0x800237 <hour2>
     504:	08 95       	ret

00000506 <stopwatchincmilisec>:
     506:	74 de       	rcall	.-792    	; 0x1f0 <model_getwindautodata>
     508:	81 30       	cpi	r24, 0x01	; 1
     50a:	39 f5       	brne	.+78     	; 0x55a <stopwatchincmilisec+0x54>
     50c:	40 91 39 02 	lds	r20, 0x0239	; 0x800239 <milisec>
     510:	50 91 3a 02 	lds	r21, 0x023A	; 0x80023a <milisec+0x1>
     514:	4f 5f       	subi	r20, 0xFF	; 255
     516:	5f 4f       	sbci	r21, 0xFF	; 255
     518:	9a 01       	movw	r18, r20
     51a:	36 95       	lsr	r19
     51c:	27 95       	ror	r18
     51e:	36 95       	lsr	r19
     520:	27 95       	ror	r18
     522:	36 95       	lsr	r19
     524:	27 95       	ror	r18
     526:	a5 ec       	ldi	r26, 0xC5	; 197
     528:	b0 e2       	ldi	r27, 0x20	; 32
     52a:	0e 94 07 0b 	call	0x160e	; 0x160e <__umulhisi3>
     52e:	92 95       	swap	r25
     530:	82 95       	swap	r24
     532:	8f 70       	andi	r24, 0x0F	; 15
     534:	89 27       	eor	r24, r25
     536:	9f 70       	andi	r25, 0x0F	; 15
     538:	89 27       	eor	r24, r25
     53a:	68 ee       	ldi	r22, 0xE8	; 232
     53c:	73 e0       	ldi	r23, 0x03	; 3
     53e:	86 9f       	mul	r24, r22
     540:	90 01       	movw	r18, r0
     542:	87 9f       	mul	r24, r23
     544:	30 0d       	add	r19, r0
     546:	96 9f       	mul	r25, r22
     548:	30 0d       	add	r19, r0
     54a:	11 24       	eor	r1, r1
     54c:	ca 01       	movw	r24, r20
     54e:	82 1b       	sub	r24, r18
     550:	93 0b       	sbc	r25, r19
     552:	90 93 3a 02 	sts	0x023A, r25	; 0x80023a <milisec+0x1>
     556:	80 93 39 02 	sts	0x0239, r24	; 0x800239 <milisec>
     55a:	80 91 39 02 	lds	r24, 0x0239	; 0x800239 <milisec>
     55e:	90 91 3a 02 	lds	r25, 0x023A	; 0x80023a <milisec+0x1>
     562:	89 2b       	or	r24, r25
     564:	01 f5       	brne	.+64     	; 0x5a6 <stopwatchincmilisec+0xa0>
     566:	40 91 48 02 	lds	r20, 0x0248	; 0x800248 <sec>
     56a:	50 91 49 02 	lds	r21, 0x0249	; 0x800249 <sec+0x1>
     56e:	4f 5f       	subi	r20, 0xFF	; 255
     570:	5f 4f       	sbci	r21, 0xFF	; 255
     572:	9a 01       	movw	r18, r20
     574:	a9 e8       	ldi	r26, 0x89	; 137
     576:	b8 e8       	ldi	r27, 0x88	; 136
     578:	0e 94 07 0b 	call	0x160e	; 0x160e <__umulhisi3>
     57c:	96 95       	lsr	r25
     57e:	87 95       	ror	r24
     580:	92 95       	swap	r25
     582:	82 95       	swap	r24
     584:	8f 70       	andi	r24, 0x0F	; 15
     586:	89 27       	eor	r24, r25
     588:	9f 70       	andi	r25, 0x0F	; 15
     58a:	89 27       	eor	r24, r25
     58c:	6c e3       	ldi	r22, 0x3C	; 60
     58e:	68 9f       	mul	r22, r24
     590:	90 01       	movw	r18, r0
     592:	69 9f       	mul	r22, r25
     594:	30 0d       	add	r19, r0
     596:	11 24       	eor	r1, r1
     598:	ca 01       	movw	r24, r20
     59a:	82 1b       	sub	r24, r18
     59c:	93 0b       	sbc	r25, r19
     59e:	90 93 49 02 	sts	0x0249, r25	; 0x800249 <sec+0x1>
     5a2:	80 93 48 02 	sts	0x0248, r24	; 0x800248 <sec>
     5a6:	08 95       	ret

000005a8 <setInitialTime>:

void setInitialTime(uint8_t hours, uint8_t minutes, uint8_t seconds, uint16_t milliseconds)
{
	hour3 = hours;
     5a8:	90 e0       	ldi	r25, 0x00	; 0
     5aa:	90 93 4b 02 	sts	0x024B, r25	; 0x80024b <hour3+0x1>
     5ae:	80 93 4a 02 	sts	0x024A, r24	; 0x80024a <hour3>
	min3 = minutes;
     5b2:	70 e0       	ldi	r23, 0x00	; 0
     5b4:	70 93 3d 02 	sts	0x023D, r23	; 0x80023d <min3+0x1>
     5b8:	60 93 3c 02 	sts	0x023C, r22	; 0x80023c <min3>
	sec3 = seconds;
     5bc:	50 e0       	ldi	r21, 0x00	; 0
     5be:	50 93 4d 02 	sts	0x024D, r21	; 0x80024d <sec3+0x1>
     5c2:	40 93 4c 02 	sts	0x024C, r20	; 0x80024c <sec3>
	milisec3 = milliseconds;
     5c6:	30 93 4f 02 	sts	0x024F, r19	; 0x80024f <milisec3+0x1>
     5ca:	20 93 4e 02 	sts	0x024E, r18	; 0x80024e <milisec3>
     5ce:	08 95       	ret

000005d0 <timerdecmilisec>:
}

void timerdecmilisec()
{
     5d0:	cf 93       	push	r28
	uint8_t timerstate;
	uint8_t timersetting;
	timerstate = model_gettimestartdata();
     5d2:	08 de       	rcall	.-1008   	; 0x1e4 <model_gettimestartdata>
     5d4:	c8 2f       	mov	r28, r24
	timersetting = model_getwindtimerdata();
     5d6:	18 de       	rcall	.-976    	; 0x208 <model_getwindtimerdata>
     5d8:	c1 30       	cpi	r28, 0x01	; 1
	if(timerstate == 1 && timersetting >= 1)
     5da:	09 f0       	breq	.+2      	; 0x5de <timerdecmilisec+0xe>
     5dc:	56 c0       	rjmp	.+172    	; 0x68a <timerdecmilisec+0xba>
     5de:	88 23       	and	r24, r24
     5e0:	09 f4       	brne	.+2      	; 0x5e4 <timerdecmilisec+0x14>
     5e2:	53 c0       	rjmp	.+166    	; 0x68a <timerdecmilisec+0xba>
     5e4:	80 91 4e 02 	lds	r24, 0x024E	; 0x80024e <milisec3>
	{
		if (milisec3 == 0)
     5e8:	90 91 4f 02 	lds	r25, 0x024F	; 0x80024f <milisec3+0x1>
     5ec:	00 97       	sbiw	r24, 0x00	; 0
     5ee:	09 f0       	breq	.+2      	; 0x5f2 <timerdecmilisec+0x22>
     5f0:	47 c0       	rjmp	.+142    	; 0x680 <timerdecmilisec+0xb0>
     5f2:	87 ee       	ldi	r24, 0xE7	; 231
		{
			milisec3 = 999;
     5f4:	93 e0       	ldi	r25, 0x03	; 3
     5f6:	90 93 4f 02 	sts	0x024F, r25	; 0x80024f <milisec3+0x1>
     5fa:	80 93 4e 02 	sts	0x024E, r24	; 0x80024e <milisec3>
     5fe:	80 91 4c 02 	lds	r24, 0x024C	; 0x80024c <sec3>
			if (sec3 == 0)
     602:	90 91 4d 02 	lds	r25, 0x024D	; 0x80024d <sec3+0x1>
     606:	00 97       	sbiw	r24, 0x00	; 0
     608:	a9 f5       	brne	.+106    	; 0x674 <timerdecmilisec+0xa4>
     60a:	8b e3       	ldi	r24, 0x3B	; 59
			{
				sec3 = 59;
     60c:	90 e0       	ldi	r25, 0x00	; 0
     60e:	90 93 4d 02 	sts	0x024D, r25	; 0x80024d <sec3+0x1>
     612:	80 93 4c 02 	sts	0x024C, r24	; 0x80024c <sec3>
     616:	80 91 3c 02 	lds	r24, 0x023C	; 0x80023c <min3>
				if (min3 == 0)
     61a:	90 91 3d 02 	lds	r25, 0x023D	; 0x80023d <min3+0x1>
     61e:	00 97       	sbiw	r24, 0x00	; 0
     620:	19 f5       	brne	.+70     	; 0x668 <timerdecmilisec+0x98>
     622:	8b e3       	ldi	r24, 0x3B	; 59
				{
					min3 = 59;
     624:	90 e0       	ldi	r25, 0x00	; 0
     626:	90 93 3d 02 	sts	0x023D, r25	; 0x80023d <min3+0x1>
     62a:	80 93 3c 02 	sts	0x023C, r24	; 0x80023c <min3>
     62e:	80 91 4a 02 	lds	r24, 0x024A	; 0x80024a <hour3>
					if (hour3 == 0)
     632:	90 91 4b 02 	lds	r25, 0x024B	; 0x80024b <hour3+0x1>
     636:	00 97       	sbiw	r24, 0x00	; 0
     638:	89 f4       	brne	.+34     	; 0x65c <timerdecmilisec+0x8c>
     63a:	10 92 4b 02 	sts	0x024B, r1	; 0x80024b <hour3+0x1>
					{
						// 타이머가 0에 도달
						hour3 = 0;
     63e:	10 92 4a 02 	sts	0x024A, r1	; 0x80024a <hour3>
     642:	10 92 3d 02 	sts	0x023D, r1	; 0x80023d <min3+0x1>
						min3 = 0;
     646:	10 92 3c 02 	sts	0x023C, r1	; 0x80023c <min3>
     64a:	10 92 4d 02 	sts	0x024D, r1	; 0x80024d <sec3+0x1>
						sec3 = 0;
     64e:	10 92 4c 02 	sts	0x024C, r1	; 0x80024c <sec3>
     652:	10 92 4f 02 	sts	0x024F, r1	; 0x80024f <milisec3+0x1>
						milisec3 = 0;
     656:	10 92 4e 02 	sts	0x024E, r1	; 0x80024e <milisec3>
     65a:	17 c0       	rjmp	.+46     	; 0x68a <timerdecmilisec+0xba>
						return;
     65c:	01 97       	sbiw	r24, 0x01	; 1
					}
					else
					{
						hour3--;
     65e:	90 93 4b 02 	sts	0x024B, r25	; 0x80024b <hour3+0x1>
     662:	80 93 4a 02 	sts	0x024A, r24	; 0x80024a <hour3>
     666:	11 c0       	rjmp	.+34     	; 0x68a <timerdecmilisec+0xba>
     668:	01 97       	sbiw	r24, 0x01	; 1
					}
				}
				else
				{
					min3--;
     66a:	90 93 3d 02 	sts	0x023D, r25	; 0x80023d <min3+0x1>
     66e:	80 93 3c 02 	sts	0x023C, r24	; 0x80023c <min3>
     672:	0b c0       	rjmp	.+22     	; 0x68a <timerdecmilisec+0xba>
     674:	01 97       	sbiw	r24, 0x01	; 1
				}
			}
			else
			{
				sec3--;
     676:	90 93 4d 02 	sts	0x024D, r25	; 0x80024d <sec3+0x1>
     67a:	80 93 4c 02 	sts	0x024C, r24	; 0x80024c <sec3>
     67e:	05 c0       	rjmp	.+10     	; 0x68a <timerdecmilisec+0xba>
     680:	01 97       	sbiw	r24, 0x01	; 1
			}
		}
		else
		{
			milisec3--;
     682:	90 93 4f 02 	sts	0x024F, r25	; 0x80024f <milisec3+0x1>
     686:	80 93 4e 02 	sts	0x024E, r24	; 0x80024e <milisec3>
     68a:	cf 91       	pop	r28
	}
	else
	{
		return;
	}
}
     68c:	08 95       	ret

0000068e <clear>:
     68e:	80 e0       	ldi	r24, 0x00	; 0
	 }
 }

void clear()
{
	model_setwindtimerdata(0);
     690:	be dd       	rcall	.-1156   	; 0x20e <model_setwindtimerdata>
	model_settimestartdata(0);
     692:	80 e0       	ldi	r24, 0x00	; 0
     694:	aa dd       	rcall	.-1196   	; 0x1ea <model_settimestartdata>
	model_setwindstatedata(0);
     696:	80 e0       	ldi	r24, 0x00	; 0
     698:	b4 dd       	rcall	.-1176   	; 0x202 <model_setwindstatedata>
	model_setwindautodata(0);
     69a:	80 e0       	ldi	r24, 0x00	; 0
     69c:	ac cd       	rjmp	.-1192   	; 0x1f6 <model_setwindautodata>
     69e:	08 95       	ret

000006a0 <stopreset>:
     6a0:	10 92 40 02 	sts	0x0240, r1	; 0x800240 <milisec2+0x1>
}

void stopreset()
{
	milisec2 = 0;
     6a4:	10 92 3f 02 	sts	0x023F, r1	; 0x80023f <milisec2>
	sec2 = 0;
     6a8:	10 92 34 02 	sts	0x0234, r1	; 0x800234 <sec2+0x1>
     6ac:	10 92 33 02 	sts	0x0233, r1	; 0x800233 <sec2>
	min2 = 0;
     6b0:	10 92 44 02 	sts	0x0244, r1	; 0x800244 <min2+0x1>
     6b4:	10 92 43 02 	sts	0x0243, r1	; 0x800243 <min2>
	hour2 = 0;
     6b8:	10 92 38 02 	sts	0x0238, r1	; 0x800238 <hour2+0x1>
     6bc:	10 92 37 02 	sts	0x0237, r1	; 0x800237 <hour2>
     6c0:	08 95       	ret

000006c2 <fndtimestart>:
}

void fndtimestart()
{
	switch(showtime)
     6c2:	80 91 3b 02 	lds	r24, 0x023B	; 0x80023b <showtime>
     6c6:	82 30       	cpi	r24, 0x02	; 2
     6c8:	61 f0       	breq	.+24     	; 0x6e2 <fndtimestart+0x20>
     6ca:	18 f4       	brcc	.+6      	; 0x6d2 <fndtimestart+0x10>
     6cc:	81 30       	cpi	r24, 0x01	; 1
     6ce:	39 f0       	breq	.+14     	; 0x6de <fndtimestart+0x1c>
     6d0:	08 95       	ret
     6d2:	83 30       	cpi	r24, 0x03	; 3
     6d4:	69 f1       	breq	.+90     	; 0x730 <fndtimestart+0x6e>
     6d6:	84 30       	cpi	r24, 0x04	; 4
     6d8:	09 f4       	brne	.+2      	; 0x6dc <fndtimestart+0x1a>
     6da:	53 c0       	rjmp	.+166    	; 0x782 <fndtimestart+0xc0>
     6dc:	08 95       	ret
	{
		case 1:
		clear();
     6de:	d7 cf       	rjmp	.-82     	; 0x68e <clear>
		break;
     6e0:	08 95       	ret
		case 2:
		Presenter_dispstopwatchdata(3, min3, sec3, milisec3);
     6e2:	20 91 4e 02 	lds	r18, 0x024E	; 0x80024e <milisec3>
     6e6:	30 91 4f 02 	lds	r19, 0x024F	; 0x80024f <milisec3+0x1>
     6ea:	40 91 4c 02 	lds	r20, 0x024C	; 0x80024c <sec3>
     6ee:	60 91 3c 02 	lds	r22, 0x023C	; 0x80023c <min3>
     6f2:	83 e0       	ldi	r24, 0x03	; 3
     6f4:	fa dd       	rcall	.-1036   	; 0x2ea <Presenter_dispstopwatchdata>
		if(min3 == 0 && sec3 == 0 && milisec3 == 0)
     6f6:	80 91 3c 02 	lds	r24, 0x023C	; 0x80023c <min3>
     6fa:	90 91 3d 02 	lds	r25, 0x023D	; 0x80023d <min3+0x1>
     6fe:	89 2b       	or	r24, r25
     700:	09 f0       	breq	.+2      	; 0x704 <fndtimestart+0x42>
     702:	62 c0       	rjmp	.+196    	; 0x7c8 <fndtimestart+0x106>
     704:	80 91 4c 02 	lds	r24, 0x024C	; 0x80024c <sec3>
     708:	90 91 4d 02 	lds	r25, 0x024D	; 0x80024d <sec3+0x1>
     70c:	89 2b       	or	r24, r25
     70e:	09 f0       	breq	.+2      	; 0x712 <fndtimestart+0x50>
     710:	5b c0       	rjmp	.+182    	; 0x7c8 <fndtimestart+0x106>
     712:	80 91 4e 02 	lds	r24, 0x024E	; 0x80024e <milisec3>
     716:	90 91 4f 02 	lds	r25, 0x024F	; 0x80024f <milisec3+0x1>
     71a:	89 2b       	or	r24, r25
     71c:	09 f0       	breq	.+2      	; 0x720 <fndtimestart+0x5e>
     71e:	54 c0       	rjmp	.+168    	; 0x7c8 <fndtimestart+0x106>
		{
			showtime = 0;
     720:	10 92 3b 02 	sts	0x023B, r1	; 0x80023b <showtime>
			model_setwindtimerdata(showtime);
     724:	80 e0       	ldi	r24, 0x00	; 0
			model_settimestartdata(0);
     726:	73 dd       	rcall	.-1306   	; 0x20e <model_setwindtimerdata>
     728:	80 e0       	ldi	r24, 0x00	; 0
     72a:	5f dd       	rcall	.-1346   	; 0x1ea <model_settimestartdata>
			buzzer2_timeover();
     72c:	85 c3       	rjmp	.+1802   	; 0xe38 <buzzer2_timeover>
     72e:	08 95       	ret
     730:	85 e0       	ldi	r24, 0x05	; 5
		}
		break;
		case 3:
		hour2 = 5;
     732:	90 e0       	ldi	r25, 0x00	; 0
     734:	90 93 38 02 	sts	0x0238, r25	; 0x800238 <hour2+0x1>
     738:	80 93 37 02 	sts	0x0237, r24	; 0x800237 <hour2>
     73c:	20 91 4e 02 	lds	r18, 0x024E	; 0x80024e <milisec3>
		Presenter_dispstopwatchdata(5, min3, sec3, milisec3);
     740:	30 91 4f 02 	lds	r19, 0x024F	; 0x80024f <milisec3+0x1>
     744:	40 91 4c 02 	lds	r20, 0x024C	; 0x80024c <sec3>
     748:	60 91 3c 02 	lds	r22, 0x023C	; 0x80023c <min3>
     74c:	ce dd       	rcall	.-1124   	; 0x2ea <Presenter_dispstopwatchdata>
     74e:	80 91 3c 02 	lds	r24, 0x023C	; 0x80023c <min3>
		if(min3 == 0 && sec3 == 0 && milisec3 == 0)
     752:	90 91 3d 02 	lds	r25, 0x023D	; 0x80023d <min3+0x1>
     756:	89 2b       	or	r24, r25
     758:	b9 f5       	brne	.+110    	; 0x7c8 <fndtimestart+0x106>
     75a:	80 91 4c 02 	lds	r24, 0x024C	; 0x80024c <sec3>
     75e:	90 91 4d 02 	lds	r25, 0x024D	; 0x80024d <sec3+0x1>
     762:	89 2b       	or	r24, r25
     764:	89 f5       	brne	.+98     	; 0x7c8 <fndtimestart+0x106>
     766:	80 91 4e 02 	lds	r24, 0x024E	; 0x80024e <milisec3>
     76a:	90 91 4f 02 	lds	r25, 0x024F	; 0x80024f <milisec3+0x1>
     76e:	89 2b       	or	r24, r25
     770:	59 f5       	brne	.+86     	; 0x7c8 <fndtimestart+0x106>
		{
			showtime = 0;
     772:	10 92 3b 02 	sts	0x023B, r1	; 0x80023b <showtime>
			model_setwindtimerdata(showtime);
     776:	80 e0       	ldi	r24, 0x00	; 0
     778:	4a dd       	rcall	.-1388   	; 0x20e <model_setwindtimerdata>
			model_settimestartdata(0);
     77a:	80 e0       	ldi	r24, 0x00	; 0
     77c:	36 dd       	rcall	.-1428   	; 0x1ea <model_settimestartdata>
     77e:	5c c3       	rjmp	.+1720   	; 0xe38 <buzzer2_timeover>
			buzzer2_timeover();
     780:	08 95       	ret
     782:	20 91 4e 02 	lds	r18, 0x024E	; 0x80024e <milisec3>
		}
		break;
		case 4:

		Presenter_dispstopwatchdata(7, min3, sec3, milisec3);
     786:	30 91 4f 02 	lds	r19, 0x024F	; 0x80024f <milisec3+0x1>
     78a:	40 91 4c 02 	lds	r20, 0x024C	; 0x80024c <sec3>
     78e:	60 91 3c 02 	lds	r22, 0x023C	; 0x80023c <min3>
     792:	87 e0       	ldi	r24, 0x07	; 7
     794:	aa dd       	rcall	.-1196   	; 0x2ea <Presenter_dispstopwatchdata>
     796:	80 91 3c 02 	lds	r24, 0x023C	; 0x80023c <min3>
		if(min3 == 0 && sec3 == 0 && milisec3 == 0) // 취소하면 시간 설정 이어서 해야함
     79a:	90 91 3d 02 	lds	r25, 0x023D	; 0x80023d <min3+0x1>
     79e:	89 2b       	or	r24, r25
     7a0:	99 f4       	brne	.+38     	; 0x7c8 <fndtimestart+0x106>
     7a2:	80 91 4c 02 	lds	r24, 0x024C	; 0x80024c <sec3>
     7a6:	90 91 4d 02 	lds	r25, 0x024D	; 0x80024d <sec3+0x1>
     7aa:	89 2b       	or	r24, r25
     7ac:	69 f4       	brne	.+26     	; 0x7c8 <fndtimestart+0x106>
     7ae:	80 91 4e 02 	lds	r24, 0x024E	; 0x80024e <milisec3>
     7b2:	90 91 4f 02 	lds	r25, 0x024F	; 0x80024f <milisec3+0x1>
     7b6:	89 2b       	or	r24, r25
		{
			showtime = 0;
     7b8:	39 f4       	brne	.+14     	; 0x7c8 <fndtimestart+0x106>
     7ba:	10 92 3b 02 	sts	0x023B, r1	; 0x80023b <showtime>
			model_setwindtimerdata(showtime);
     7be:	80 e0       	ldi	r24, 0x00	; 0
     7c0:	26 dd       	rcall	.-1460   	; 0x20e <model_setwindtimerdata>
			model_settimestartdata(0);
     7c2:	80 e0       	ldi	r24, 0x00	; 0
     7c4:	12 dd       	rcall	.-1500   	; 0x1ea <model_settimestartdata>
     7c6:	38 c3       	rjmp	.+1648   	; 0xe38 <buzzer2_timeover>
			buzzer2_timeover();
     7c8:	08 95       	ret

000007ca <fndtimerset>:
     7ca:	80 91 3b 02 	lds	r24, 0x023B	; 0x80023b <showtime>
	}
}

void fndtimerset()
{
	switch(showtime)
     7ce:	82 30       	cpi	r24, 0x02	; 2
     7d0:	c1 f0       	breq	.+48     	; 0x802 <fndtimerset+0x38>
     7d2:	18 f4       	brcc	.+6      	; 0x7da <fndtimerset+0x10>
     7d4:	81 30       	cpi	r24, 0x01	; 1
     7d6:	39 f0       	breq	.+14     	; 0x7e6 <fndtimerset+0x1c>
     7d8:	08 95       	ret
     7da:	83 30       	cpi	r24, 0x03	; 3
     7dc:	39 f1       	breq	.+78     	; 0x82c <fndtimerset+0x62>
     7de:	84 30       	cpi	r24, 0x04	; 4
     7e0:	09 f4       	brne	.+2      	; 0x7e4 <fndtimerset+0x1a>
     7e2:	39 c0       	rjmp	.+114    	; 0x856 <fndtimerset+0x8c>
     7e4:	08 95       	ret
	{
		case 1:
		{
			prevsound = 0;
     7e6:	10 92 3e 02 	sts	0x023E, r1	; 0x80023e <prevsound>
			showtime = 1;
     7ea:	81 e0       	ldi	r24, 0x01	; 1
     7ec:	80 93 3b 02 	sts	0x023B, r24	; 0x80023b <showtime>
			FND_setFndData(0000);
     7f0:	80 e0       	ldi	r24, 0x00	; 0
     7f2:	90 e0       	ldi	r25, 0x00	; 0
     7f4:	4e d5       	rcall	.+2716   	; 0x1292 <FND_setFndData>
			model_setwindtimerdata(showtime);
     7f6:	80 91 3b 02 	lds	r24, 0x023B	; 0x80023b <showtime>
			stopreset();
     7fa:	09 dd       	rcall	.-1518   	; 0x20e <model_setwindtimerdata>
     7fc:	51 df       	rcall	.-350    	; 0x6a0 <stopreset>
			clear();
     7fe:	47 cf       	rjmp	.-370    	; 0x68e <clear>
     800:	08 95       	ret
		}
		break;
     802:	10 92 3e 02 	sts	0x023E, r1	; 0x80023e <prevsound>
		case 2:
		{
			prevsound = 0;
     806:	20 e0       	ldi	r18, 0x00	; 0
			setInitialTime(0,3,0,0);
     808:	30 e0       	ldi	r19, 0x00	; 0
     80a:	40 e0       	ldi	r20, 0x00	; 0
     80c:	63 e0       	ldi	r22, 0x03	; 3
     80e:	80 e0       	ldi	r24, 0x00	; 0
     810:	cb de       	rcall	.-618    	; 0x5a8 <setInitialTime>
     812:	20 e0       	ldi	r18, 0x00	; 0
			Presenter_dispstopwatchdata2(0, 3, 0, 0);
     814:	30 e0       	ldi	r19, 0x00	; 0
     816:	40 e0       	ldi	r20, 0x00	; 0
     818:	63 e0       	ldi	r22, 0x03	; 3
     81a:	80 e0       	ldi	r24, 0x00	; 0
     81c:	de dd       	rcall	.-1092   	; 0x3da <Presenter_dispstopwatchdata2>
			showtime = 2;
     81e:	82 e0       	ldi	r24, 0x02	; 2
     820:	80 93 3b 02 	sts	0x023B, r24	; 0x80023b <showtime>
			model_setwindtimerdata(showtime);
     824:	f4 dc       	rcall	.-1560   	; 0x20e <model_setwindtimerdata>
     826:	80 e0       	ldi	r24, 0x00	; 0
			model_settimestartdata(0);
     828:	e0 cc       	rjmp	.-1600   	; 0x1ea <model_settimestartdata>
     82a:	08 95       	ret
     82c:	10 92 3e 02 	sts	0x023E, r1	; 0x80023e <prevsound>

		}
		break;
		case 3:
		{
			prevsound = 0;
     830:	20 e0       	ldi	r18, 0x00	; 0
			setInitialTime(0,0,5,0); // 확인용으로 5초로 함
     832:	30 e0       	ldi	r19, 0x00	; 0
     834:	45 e0       	ldi	r20, 0x05	; 5
     836:	60 e0       	ldi	r22, 0x00	; 0
     838:	80 e0       	ldi	r24, 0x00	; 0
     83a:	b6 de       	rcall	.-660    	; 0x5a8 <setInitialTime>
     83c:	20 e0       	ldi	r18, 0x00	; 0
			Presenter_dispstopwatchdata2(0, 5, 0, 0);
     83e:	30 e0       	ldi	r19, 0x00	; 0
     840:	40 e0       	ldi	r20, 0x00	; 0
     842:	65 e0       	ldi	r22, 0x05	; 5
     844:	80 e0       	ldi	r24, 0x00	; 0
     846:	c9 dd       	rcall	.-1134   	; 0x3da <Presenter_dispstopwatchdata2>
			showtime = 3;
     848:	83 e0       	ldi	r24, 0x03	; 3
     84a:	80 93 3b 02 	sts	0x023B, r24	; 0x80023b <showtime>
			model_setwindtimerdata(showtime);
     84e:	df dc       	rcall	.-1602   	; 0x20e <model_setwindtimerdata>
			model_settimestartdata(0);
     850:	80 e0       	ldi	r24, 0x00	; 0
     852:	cb cc       	rjmp	.-1642   	; 0x1ea <model_settimestartdata>
     854:	08 95       	ret

		}
		break;
     856:	10 92 3e 02 	sts	0x023E, r1	; 0x80023e <prevsound>
		case 4:
		{
			prevsound = 0;
			setInitialTime(0,7,0,0);
     85a:	20 e0       	ldi	r18, 0x00	; 0
     85c:	30 e0       	ldi	r19, 0x00	; 0
     85e:	40 e0       	ldi	r20, 0x00	; 0
     860:	67 e0       	ldi	r22, 0x07	; 7
     862:	80 e0       	ldi	r24, 0x00	; 0
			Presenter_dispstopwatchdata2(0, 7, 0, 0);
     864:	a1 de       	rcall	.-702    	; 0x5a8 <setInitialTime>
     866:	20 e0       	ldi	r18, 0x00	; 0
     868:	30 e0       	ldi	r19, 0x00	; 0
     86a:	40 e0       	ldi	r20, 0x00	; 0
     86c:	67 e0       	ldi	r22, 0x07	; 7
     86e:	80 e0       	ldi	r24, 0x00	; 0
     870:	b4 dd       	rcall	.-1176   	; 0x3da <Presenter_dispstopwatchdata2>
			showtime = 4;
     872:	84 e0       	ldi	r24, 0x04	; 4
     874:	80 93 3b 02 	sts	0x023B, r24	; 0x80023b <showtime>
			model_setwindtimerdata(showtime);
     878:	ca dc       	rcall	.-1644   	; 0x20e <model_setwindtimerdata>
     87a:	80 e0       	ldi	r24, 0x00	; 0
			model_settimestartdata(0);
     87c:	b6 cc       	rjmp	.-1684   	; 0x1ea <model_settimestartdata>
     87e:	08 95       	ret

00000880 <fndshow>:
     880:	c3 dc       	rcall	.-1658   	; 0x208 <model_getwindtimerdata>
     882:	80 93 3b 02 	sts	0x023B, r24	; 0x80023b <showtime>
}

 void fndshow()
 {
	 showtime = model_getwindtimerdata();
	 timestart = model_gettimestartdata();
     886:	ae dc       	rcall	.-1700   	; 0x1e4 <model_gettimestartdata>
     888:	80 93 50 02 	sts	0x0250, r24	; 0x800250 <timestart>
     88c:	81 30       	cpi	r24, 0x01	; 1
	 if(timestart == 1 && showtime == 0)
     88e:	71 f4       	brne	.+28     	; 0x8ac <fndshow+0x2c>
     890:	80 91 3b 02 	lds	r24, 0x023B	; 0x80023b <showtime>
     894:	81 11       	cpse	r24, r1
     896:	0a c0       	rjmp	.+20     	; 0x8ac <fndshow+0x2c>
     898:	81 e0       	ldi	r24, 0x01	; 1
	 {
		 showtime = 1;
     89a:	80 93 3b 02 	sts	0x023B, r24	; 0x80023b <showtime>
     89e:	10 92 50 02 	sts	0x0250, r1	; 0x800250 <timestart>
		 timestart = 0;
		 model_settimestartdata(timestart);
     8a2:	80 e0       	ldi	r24, 0x00	; 0
     8a4:	a2 dc       	rcall	.-1724   	; 0x1ea <model_settimestartdata>
		 model_setwindtimerdata(showtime);
     8a6:	80 91 3b 02 	lds	r24, 0x023B	; 0x80023b <showtime>
     8aa:	b1 dc       	rcall	.-1694   	; 0x20e <model_setwindtimerdata>
     8ac:	80 91 50 02 	lds	r24, 0x0250	; 0x800250 <timestart>
	 }
	 if(timestart == 1)
     8b0:	81 30       	cpi	r24, 0x01	; 1
     8b2:	11 f4       	brne	.+4      	; 0x8b8 <fndshow+0x38>
	 {
		 fndtimestart();
     8b4:	06 cf       	rjmp	.-500    	; 0x6c2 <fndtimestart>
     8b6:	08 95       	ret
	 }
	 else if(timestart == 0)
     8b8:	81 11       	cpse	r24, r1
     8ba:	01 c0       	rjmp	.+2      	; 0x8be <fndshow+0x3e>
	 {
		 fndtimerset();
     8bc:	86 cf       	rjmp	.-244    	; 0x7ca <fndtimerset>
     8be:	08 95       	ret

000008c0 <__vector_16>:
     8c0:	1f 92       	push	r1
uint8_t state, timerfan, timerset;
uint8_t autonext, automode,sec,fndstate;
uint16_t milisec2, sec2 ,min2, hour2;

ISR(TIMER0_OVF_vect)
{
     8c2:	0f 92       	push	r0
     8c4:	0f b6       	in	r0, 0x3f	; 63
     8c6:	0f 92       	push	r0
     8c8:	11 24       	eor	r1, r1
     8ca:	0b b6       	in	r0, 0x3b	; 59
     8cc:	0f 92       	push	r0
     8ce:	2f 93       	push	r18
     8d0:	3f 93       	push	r19
     8d2:	4f 93       	push	r20
     8d4:	5f 93       	push	r21
     8d6:	6f 93       	push	r22
     8d8:	7f 93       	push	r23
     8da:	8f 93       	push	r24
     8dc:	9f 93       	push	r25
     8de:	af 93       	push	r26
     8e0:	bf 93       	push	r27
     8e2:	ef 93       	push	r30
     8e4:	ff 93       	push	r31
	if(model_getwindstatedata() == 0 && model_getwindtimerdata() <= 1)
     8e6:	8a dc       	rcall	.-1772   	; 0x1fc <model_getwindstatedata>
     8e8:	81 11       	cpse	r24, r1
     8ea:	09 c0       	rjmp	.+18     	; 0x8fe <__vector_16+0x3e>
     8ec:	8d dc       	rcall	.-1766   	; 0x208 <model_getwindtimerdata>
     8ee:	82 30       	cpi	r24, 0x02	; 2
     8f0:	30 f4       	brcc	.+12     	; 0x8fe <__vector_16+0x3e>
     8f2:	80 e0       	ldi	r24, 0x00	; 0
	{
		FND_dispfan(0000);
     8f4:	90 e0       	ldi	r25, 0x00	; 0
     8f6:	ce d3       	rcall	.+1948   	; 0x1094 <FND_dispfan>
     8f8:	82 e8       	ldi	r24, 0x82	; 130
		TCNT0 = 130;
     8fa:	82 bf       	out	0x32, r24	; 50
		return;
     8fc:	0c c0       	rjmp	.+24     	; 0x916 <__vector_16+0x56>
	}
	if(model_getwindstatedata() >= 1)
     8fe:	7e dc       	rcall	.-1796   	; 0x1fc <model_getwindstatedata>
     900:	88 23       	and	r24, r24
     902:	31 f0       	breq	.+12     	; 0x910 <__vector_16+0x50>
	{
		FND_dispfan(1111);
     904:	87 e5       	ldi	r24, 0x57	; 87
     906:	94 e0       	ldi	r25, 0x04	; 4
     908:	c5 d3       	rcall	.+1930   	; 0x1094 <FND_dispfan>
		TCNT0 = 130;
     90a:	82 e8       	ldi	r24, 0x82	; 130
     90c:	82 bf       	out	0x32, r24	; 50
		return;
     90e:	03 c0       	rjmp	.+6      	; 0x916 <__vector_16+0x56>
	}
	FND_ISR_Process();
     910:	c5 d4       	rcall	.+2442   	; 0x129c <FND_ISR_Process>
     912:	82 e8       	ldi	r24, 0x82	; 130
	TCNT0 = 130;
     914:	82 bf       	out	0x32, r24	; 50
     916:	ff 91       	pop	r31
}
     918:	ef 91       	pop	r30
     91a:	bf 91       	pop	r27
     91c:	af 91       	pop	r26
     91e:	9f 91       	pop	r25
     920:	8f 91       	pop	r24
     922:	7f 91       	pop	r23
     924:	6f 91       	pop	r22
     926:	5f 91       	pop	r21
     928:	4f 91       	pop	r20
     92a:	3f 91       	pop	r19
     92c:	2f 91       	pop	r18
     92e:	0f 90       	pop	r0
     930:	0b be       	out	0x3b, r0	; 59
     932:	0f 90       	pop	r0
     934:	0f be       	out	0x3f, r0	; 63
     936:	0f 90       	pop	r0
     938:	1f 90       	pop	r1
     93a:	18 95       	reti

0000093c <__vector_9>:
     93c:	1f 92       	push	r1

ISR(TIMER2_COMP_vect)
{
     93e:	0f 92       	push	r0
     940:	0f b6       	in	r0, 0x3f	; 63
     942:	0f 92       	push	r0
     944:	11 24       	eor	r1, r1
     946:	0b b6       	in	r0, 0x3b	; 59
     948:	0f 92       	push	r0
     94a:	2f 93       	push	r18
     94c:	3f 93       	push	r19
     94e:	4f 93       	push	r20
     950:	5f 93       	push	r21
     952:	6f 93       	push	r22
     954:	7f 93       	push	r23
     956:	8f 93       	push	r24
     958:	9f 93       	push	r25
     95a:	af 93       	push	r26
     95c:	bf 93       	push	r27
     95e:	ef 93       	push	r30
     960:	ff 93       	push	r31
	stopwatchincmilisec();
     962:	d1 dd       	rcall	.-1118   	; 0x506 <stopwatchincmilisec>
	timerdecmilisec();
     964:	35 de       	rcall	.-918    	; 0x5d0 <timerdecmilisec>
     966:	ff 91       	pop	r31
}
     968:	ef 91       	pop	r30
     96a:	bf 91       	pop	r27
     96c:	af 91       	pop	r26
     96e:	9f 91       	pop	r25
     970:	8f 91       	pop	r24
     972:	7f 91       	pop	r23
     974:	6f 91       	pop	r22
     976:	5f 91       	pop	r21
     978:	4f 91       	pop	r20
     97a:	3f 91       	pop	r19
     97c:	2f 91       	pop	r18
     97e:	0f 90       	pop	r0
     980:	0b be       	out	0x3b, r0	; 59
     982:	0f 90       	pop	r0
     984:	0f be       	out	0x3f, r0	; 63
     986:	0f 90       	pop	r0
     988:	1f 90       	pop	r1
     98a:	18 95       	reti

0000098c <__vector_18>:
     98c:	1f 92       	push	r1

ISR(USART0_RX_vect)
{
     98e:	0f 92       	push	r0
     990:	0f b6       	in	r0, 0x3f	; 63
     992:	0f 92       	push	r0
     994:	11 24       	eor	r1, r1
     996:	0b b6       	in	r0, 0x3b	; 59
     998:	0f 92       	push	r0
     99a:	2f 93       	push	r18
     99c:	3f 93       	push	r19
     99e:	4f 93       	push	r20
     9a0:	5f 93       	push	r21
     9a2:	6f 93       	push	r22
     9a4:	7f 93       	push	r23
     9a6:	8f 93       	push	r24
     9a8:	9f 93       	push	r25
     9aa:	af 93       	push	r26
     9ac:	bf 93       	push	r27
     9ae:	ef 93       	push	r30
     9b0:	ff 93       	push	r31
	UART0_ISR_Process();
     9b2:	ed d5       	rcall	.+3034   	; 0x158e <UART0_ISR_Process>
}
     9b4:	ff 91       	pop	r31
     9b6:	ef 91       	pop	r30
     9b8:	bf 91       	pop	r27
     9ba:	af 91       	pop	r26
     9bc:	9f 91       	pop	r25
     9be:	8f 91       	pop	r24
     9c0:	7f 91       	pop	r23
     9c2:	6f 91       	pop	r22
     9c4:	5f 91       	pop	r21
     9c6:	4f 91       	pop	r20
     9c8:	3f 91       	pop	r19
     9ca:	2f 91       	pop	r18
     9cc:	0f 90       	pop	r0
     9ce:	0b be       	out	0x3b, r0	; 59
     9d0:	0f 90       	pop	r0
     9d2:	0f be       	out	0x3f, r0	; 63
     9d4:	0f 90       	pop	r0
     9d6:	1f 90       	pop	r1
     9d8:	18 95       	reti

000009da <wind_init>:



void wind_init()
{
	UART0_init();
     9da:	c6 d5       	rcall	.+2956   	; 0x1568 <UART0_init>
	TIM0init();
     9dc:	ac d5       	rcall	.+2904   	; 0x1536 <TIM0init>
	TIM2init();
     9de:	b4 d5       	rcall	.+2920   	; 0x1548 <TIM2init>
	Gpioinit();
     9e0:	63 d4       	rcall	.+2246   	; 0x12a8 <Gpioinit>
	listen_init();
     9e2:	74 db       	rcall	.-2328   	; 0xcc <listen_init>
	presenterinit();
     9e4:	17 dc       	rcall	.-2002   	; 0x214 <presenterinit>
     9e6:	35 d5       	rcall	.+2666   	; 0x1452 <Buzzer_init>
	Buzzer_init();
     9e8:	95 d1       	rcall	.+810    	; 0xd14 <Buzzer2_init>
     9ea:	6c dd       	rcall	.-1320   	; 0x4c4 <stopwatchinit>
	Buzzer2_init();
     9ec:	10 92 40 02 	sts	0x0240, r1	; 0x800240 <milisec2+0x1>
	stopwatchinit();
     9f0:	10 92 3f 02 	sts	0x023F, r1	; 0x80023f <milisec2>
	milisec2 = 0;
     9f4:	10 92 34 02 	sts	0x0234, r1	; 0x800234 <sec2+0x1>
     9f8:	10 92 33 02 	sts	0x0233, r1	; 0x800233 <sec2>
	sec2 = 0;
     9fc:	10 92 44 02 	sts	0x0244, r1	; 0x800244 <min2+0x1>
     a00:	10 92 43 02 	sts	0x0243, r1	; 0x800243 <min2>
	min2 = 0;
     a04:	10 92 38 02 	sts	0x0238, r1	; 0x800238 <hour2+0x1>
	hour2 = 0;
     a08:	10 92 37 02 	sts	0x0237, r1	; 0x800237 <hour2>
     a0c:	59 d1       	rcall	.+690    	; 0xcc0 <Buzzer2_soundOn>

	Buzzer2_soundOn();
     a0e:	8f d1       	rcall	.+798    	; 0xd2e <buzzer2_buttonset>
     a10:	5b c1       	rjmp	.+694    	; 0xcc8 <Buzzer2_soundOff>
	buzzer2_buttonset();
     a12:	08 95       	ret

00000a14 <windauto>:
     a14:	80 91 53 02 	lds	r24, 0x0253	; 0x800253 <state>
	Buzzer2_soundOff();
     a18:	81 30       	cpi	r24, 0x01	; 1
     a1a:	c1 f0       	breq	.+48     	; 0xa4c <windauto+0x38>
	}
}

void windauto()
{
	switch(state)
     a1c:	30 f0       	brcs	.+12     	; 0xa2a <windauto+0x16>
     a1e:	82 30       	cpi	r24, 0x02	; 2
     a20:	41 f1       	breq	.+80     	; 0xa72 <windauto+0x5e>
     a22:	83 30       	cpi	r24, 0x03	; 3
     a24:	09 f4       	brne	.+2      	; 0xa28 <windauto+0x14>
     a26:	39 c0       	rjmp	.+114    	; 0xa9a <windauto+0x86>
     a28:	08 95       	ret
	{
		case 0:
		showstrength(state);
     a2a:	f8 db       	rcall	.-2064   	; 0x21c <showstrength>
		Buzzer_soundOff();
     a2c:	e6 d4       	rcall	.+2508   	; 0x13fa <Buzzer_soundOff>
     a2e:	80 91 53 02 	lds	r24, 0x0253	; 0x800253 <state>
		model_setwindstatedata(state);
     a32:	e7 db       	rcall	.-2098   	; 0x202 <model_setwindstatedata>
     a34:	80 91 48 02 	lds	r24, 0x0248	; 0x800248 <sec>
		if(sec == 2)
     a38:	82 30       	cpi	r24, 0x02	; 2
     a3a:	09 f0       	breq	.+2      	; 0xa3e <windauto+0x2a>
     a3c:	41 c0       	rjmp	.+130    	; 0xac0 <windauto+0xac>
     a3e:	81 e0       	ldi	r24, 0x01	; 1
		{
			state = 1;
     a40:	80 93 53 02 	sts	0x0253, r24	; 0x800253 <state>
			model_setwindstatedata(state);
     a44:	de db       	rcall	.-2116   	; 0x202 <model_setwindstatedata>
			sec = 0;
     a46:	10 92 48 02 	sts	0x0248, r1	; 0x800248 <sec>
		}
		break;
		case 1:
		showstrength(state);
     a4a:	08 95       	ret
		Buzzer_soundOn();
     a4c:	e7 db       	rcall	.-2098   	; 0x21c <showstrength>
     a4e:	cf d4       	rcall	.+2462   	; 0x13ee <Buzzer_soundOn>
		Buzzer_buttonOn(4, 1000);
     a50:	68 ee       	ldi	r22, 0xE8	; 232
     a52:	73 e0       	ldi	r23, 0x03	; 3
     a54:	84 e0       	ldi	r24, 0x04	; 4
     a56:	0e d5       	rcall	.+2588   	; 0x1474 <Buzzer_buttonOn>
		model_setwindstatedata(state);
     a58:	80 91 53 02 	lds	r24, 0x0253	; 0x800253 <state>
     a5c:	d2 db       	rcall	.-2140   	; 0x202 <model_setwindstatedata>
		if(sec == 2)
     a5e:	80 91 48 02 	lds	r24, 0x0248	; 0x800248 <sec>
     a62:	82 30       	cpi	r24, 0x02	; 2
		{
			state = 2;
     a64:	69 f5       	brne	.+90     	; 0xac0 <windauto+0xac>
     a66:	80 93 53 02 	sts	0x0253, r24	; 0x800253 <state>
			model_setwindstatedata(state);
			sec = 0;
     a6a:	cb db       	rcall	.-2154   	; 0x202 <model_setwindstatedata>
     a6c:	10 92 48 02 	sts	0x0248, r1	; 0x800248 <sec>
		}
		break;
		case 2:
		showstrength(state);
     a70:	08 95       	ret
		Buzzer_soundOn();
     a72:	d4 db       	rcall	.-2136   	; 0x21c <showstrength>
     a74:	bc d4       	rcall	.+2424   	; 0x13ee <Buzzer_soundOn>
		Buzzer_buttonOn(2, 1600);
     a76:	60 e4       	ldi	r22, 0x40	; 64
     a78:	76 e0       	ldi	r23, 0x06	; 6
     a7a:	82 e0       	ldi	r24, 0x02	; 2
     a7c:	fb d4       	rcall	.+2550   	; 0x1474 <Buzzer_buttonOn>
		model_setwindstatedata(state);
     a7e:	80 91 53 02 	lds	r24, 0x0253	; 0x800253 <state>
     a82:	bf db       	rcall	.-2178   	; 0x202 <model_setwindstatedata>
		if(sec == 2)
     a84:	80 91 48 02 	lds	r24, 0x0248	; 0x800248 <sec>
     a88:	82 30       	cpi	r24, 0x02	; 2
		{
			state = 3;
     a8a:	d1 f4       	brne	.+52     	; 0xac0 <windauto+0xac>
     a8c:	83 e0       	ldi	r24, 0x03	; 3
			model_setwindstatedata(state);
     a8e:	80 93 53 02 	sts	0x0253, r24	; 0x800253 <state>
			sec = 0;
     a92:	b7 db       	rcall	.-2194   	; 0x202 <model_setwindstatedata>
     a94:	10 92 48 02 	sts	0x0248, r1	; 0x800248 <sec>
		}
		break;
		case 3:
		showstrength(state);
     a98:	08 95       	ret
     a9a:	c0 db       	rcall	.-2176   	; 0x21c <showstrength>
		Buzzer_soundOn();
     a9c:	a8 d4       	rcall	.+2384   	; 0x13ee <Buzzer_soundOn>
		Buzzer_buttonOn(1, 2000);
     a9e:	60 ed       	ldi	r22, 0xD0	; 208
     aa0:	77 e0       	ldi	r23, 0x07	; 7
     aa2:	81 e0       	ldi	r24, 0x01	; 1
     aa4:	e7 d4       	rcall	.+2510   	; 0x1474 <Buzzer_buttonOn>
     aa6:	80 91 53 02 	lds	r24, 0x0253	; 0x800253 <state>
		model_setwindstatedata(state);
     aaa:	ab db       	rcall	.-2218   	; 0x202 <model_setwindstatedata>
     aac:	80 91 48 02 	lds	r24, 0x0248	; 0x800248 <sec>
		if(sec == 2)
     ab0:	82 30       	cpi	r24, 0x02	; 2
     ab2:	31 f4       	brne	.+12     	; 0xac0 <windauto+0xac>
     ab4:	81 e0       	ldi	r24, 0x01	; 1
     ab6:	80 93 53 02 	sts	0x0253, r24	; 0x800253 <state>
		{
			state = 1;
     aba:	a3 db       	rcall	.-2234   	; 0x202 <model_setwindstatedata>
     abc:	10 92 48 02 	sts	0x0248, r1	; 0x800248 <sec>
			model_setwindstatedata(state);
     ac0:	08 95       	ret

00000ac2 <windhand>:
			sec = 0;
     ac2:	80 91 53 02 	lds	r24, 0x0253	; 0x800253 <state>
     ac6:	81 30       	cpi	r24, 0x01	; 1
	}
}

void windhand()
{
	switch(state)
     ac8:	61 f0       	breq	.+24     	; 0xae2 <windhand+0x20>
     aca:	28 f0       	brcs	.+10     	; 0xad6 <windhand+0x14>
     acc:	82 30       	cpi	r24, 0x02	; 2
     ace:	99 f0       	breq	.+38     	; 0xaf6 <windhand+0x34>
     ad0:	83 30       	cpi	r24, 0x03	; 3
     ad2:	d9 f0       	breq	.+54     	; 0xb0a <windhand+0x48>
     ad4:	08 95       	ret
	{
		case 0:
		showstrength(state);
     ad6:	a2 db       	rcall	.-2236   	; 0x21c <showstrength>
		Buzzer_soundOff();
     ad8:	90 d4       	rcall	.+2336   	; 0x13fa <Buzzer_soundOff>
     ada:	80 91 53 02 	lds	r24, 0x0253	; 0x800253 <state>
		model_setwindstatedata(state);
     ade:	91 cb       	rjmp	.-2270   	; 0x202 <model_setwindstatedata>
		break;
     ae0:	08 95       	ret
		case 1:
		showstrength(state);
     ae2:	9c db       	rcall	.-2248   	; 0x21c <showstrength>
     ae4:	84 d4       	rcall	.+2312   	; 0x13ee <Buzzer_soundOn>
		Buzzer_soundOn();
     ae6:	68 ee       	ldi	r22, 0xE8	; 232
		Buzzer_buttonOn(4, 1000);
     ae8:	73 e0       	ldi	r23, 0x03	; 3
     aea:	84 e0       	ldi	r24, 0x04	; 4
     aec:	c3 d4       	rcall	.+2438   	; 0x1474 <Buzzer_buttonOn>
		model_setwindstatedata(state);
     aee:	80 91 53 02 	lds	r24, 0x0253	; 0x800253 <state>
     af2:	87 cb       	rjmp	.-2290   	; 0x202 <model_setwindstatedata>
		break;
     af4:	08 95       	ret
		case 2:
		showstrength(state);
     af6:	92 db       	rcall	.-2268   	; 0x21c <showstrength>
		Buzzer_soundOn();
     af8:	7a d4       	rcall	.+2292   	; 0x13ee <Buzzer_soundOn>
		Buzzer_buttonOn(2, 1600);
     afa:	60 e4       	ldi	r22, 0x40	; 64
     afc:	76 e0       	ldi	r23, 0x06	; 6
     afe:	82 e0       	ldi	r24, 0x02	; 2
     b00:	b9 d4       	rcall	.+2418   	; 0x1474 <Buzzer_buttonOn>
		model_setwindstatedata(state);
     b02:	80 91 53 02 	lds	r24, 0x0253	; 0x800253 <state>
     b06:	7d cb       	rjmp	.-2310   	; 0x202 <model_setwindstatedata>
		break;
     b08:	08 95       	ret
		case 3:
		showstrength(state);
     b0a:	88 db       	rcall	.-2288   	; 0x21c <showstrength>
     b0c:	70 d4       	rcall	.+2272   	; 0x13ee <Buzzer_soundOn>
		Buzzer_soundOn();
     b0e:	60 ed       	ldi	r22, 0xD0	; 208
     b10:	77 e0       	ldi	r23, 0x07	; 7
		Buzzer_buttonOn(1, 2000);
     b12:	81 e0       	ldi	r24, 0x01	; 1
     b14:	af d4       	rcall	.+2398   	; 0x1474 <Buzzer_buttonOn>
     b16:	80 91 53 02 	lds	r24, 0x0253	; 0x800253 <state>
     b1a:	73 cb       	rjmp	.-2330   	; 0x202 <model_setwindstatedata>
		model_setwindstatedata(state);
     b1c:	08 95       	ret

00000b1e <UART0_execute>:
     b1e:	cf 93       	push	r28
     b20:	df 93       	push	r29
     b22:	53 d5       	rcall	.+2726   	; 0x15ca <UART0_GetRxFlag>
     b24:	88 23       	and	r24, r24
	}
}

void UART0_execute()
{
	if(UART0_GetRxFlag())
     b26:	09 f4       	brne	.+2      	; 0xb2a <UART0_execute+0xc>
     b28:	60 c0       	rjmp	.+192    	; 0xbea <UART0_execute+0xcc>
	{
		UART0_clearRxFlag();
     b2a:	2a d5       	rcall	.+2644   	; 0x1580 <UART0_clearRxFlag>
		uint8_t *rxString = UART0_readRxBuff();
     b2c:	51 d5       	rcall	.+2722   	; 0x15d0 <UART0_readRxBuff>
     b2e:	ec 01       	movw	r28, r24
		
		if(!strcmp((char *)rxString, "WIND_OFF\n"))
     b30:	64 e9       	ldi	r22, 0x94	; 148
     b32:	71 e0       	ldi	r23, 0x01	; 1
     b34:	9d d5       	rcall	.+2874   	; 0x1670 <strcmp>
     b36:	89 2b       	or	r24, r25
     b38:	81 f4       	brne	.+32     	; 0xb5a <UART0_execute+0x3c>
		{
			state = 0;
     b3a:	10 92 53 02 	sts	0x0253, r1	; 0x800253 <state>
			model_setwindstatedata(state);
     b3e:	80 e0       	ldi	r24, 0x00	; 0
     b40:	60 db       	rcall	.-2368   	; 0x202 <model_setwindstatedata>
			automode = 0;
     b42:	10 92 22 02 	sts	0x0222, r1	; 0x800222 <automode>
			model_setwindautodata(automode);
     b46:	80 e0       	ldi	r24, 0x00	; 0
     b48:	56 db       	rcall	.-2388   	; 0x1f6 <model_setwindautodata>
     b4a:	80 91 53 02 	lds	r24, 0x0253	; 0x800253 <state>
			if(state == 0)
     b4e:	81 11       	cpse	r24, r1
     b50:	4c c0       	rjmp	.+152    	; 0xbea <UART0_execute+0xcc>
			{
				printf("STATE : WIND_OFF\n");
     b52:	8e e9       	ldi	r24, 0x9E	; 158
     b54:	91 e0       	ldi	r25, 0x01	; 1
     b56:	95 d5       	rcall	.+2858   	; 0x1682 <puts>
     b58:	48 c0       	rjmp	.+144    	; 0xbea <UART0_execute+0xcc>
			}
		}
		else if(!strcmp((char *)rxString, "WEAK\n"))
     b5a:	6f ea       	ldi	r22, 0xAF	; 175
     b5c:	71 e0       	ldi	r23, 0x01	; 1
     b5e:	ce 01       	movw	r24, r28
     b60:	87 d5       	rcall	.+2830   	; 0x1670 <strcmp>
     b62:	89 2b       	or	r24, r25
     b64:	69 f4       	brne	.+26     	; 0xb80 <UART0_execute+0x62>
		{
			state = 1;
     b66:	81 e0       	ldi	r24, 0x01	; 1
     b68:	80 93 53 02 	sts	0x0253, r24	; 0x800253 <state>
			model_setwindstatedata(state);
     b6c:	4a db       	rcall	.-2412   	; 0x202 <model_setwindstatedata>
			if(state == 1)
     b6e:	80 91 53 02 	lds	r24, 0x0253	; 0x800253 <state>
     b72:	81 30       	cpi	r24, 0x01	; 1
     b74:	09 f0       	breq	.+2      	; 0xb78 <UART0_execute+0x5a>
			{
				printf("STATE : WEAK\n");
     b76:	39 c0       	rjmp	.+114    	; 0xbea <UART0_execute+0xcc>
     b78:	85 eb       	ldi	r24, 0xB5	; 181
     b7a:	91 e0       	ldi	r25, 0x01	; 1
     b7c:	82 d5       	rcall	.+2820   	; 0x1682 <puts>
			}
		}
		else if(!strcmp((char *)rxString, "NORMAL\n"))
     b7e:	35 c0       	rjmp	.+106    	; 0xbea <UART0_execute+0xcc>
     b80:	62 ec       	ldi	r22, 0xC2	; 194
     b82:	71 e0       	ldi	r23, 0x01	; 1
     b84:	ce 01       	movw	r24, r28
     b86:	74 d5       	rcall	.+2792   	; 0x1670 <strcmp>
     b88:	89 2b       	or	r24, r25
		{
			state = 2;
     b8a:	61 f4       	brne	.+24     	; 0xba4 <UART0_execute+0x86>
     b8c:	82 e0       	ldi	r24, 0x02	; 2
     b8e:	80 93 53 02 	sts	0x0253, r24	; 0x800253 <state>
			model_setwindstatedata(state);
			if(state == 2)
     b92:	37 db       	rcall	.-2450   	; 0x202 <model_setwindstatedata>
     b94:	80 91 53 02 	lds	r24, 0x0253	; 0x800253 <state>
     b98:	82 30       	cpi	r24, 0x02	; 2
			{
				printf("STATE : NORMAL\n");
     b9a:	39 f5       	brne	.+78     	; 0xbea <UART0_execute+0xcc>
     b9c:	8a ec       	ldi	r24, 0xCA	; 202
     b9e:	91 e0       	ldi	r25, 0x01	; 1
     ba0:	70 d5       	rcall	.+2784   	; 0x1682 <puts>
			}
		}
		else if(!strcmp((char *)rxString, "STRONG\n"))
     ba2:	23 c0       	rjmp	.+70     	; 0xbea <UART0_execute+0xcc>
     ba4:	69 ed       	ldi	r22, 0xD9	; 217
     ba6:	71 e0       	ldi	r23, 0x01	; 1
     ba8:	ce 01       	movw	r24, r28
     baa:	62 d5       	rcall	.+2756   	; 0x1670 <strcmp>
     bac:	89 2b       	or	r24, r25
		{
			state = 3;
     bae:	61 f4       	brne	.+24     	; 0xbc8 <UART0_execute+0xaa>
     bb0:	83 e0       	ldi	r24, 0x03	; 3
			model_setwindstatedata(state);
     bb2:	80 93 53 02 	sts	0x0253, r24	; 0x800253 <state>
			if(state == 3)
     bb6:	25 db       	rcall	.-2486   	; 0x202 <model_setwindstatedata>
     bb8:	80 91 53 02 	lds	r24, 0x0253	; 0x800253 <state>
			{
				printf("STATE : STRONG\n");
     bbc:	83 30       	cpi	r24, 0x03	; 3
     bbe:	a9 f4       	brne	.+42     	; 0xbea <UART0_execute+0xcc>
     bc0:	81 ee       	ldi	r24, 0xE1	; 225
     bc2:	91 e0       	ldi	r25, 0x01	; 1
     bc4:	5e d5       	rcall	.+2748   	; 0x1682 <puts>
			}
		}
		else if(!strcmp((char *)rxString, "AUTOMODE\n"))
     bc6:	11 c0       	rjmp	.+34     	; 0xbea <UART0_execute+0xcc>
     bc8:	60 ef       	ldi	r22, 0xF0	; 240
     bca:	71 e0       	ldi	r23, 0x01	; 1
     bcc:	ce 01       	movw	r24, r28
     bce:	50 d5       	rcall	.+2720   	; 0x1670 <strcmp>
     bd0:	89 2b       	or	r24, r25
		{
			automode = 1;
     bd2:	59 f4       	brne	.+22     	; 0xbea <UART0_execute+0xcc>
     bd4:	81 e0       	ldi	r24, 0x01	; 1
     bd6:	80 93 22 02 	sts	0x0222, r24	; 0x800222 <automode>
			model_setwindautodata(automode);
     bda:	0d db       	rcall	.-2534   	; 0x1f6 <model_setwindautodata>
			if(automode == 1)
     bdc:	80 91 22 02 	lds	r24, 0x0222	; 0x800222 <automode>
     be0:	81 30       	cpi	r24, 0x01	; 1
     be2:	19 f4       	brne	.+6      	; 0xbea <UART0_execute+0xcc>
			{
				printf("STATE : AUTOMODE\n");
     be4:	8a ef       	ldi	r24, 0xFA	; 250
     be6:	91 e0       	ldi	r25, 0x01	; 1
     be8:	4c d5       	rcall	.+2712   	; 0x1682 <puts>
     bea:	df 91       	pop	r29
			}
		}
	}
     bec:	cf 91       	pop	r28
     bee:	08 95       	ret

00000bf0 <wind_execute>:
     bf0:	96 df       	rcall	.-212    	; 0xb1e <UART0_execute>
}

void wind_execute()
{
	UART0_execute();
	listen_execute();
     bf2:	9e da       	rcall	.-2756   	; 0x130 <listen_execute>
	
	timerset = model_getwindtimerdata();
     bf4:	09 db       	rcall	.-2542   	; 0x208 <model_getwindtimerdata>
     bf6:	80 93 52 02 	sts	0x0252, r24	; 0x800252 <timerset>
	timerfan = model_gettimestartdata();
     bfa:	f4 da       	rcall	.-2584   	; 0x1e4 <model_gettimestartdata>
     bfc:	80 93 54 02 	sts	0x0254, r24	; 0x800254 <timerfan>
	fndshow();
     c00:	3f de       	rcall	.-898    	; 0x880 <fndshow>
     c02:	80 91 52 02 	lds	r24, 0x0252	; 0x800252 <timerset>
	
	if(timerset >= 1)
     c06:	88 23       	and	r24, r24
     c08:	59 f0       	breq	.+22     	; 0xc20 <wind_execute+0x30>
	{
		if(timerfan != 0)
     c0a:	80 91 54 02 	lds	r24, 0x0254	; 0x800254 <timerfan>
     c0e:	88 23       	and	r24, r24
		{
			Buzzer_soundOn();
     c10:	31 f0       	breq	.+12     	; 0xc1e <wind_execute+0x2e>
			Buzzer_buttonOn(4, 1000);
     c12:	ed d3       	rcall	.+2010   	; 0x13ee <Buzzer_soundOn>
     c14:	68 ee       	ldi	r22, 0xE8	; 232
     c16:	73 e0       	ldi	r23, 0x03	; 3
     c18:	84 e0       	ldi	r24, 0x04	; 4
     c1a:	2c c4       	rjmp	.+2136   	; 0x1474 <Buzzer_buttonOn>
			return;
     c1c:	08 95       	ret
		}
		Buzzer_soundOff();
     c1e:	ed d3       	rcall	.+2010   	; 0x13fa <Buzzer_soundOff>
     c20:	80 91 52 02 	lds	r24, 0x0252	; 0x800252 <timerset>
		
	}
	if(timerset >= 2)
     c24:	82 30       	cpi	r24, 0x02	; 2
	{
		return;
	}
	if(timerfan == 1)
     c26:	a8 f4       	brcc	.+42     	; 0xc52 <wind_execute+0x62>
     c28:	80 91 54 02 	lds	r24, 0x0254	; 0x800254 <timerfan>
	{
		return;
	}
	
	listener_state();
     c2c:	81 30       	cpi	r24, 0x01	; 1
     c2e:	89 f0       	breq	.+34     	; 0xc52 <wind_execute+0x62>
	state = model_getwindstatedata();
     c30:	b4 da       	rcall	.-2712   	; 0x19a <listener_state>
     c32:	e4 da       	rcall	.-2616   	; 0x1fc <model_getwindstatedata>
     c34:	80 93 53 02 	sts	0x0253, r24	; 0x800253 <state>
	sec = model_getwindautodata();
     c38:	db da       	rcall	.-2634   	; 0x1f0 <model_getwindautodata>
     c3a:	80 93 48 02 	sts	0x0248, r24	; 0x800248 <sec>
	automode = model_getwindautodata();
     c3e:	d8 da       	rcall	.-2640   	; 0x1f0 <model_getwindautodata>
     c40:	80 93 22 02 	sts	0x0222, r24	; 0x800222 <automode>
	if(automode == 1)
     c44:	81 30       	cpi	r24, 0x01	; 1
     c46:	11 f4       	brne	.+4      	; 0xc4c <wind_execute+0x5c>
	{
		windauto();
     c48:	e5 ce       	rjmp	.-566    	; 0xa14 <windauto>
     c4a:	08 95       	ret
     c4c:	81 11       	cpse	r24, r1
	}
	else if(automode == 0)
     c4e:	01 c0       	rjmp	.+2      	; 0xc52 <wind_execute+0x62>
     c50:	38 cf       	rjmp	.-400    	; 0xac2 <windhand>
	{
		windhand();
     c52:	08 95       	ret

00000c54 <button_init>:
﻿#include "Button.h"

void button_init(button_t *btn, volatile uint8_t *ddr, volatile uint8_t *pin, uint8_t pinNum)
{
     c54:	fc 01       	movw	r30, r24
     c56:	cb 01       	movw	r24, r22
	btn->DDR = ddr;
     c58:	71 83       	std	Z+1, r23	; 0x01
     c5a:	60 83       	st	Z, r22
	btn->PIN = pin;
     c5c:	53 83       	std	Z+3, r21	; 0x03
     c5e:	42 83       	std	Z+2, r20	; 0x02
	btn->pinNum = pinNum;
     c60:	24 83       	std	Z+4, r18	; 0x04
	btn->prevState = 1;
     c62:	31 e0       	ldi	r19, 0x01	; 1
     c64:	35 83       	std	Z+5, r19	; 0x05
	//*btn->DDR &= ~(1<<btn->pinNum);
	
	Gpio_initpin(btn->DDR, INPUT,btn->pinNum);
     c66:	42 2f       	mov	r20, r18
     c68:	60 e0       	ldi	r22, 0x00	; 0
     c6a:	24 c4       	rjmp	.+2120   	; 0x14b4 <Gpio_initpin>
     c6c:	08 95       	ret

00000c6e <Button_GetState>:
	
}

uint8_t Button_GetState(button_t *btn)
{
     c6e:	cf 93       	push	r28
     c70:	df 93       	push	r29
     c72:	ec 01       	movw	r28, r24
	//uint8_t curState = *btn->PIN & (1<<btn->pinNum);
	uint8_t curState = Gpio_readpin(btn->PIN, btn->pinNum);
     c74:	6c 81       	ldd	r22, Y+4	; 0x04
     c76:	8a 81       	ldd	r24, Y+2	; 0x02
     c78:	9b 81       	ldd	r25, Y+3	; 0x03
     c7a:	53 d4       	rcall	.+2214   	; 0x1522 <Gpio_readpin>
     c7c:	98 2f       	mov	r25, r24
	if((curState ==0) && (btn->prevState == 1))
     c7e:	81 11       	cpse	r24, r1
     c80:	0b c0       	rjmp	.+22     	; 0xc98 <Button_GetState+0x2a>
     c82:	8d 81       	ldd	r24, Y+5	; 0x05
     c84:	81 30       	cpi	r24, 0x01	; 1
     c86:	41 f4       	brne	.+16     	; 0xc98 <Button_GetState+0x2a>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     c88:	ef e3       	ldi	r30, 0x3F	; 63
     c8a:	fc e9       	ldi	r31, 0x9C	; 156
     c8c:	31 97       	sbiw	r30, 0x01	; 1
     c8e:	f1 f7       	brne	.-4      	; 0xc8c <Button_GetState+0x1e>
     c90:	00 c0       	rjmp	.+0      	; 0xc92 <Button_GetState+0x24>
     c92:	00 00       	nop
	{
		_delay_ms(10);
		btn->prevState = 0; // PUSHED
     c94:	1d 82       	std	Y+5, r1	; 0x05
		return 1; //ACT_PUSHED
     c96:	11 c0       	rjmp	.+34     	; 0xcba <Button_GetState+0x4c>
	}
	else if((curState != 0) && (btn->prevState == 0))
     c98:	99 23       	and	r25, r25
     c9a:	61 f0       	breq	.+24     	; 0xcb4 <Button_GetState+0x46>
     c9c:	8d 81       	ldd	r24, Y+5	; 0x05
     c9e:	81 11       	cpse	r24, r1
     ca0:	0b c0       	rjmp	.+22     	; 0xcb8 <Button_GetState+0x4a>
     ca2:	ef e3       	ldi	r30, 0x3F	; 63
     ca4:	fc e9       	ldi	r31, 0x9C	; 156
     ca6:	31 97       	sbiw	r30, 0x01	; 1
     ca8:	f1 f7       	brne	.-4      	; 0xca6 <Button_GetState+0x38>
     caa:	00 c0       	rjmp	.+0      	; 0xcac <Button_GetState+0x3e>
     cac:	00 00       	nop
	{
		_delay_ms(10);
		btn->prevState = 1; // RELEASED
     cae:	91 e0       	ldi	r25, 0x01	; 1
     cb0:	9d 83       	std	Y+5, r25	; 0x05
		return 0; // ACT_RELEASED
     cb2:	03 c0       	rjmp	.+6      	; 0xcba <Button_GetState+0x4c>
	}
	return 2;
     cb4:	82 e0       	ldi	r24, 0x02	; 2
     cb6:	01 c0       	rjmp	.+2      	; 0xcba <Button_GetState+0x4c>
     cb8:	82 e0       	ldi	r24, 0x02	; 2
}
     cba:	df 91       	pop	r29
     cbc:	cf 91       	pop	r28
     cbe:	08 95       	ret

00000cc0 <Buzzer2_soundOn>:
	_delay_ms(100);
	TCNT1 = 0;
	Buzzer2_makehz(4,900);
	_delay_ms(100);
	TCNT1 = 0;
	Buzzer2_soundOff();
     cc0:	8f b5       	in	r24, 0x2f	; 47
     cc2:	80 68       	ori	r24, 0x80	; 128
     cc4:	8f bd       	out	0x2f, r24	; 47
     cc6:	08 95       	ret

00000cc8 <Buzzer2_soundOff>:
     cc8:	8f b5       	in	r24, 0x2f	; 47
     cca:	8f 73       	andi	r24, 0x3F	; 63
     ccc:	8f bd       	out	0x2f, r24	; 47
     cce:	08 95       	ret

00000cd0 <Buzzer2_makehz>:
     cd0:	64 36       	cpi	r22, 0x64	; 100
     cd2:	71 05       	cpc	r23, r1
     cd4:	28 f0       	brcs	.+10     	; 0xce0 <Buzzer2_makehz+0x10>
     cd6:	69 38       	cpi	r22, 0x89	; 137
     cd8:	83 e1       	ldi	r24, 0x13	; 19
     cda:	78 07       	cpc	r23, r24
     cdc:	20 f4       	brcc	.+8      	; 0xce6 <Buzzer2_makehz+0x16>
     cde:	05 c0       	rjmp	.+10     	; 0xcea <Buzzer2_makehz+0x1a>
     ce0:	64 e6       	ldi	r22, 0x64	; 100
     ce2:	70 e0       	ldi	r23, 0x00	; 0
     ce4:	02 c0       	rjmp	.+4      	; 0xcea <Buzzer2_makehz+0x1a>
     ce6:	68 e8       	ldi	r22, 0x88	; 136
     ce8:	73 e1       	ldi	r23, 0x13	; 19
     cea:	9b 01       	movw	r18, r22
     cec:	40 e0       	ldi	r20, 0x00	; 0
     cee:	50 e0       	ldi	r21, 0x00	; 0
     cf0:	60 e9       	ldi	r22, 0x90	; 144
     cf2:	70 ed       	ldi	r23, 0xD0	; 208
     cf4:	83 e0       	ldi	r24, 0x03	; 3
     cf6:	90 e0       	ldi	r25, 0x00	; 0
     cf8:	6e d4       	rcall	.+2268   	; 0x15d6 <__divmodsi4>
     cfa:	21 50       	subi	r18, 0x01	; 1
     cfc:	31 09       	sbc	r19, r1
     cfe:	37 bd       	out	0x27, r19	; 39
     d00:	26 bd       	out	0x26, r18	; 38
     d02:	86 b5       	in	r24, 0x26	; 38
     d04:	97 b5       	in	r25, 0x27	; 39
     d06:	96 95       	lsr	r25
     d08:	87 95       	ror	r24
     d0a:	96 95       	lsr	r25
     d0c:	87 95       	ror	r24
     d0e:	9b bd       	out	0x2b, r25	; 43
     d10:	8a bd       	out	0x2a, r24	; 42
     d12:	08 95       	ret

00000d14 <Buzzer2_init>:
     d14:	8e b5       	in	r24, 0x2e	; 46
     d16:	83 60       	ori	r24, 0x03	; 3
     d18:	8e bd       	out	0x2e, r24	; 46
     d1a:	8e b5       	in	r24, 0x2e	; 46
     d1c:	88 61       	ori	r24, 0x18	; 24
     d1e:	8e bd       	out	0x2e, r24	; 46
     d20:	8f b5       	in	r24, 0x2f	; 47
     d22:	82 60       	ori	r24, 0x02	; 2
     d24:	8f bd       	out	0x2f, r24	; 47
     d26:	87 b3       	in	r24, 0x17	; 23
     d28:	80 62       	ori	r24, 0x20	; 32
     d2a:	87 bb       	out	0x17, r24	; 23
     d2c:	08 95       	ret

00000d2e <buzzer2_buttonset>:
     d2e:	68 e5       	ldi	r22, 0x58	; 88
     d30:	72 e0       	ldi	r23, 0x02	; 2
     d32:	84 e0       	ldi	r24, 0x04	; 4
     d34:	cd df       	rcall	.-102    	; 0xcd0 <Buzzer2_makehz>
     d36:	2f ef       	ldi	r18, 0xFF	; 255
     d38:	81 ee       	ldi	r24, 0xE1	; 225
     d3a:	94 e0       	ldi	r25, 0x04	; 4
     d3c:	21 50       	subi	r18, 0x01	; 1
     d3e:	80 40       	sbci	r24, 0x00	; 0
     d40:	90 40       	sbci	r25, 0x00	; 0
     d42:	e1 f7       	brne	.-8      	; 0xd3c <buzzer2_buttonset+0xe>
     d44:	00 c0       	rjmp	.+0      	; 0xd46 <buzzer2_buttonset+0x18>
     d46:	00 00       	nop
     d48:	1d bc       	out	0x2d, r1	; 45
     d4a:	1c bc       	out	0x2c, r1	; 44
     d4c:	60 e2       	ldi	r22, 0x20	; 32
     d4e:	73 e0       	ldi	r23, 0x03	; 3
     d50:	84 e0       	ldi	r24, 0x04	; 4
     d52:	be df       	rcall	.-132    	; 0xcd0 <Buzzer2_makehz>
     d54:	2f ef       	ldi	r18, 0xFF	; 255
     d56:	81 ee       	ldi	r24, 0xE1	; 225
     d58:	94 e0       	ldi	r25, 0x04	; 4
     d5a:	21 50       	subi	r18, 0x01	; 1
     d5c:	80 40       	sbci	r24, 0x00	; 0
     d5e:	90 40       	sbci	r25, 0x00	; 0
     d60:	e1 f7       	brne	.-8      	; 0xd5a <buzzer2_buttonset+0x2c>
     d62:	00 c0       	rjmp	.+0      	; 0xd64 <buzzer2_buttonset+0x36>
     d64:	00 00       	nop
     d66:	1d bc       	out	0x2d, r1	; 45
     d68:	1c bc       	out	0x2c, r1	; 44
     d6a:	64 e8       	ldi	r22, 0x84	; 132
     d6c:	73 e0       	ldi	r23, 0x03	; 3
     d6e:	84 e0       	ldi	r24, 0x04	; 4
     d70:	af df       	rcall	.-162    	; 0xcd0 <Buzzer2_makehz>
     d72:	2f ef       	ldi	r18, 0xFF	; 255
     d74:	81 ee       	ldi	r24, 0xE1	; 225
     d76:	94 e0       	ldi	r25, 0x04	; 4
     d78:	21 50       	subi	r18, 0x01	; 1
     d7a:	80 40       	sbci	r24, 0x00	; 0
     d7c:	90 40       	sbci	r25, 0x00	; 0
     d7e:	e1 f7       	brne	.-8      	; 0xd78 <buzzer2_buttonset+0x4a>
     d80:	00 c0       	rjmp	.+0      	; 0xd82 <buzzer2_buttonset+0x54>
     d82:	00 00       	nop
     d84:	1d bc       	out	0x2d, r1	; 45
     d86:	1c bc       	out	0x2c, r1	; 44
     d88:	68 ee       	ldi	r22, 0xE8	; 232
     d8a:	73 e0       	ldi	r23, 0x03	; 3
     d8c:	84 e0       	ldi	r24, 0x04	; 4
     d8e:	a0 df       	rcall	.-192    	; 0xcd0 <Buzzer2_makehz>
     d90:	2f ef       	ldi	r18, 0xFF	; 255
     d92:	81 ee       	ldi	r24, 0xE1	; 225
     d94:	94 e0       	ldi	r25, 0x04	; 4
     d96:	21 50       	subi	r18, 0x01	; 1
     d98:	80 40       	sbci	r24, 0x00	; 0
     d9a:	90 40       	sbci	r25, 0x00	; 0
     d9c:	e1 f7       	brne	.-8      	; 0xd96 <buzzer2_buttonset+0x68>
     d9e:	00 c0       	rjmp	.+0      	; 0xda0 <buzzer2_buttonset+0x72>
     da0:	00 00       	nop
     da2:	1d bc       	out	0x2d, r1	; 45
     da4:	1c bc       	out	0x2c, r1	; 44
     da6:	08 95       	ret

00000da8 <buzzer2_windchange>:
     da8:	8b df       	rcall	.-234    	; 0xcc0 <Buzzer2_soundOn>
     daa:	68 e5       	ldi	r22, 0x58	; 88
     dac:	72 e0       	ldi	r23, 0x02	; 2
     dae:	84 e0       	ldi	r24, 0x04	; 4
     db0:	8f df       	rcall	.-226    	; 0xcd0 <Buzzer2_makehz>
     db2:	2f ef       	ldi	r18, 0xFF	; 255
     db4:	81 ee       	ldi	r24, 0xE1	; 225
     db6:	94 e0       	ldi	r25, 0x04	; 4
     db8:	21 50       	subi	r18, 0x01	; 1
     dba:	80 40       	sbci	r24, 0x00	; 0
     dbc:	90 40       	sbci	r25, 0x00	; 0
     dbe:	e1 f7       	brne	.-8      	; 0xdb8 <buzzer2_windchange+0x10>
     dc0:	00 c0       	rjmp	.+0      	; 0xdc2 <buzzer2_windchange+0x1a>
     dc2:	00 00       	nop
     dc4:	1d bc       	out	0x2d, r1	; 45
     dc6:	1c bc       	out	0x2c, r1	; 44
     dc8:	7f cf       	rjmp	.-258    	; 0xcc8 <Buzzer2_soundOff>
     dca:	08 95       	ret

00000dcc <buzzer2_windoff>:
     dcc:	79 df       	rcall	.-270    	; 0xcc0 <Buzzer2_soundOn>
     dce:	60 e9       	ldi	r22, 0x90	; 144
     dd0:	71 e0       	ldi	r23, 0x01	; 1
     dd2:	84 e0       	ldi	r24, 0x04	; 4
     dd4:	7d df       	rcall	.-262    	; 0xcd0 <Buzzer2_makehz>
     dd6:	2f ef       	ldi	r18, 0xFF	; 255
     dd8:	81 ee       	ldi	r24, 0xE1	; 225
     dda:	94 e0       	ldi	r25, 0x04	; 4
     ddc:	21 50       	subi	r18, 0x01	; 1
     dde:	80 40       	sbci	r24, 0x00	; 0
     de0:	90 40       	sbci	r25, 0x00	; 0
     de2:	e1 f7       	brne	.-8      	; 0xddc <buzzer2_windoff+0x10>
     de4:	00 c0       	rjmp	.+0      	; 0xde6 <buzzer2_windoff+0x1a>
     de6:	00 00       	nop
     de8:	1d bc       	out	0x2d, r1	; 45
     dea:	1c bc       	out	0x2c, r1	; 44
     dec:	6d cf       	rjmp	.-294    	; 0xcc8 <Buzzer2_soundOff>
     dee:	08 95       	ret

00000df0 <buzzer2_timechange>:
}

void buzzer2_timechange()
{
	Buzzer2_soundOn();
     df0:	67 df       	rcall	.-306    	; 0xcc0 <Buzzer2_soundOn>
	Buzzer2_makehz(4,800);
     df2:	60 e2       	ldi	r22, 0x20	; 32
     df4:	73 e0       	ldi	r23, 0x03	; 3
     df6:	84 e0       	ldi	r24, 0x04	; 4
     df8:	6b df       	rcall	.-298    	; 0xcd0 <Buzzer2_makehz>
     dfa:	2f ef       	ldi	r18, 0xFF	; 255
     dfc:	81 ee       	ldi	r24, 0xE1	; 225
     dfe:	94 e0       	ldi	r25, 0x04	; 4
     e00:	21 50       	subi	r18, 0x01	; 1
     e02:	80 40       	sbci	r24, 0x00	; 0
     e04:	90 40       	sbci	r25, 0x00	; 0
     e06:	e1 f7       	brne	.-8      	; 0xe00 <buzzer2_timechange+0x10>
     e08:	00 c0       	rjmp	.+0      	; 0xe0a <buzzer2_timechange+0x1a>
     e0a:	00 00       	nop
	_delay_ms(100);
	TCNT1 = 0;
     e0c:	1d bc       	out	0x2d, r1	; 45
	Buzzer2_soundOff();
     e0e:	1c bc       	out	0x2c, r1	; 44
     e10:	5b cf       	rjmp	.-330    	; 0xcc8 <Buzzer2_soundOff>
     e12:	08 95       	ret

00000e14 <buzzer2_timestart>:
}

void buzzer2_timestart()
{
	Buzzer2_soundOn();
     e14:	55 df       	rcall	.-342    	; 0xcc0 <Buzzer2_soundOn>
	Buzzer2_makehz(4,550);
     e16:	66 e2       	ldi	r22, 0x26	; 38
     e18:	72 e0       	ldi	r23, 0x02	; 2
     e1a:	84 e0       	ldi	r24, 0x04	; 4
     e1c:	59 df       	rcall	.-334    	; 0xcd0 <Buzzer2_makehz>
     e1e:	2f ef       	ldi	r18, 0xFF	; 255
     e20:	81 ee       	ldi	r24, 0xE1	; 225
     e22:	94 e0       	ldi	r25, 0x04	; 4
     e24:	21 50       	subi	r18, 0x01	; 1
     e26:	80 40       	sbci	r24, 0x00	; 0
     e28:	90 40       	sbci	r25, 0x00	; 0
     e2a:	e1 f7       	brne	.-8      	; 0xe24 <buzzer2_timestart+0x10>
     e2c:	00 c0       	rjmp	.+0      	; 0xe2e <buzzer2_timestart+0x1a>
     e2e:	00 00       	nop
	_delay_ms(100);
	TCNT1 = 0;
     e30:	1d bc       	out	0x2d, r1	; 45
	Buzzer2_soundOff();
     e32:	1c bc       	out	0x2c, r1	; 44
     e34:	49 cf       	rjmp	.-366    	; 0xcc8 <Buzzer2_soundOff>
     e36:	08 95       	ret

00000e38 <buzzer2_timeover>:
}

void buzzer2_timeover()
{
	Buzzer2_soundOn();
     e38:	43 df       	rcall	.-378    	; 0xcc0 <Buzzer2_soundOn>
	Buzzer2_makehz(4,800);
     e3a:	60 e2       	ldi	r22, 0x20	; 32
     e3c:	73 e0       	ldi	r23, 0x03	; 3
     e3e:	84 e0       	ldi	r24, 0x04	; 4
     e40:	47 df       	rcall	.-370    	; 0xcd0 <Buzzer2_makehz>
     e42:	2f ef       	ldi	r18, 0xFF	; 255
     e44:	83 ec       	ldi	r24, 0xC3	; 195
     e46:	99 e0       	ldi	r25, 0x09	; 9
     e48:	21 50       	subi	r18, 0x01	; 1
     e4a:	80 40       	sbci	r24, 0x00	; 0
     e4c:	90 40       	sbci	r25, 0x00	; 0
     e4e:	e1 f7       	brne	.-8      	; 0xe48 <buzzer2_timeover+0x10>
     e50:	00 c0       	rjmp	.+0      	; 0xe52 <buzzer2_timeover+0x1a>
     e52:	00 00       	nop
	_delay_ms(200);
	TCNT1 = 0;
     e54:	1d bc       	out	0x2d, r1	; 45
     e56:	1c bc       	out	0x2c, r1	; 44
	Buzzer2_makehz(4,600);
     e58:	68 e5       	ldi	r22, 0x58	; 88
     e5a:	72 e0       	ldi	r23, 0x02	; 2
     e5c:	84 e0       	ldi	r24, 0x04	; 4
     e5e:	38 df       	rcall	.-400    	; 0xcd0 <Buzzer2_makehz>
     e60:	2f ef       	ldi	r18, 0xFF	; 255
     e62:	83 ec       	ldi	r24, 0xC3	; 195
     e64:	99 e0       	ldi	r25, 0x09	; 9
     e66:	21 50       	subi	r18, 0x01	; 1
     e68:	80 40       	sbci	r24, 0x00	; 0
     e6a:	90 40       	sbci	r25, 0x00	; 0
     e6c:	e1 f7       	brne	.-8      	; 0xe66 <buzzer2_timeover+0x2e>
     e6e:	00 c0       	rjmp	.+0      	; 0xe70 <buzzer2_timeover+0x38>
     e70:	00 00       	nop
	_delay_ms(200);
	TCNT1 = 0;
     e72:	1d bc       	out	0x2d, r1	; 45
     e74:	1c bc       	out	0x2c, r1	; 44
	Buzzer2_makehz(4,500);
     e76:	64 ef       	ldi	r22, 0xF4	; 244
     e78:	71 e0       	ldi	r23, 0x01	; 1
     e7a:	84 e0       	ldi	r24, 0x04	; 4
	Buzzer2_soundOff();
     e7c:	29 df       	rcall	.-430    	; 0xcd0 <Buzzer2_makehz>
     e7e:	24 cf       	rjmp	.-440    	; 0xcc8 <Buzzer2_soundOff>
     e80:	08 95       	ret

00000e82 <fndinit>:
	fndData = data;
}

void FND_setFanData(uint16_t data)
{
	fanData = data;
     e82:	8f ee       	ldi	r24, 0xEF	; 239
     e84:	82 b9       	out	0x02, r24	; 2
     e86:	8f ef       	ldi	r24, 0xFF	; 255
     e88:	80 93 61 00 	sts	0x0061, r24	; 0x800061 <__TEXT_REGION_LENGTH__+0x7e0061>
     e8c:	08 95       	ret

00000e8e <FND_dispNum>:
     e8e:	cf 93       	push	r28
     e90:	df 93       	push	r29
     e92:	cd b7       	in	r28, 0x3d	; 61
     e94:	de b7       	in	r29, 0x3e	; 62
     e96:	2a 97       	sbiw	r28, 0x0a	; 10
     e98:	0f b6       	in	r0, 0x3f	; 63
     e9a:	f8 94       	cli
     e9c:	de bf       	out	0x3e, r29	; 62
     e9e:	0f be       	out	0x3f, r0	; 63
     ea0:	cd bf       	out	0x3d, r28	; 61
     ea2:	8a e0       	ldi	r24, 0x0A	; 10
     ea4:	ee e0       	ldi	r30, 0x0E	; 14
     ea6:	f1 e0       	ldi	r31, 0x01	; 1
     ea8:	de 01       	movw	r26, r28
     eaa:	11 96       	adiw	r26, 0x01	; 1
     eac:	01 90       	ld	r0, Z+
     eae:	0d 92       	st	X+, r0
     eb0:	8a 95       	dec	r24
     eb2:	e1 f7       	brne	.-8      	; 0xeac <FND_dispNum+0x1e>
     eb4:	80 91 0d 02 	lds	r24, 0x020D	; 0x80020d <fndDigitState.1794>
     eb8:	90 e0       	ldi	r25, 0x00	; 0
     eba:	01 96       	adiw	r24, 0x01	; 1
     ebc:	83 70       	andi	r24, 0x03	; 3
     ebe:	90 78       	andi	r25, 0x80	; 128
     ec0:	99 23       	and	r25, r25
     ec2:	24 f4       	brge	.+8      	; 0xecc <FND_dispNum+0x3e>
     ec4:	01 97       	sbiw	r24, 0x01	; 1
     ec6:	8c 6f       	ori	r24, 0xFC	; 252
     ec8:	9f 6f       	ori	r25, 0xFF	; 255
     eca:	01 96       	adiw	r24, 0x01	; 1
     ecc:	80 93 0d 02 	sts	0x020D, r24	; 0x80020d <fndDigitState.1794>
     ed0:	81 30       	cpi	r24, 0x01	; 1
     ed2:	09 f4       	brne	.+2      	; 0xed6 <FND_dispNum+0x48>
     ed4:	43 c0       	rjmp	.+134    	; 0xf5c <FND_dispNum+0xce>
     ed6:	38 f0       	brcs	.+14     	; 0xee6 <FND_dispNum+0x58>
     ed8:	82 30       	cpi	r24, 0x02	; 2
     eda:	09 f4       	brne	.+2      	; 0xede <FND_dispNum+0x50>
     edc:	75 c0       	rjmp	.+234    	; 0xfc8 <FND_dispNum+0x13a>
     ede:	83 30       	cpi	r24, 0x03	; 3
     ee0:	09 f4       	brne	.+2      	; 0xee4 <FND_dispNum+0x56>
     ee2:	a5 c0       	rjmp	.+330    	; 0x102e <__DATA_REGION_LENGTH__+0x2e>
     ee4:	ce c0       	rjmp	.+412    	; 0x1082 <__DATA_REGION_LENGTH__+0x82>
     ee6:	83 b1       	in	r24, 0x03	; 3
     ee8:	80 6f       	ori	r24, 0xF0	; 240
     eea:	83 b9       	out	0x03, r24	; 3
     eec:	80 ee       	ldi	r24, 0xE0	; 224
     eee:	83 b9       	out	0x03, r24	; 3
     ef0:	20 91 10 02 	lds	r18, 0x0210	; 0x800210 <fndData>
     ef4:	30 91 11 02 	lds	r19, 0x0211	; 0x800211 <fndData+0x1>
     ef8:	36 95       	lsr	r19
     efa:	27 95       	ror	r18
     efc:	36 95       	lsr	r19
     efe:	27 95       	ror	r18
     f00:	36 95       	lsr	r19
     f02:	27 95       	ror	r18
     f04:	a5 ec       	ldi	r26, 0xC5	; 197
     f06:	b0 e2       	ldi	r27, 0x20	; 32
     f08:	82 d3       	rcall	.+1796   	; 0x160e <__umulhisi3>
     f0a:	ac 01       	movw	r20, r24
     f0c:	52 95       	swap	r21
     f0e:	42 95       	swap	r20
     f10:	4f 70       	andi	r20, 0x0F	; 15
     f12:	45 27       	eor	r20, r21
     f14:	5f 70       	andi	r21, 0x0F	; 15
     f16:	45 27       	eor	r20, r21
     f18:	9a 01       	movw	r18, r20
     f1a:	ad ec       	ldi	r26, 0xCD	; 205
     f1c:	bc ec       	ldi	r27, 0xCC	; 204
     f1e:	77 d3       	rcall	.+1774   	; 0x160e <__umulhisi3>
     f20:	96 95       	lsr	r25
     f22:	87 95       	ror	r24
     f24:	96 95       	lsr	r25
     f26:	87 95       	ror	r24
     f28:	96 95       	lsr	r25
     f2a:	87 95       	ror	r24
     f2c:	9c 01       	movw	r18, r24
     f2e:	22 0f       	add	r18, r18
     f30:	33 1f       	adc	r19, r19
     f32:	88 0f       	add	r24, r24
     f34:	99 1f       	adc	r25, r25
     f36:	88 0f       	add	r24, r24
     f38:	99 1f       	adc	r25, r25
     f3a:	88 0f       	add	r24, r24
     f3c:	99 1f       	adc	r25, r25
     f3e:	82 0f       	add	r24, r18
     f40:	93 1f       	adc	r25, r19
     f42:	9a 01       	movw	r18, r20
     f44:	28 1b       	sub	r18, r24
     f46:	39 0b       	sbc	r19, r25
     f48:	e1 e0       	ldi	r30, 0x01	; 1
     f4a:	f0 e0       	ldi	r31, 0x00	; 0
     f4c:	ec 0f       	add	r30, r28
     f4e:	fd 1f       	adc	r31, r29
     f50:	e2 0f       	add	r30, r18
     f52:	f3 1f       	adc	r31, r19
     f54:	80 81       	ld	r24, Z
     f56:	80 93 62 00 	sts	0x0062, r24	; 0x800062 <__TEXT_REGION_LENGTH__+0x7e0062>
     f5a:	93 c0       	rjmp	.+294    	; 0x1082 <__DATA_REGION_LENGTH__+0x82>
     f5c:	83 b1       	in	r24, 0x03	; 3
     f5e:	80 6f       	ori	r24, 0xF0	; 240
     f60:	83 b9       	out	0x03, r24	; 3
     f62:	80 ed       	ldi	r24, 0xD0	; 208
     f64:	83 b9       	out	0x03, r24	; 3
     f66:	20 91 10 02 	lds	r18, 0x0210	; 0x800210 <fndData>
     f6a:	30 91 11 02 	lds	r19, 0x0211	; 0x800211 <fndData+0x1>
     f6e:	36 95       	lsr	r19
     f70:	27 95       	ror	r18
     f72:	36 95       	lsr	r19
     f74:	27 95       	ror	r18
     f76:	ab e7       	ldi	r26, 0x7B	; 123
     f78:	b4 e1       	ldi	r27, 0x14	; 20
     f7a:	49 d3       	rcall	.+1682   	; 0x160e <__umulhisi3>
     f7c:	ac 01       	movw	r20, r24
     f7e:	56 95       	lsr	r21
     f80:	47 95       	ror	r20
     f82:	9a 01       	movw	r18, r20
     f84:	ad ec       	ldi	r26, 0xCD	; 205
     f86:	bc ec       	ldi	r27, 0xCC	; 204
     f88:	42 d3       	rcall	.+1668   	; 0x160e <__umulhisi3>
     f8a:	96 95       	lsr	r25
     f8c:	87 95       	ror	r24
     f8e:	96 95       	lsr	r25
     f90:	87 95       	ror	r24
     f92:	96 95       	lsr	r25
     f94:	87 95       	ror	r24
     f96:	9c 01       	movw	r18, r24
     f98:	22 0f       	add	r18, r18
     f9a:	33 1f       	adc	r19, r19
     f9c:	88 0f       	add	r24, r24
     f9e:	99 1f       	adc	r25, r25
     fa0:	88 0f       	add	r24, r24
     fa2:	99 1f       	adc	r25, r25
     fa4:	88 0f       	add	r24, r24
     fa6:	99 1f       	adc	r25, r25
     fa8:	82 0f       	add	r24, r18
     faa:	93 1f       	adc	r25, r19
     fac:	9a 01       	movw	r18, r20
     fae:	28 1b       	sub	r18, r24
     fb0:	39 0b       	sbc	r19, r25
     fb2:	e1 e0       	ldi	r30, 0x01	; 1
     fb4:	f0 e0       	ldi	r31, 0x00	; 0
     fb6:	ec 0f       	add	r30, r28
     fb8:	fd 1f       	adc	r31, r29
     fba:	e2 0f       	add	r30, r18
     fbc:	f3 1f       	adc	r31, r19
     fbe:	80 81       	ld	r24, Z
     fc0:	80 68       	ori	r24, 0x80	; 128
     fc2:	80 93 62 00 	sts	0x0062, r24	; 0x800062 <__TEXT_REGION_LENGTH__+0x7e0062>
     fc6:	5d c0       	rjmp	.+186    	; 0x1082 <__DATA_REGION_LENGTH__+0x82>
     fc8:	83 b1       	in	r24, 0x03	; 3
     fca:	80 6f       	ori	r24, 0xF0	; 240
     fcc:	83 b9       	out	0x03, r24	; 3
     fce:	80 eb       	ldi	r24, 0xB0	; 176
     fd0:	83 b9       	out	0x03, r24	; 3
     fd2:	20 91 10 02 	lds	r18, 0x0210	; 0x800210 <fndData>
     fd6:	30 91 11 02 	lds	r19, 0x0211	; 0x800211 <fndData+0x1>
     fda:	ad ec       	ldi	r26, 0xCD	; 205
     fdc:	bc ec       	ldi	r27, 0xCC	; 204
     fde:	17 d3       	rcall	.+1582   	; 0x160e <__umulhisi3>
     fe0:	ac 01       	movw	r20, r24
     fe2:	56 95       	lsr	r21
     fe4:	47 95       	ror	r20
     fe6:	56 95       	lsr	r21
     fe8:	47 95       	ror	r20
     fea:	56 95       	lsr	r21
     fec:	47 95       	ror	r20
     fee:	9a 01       	movw	r18, r20
     ff0:	0e d3       	rcall	.+1564   	; 0x160e <__umulhisi3>
     ff2:	96 95       	lsr	r25
     ff4:	87 95       	ror	r24
     ff6:	96 95       	lsr	r25
     ff8:	87 95       	ror	r24
     ffa:	96 95       	lsr	r25
     ffc:	87 95       	ror	r24
     ffe:	9c 01       	movw	r18, r24
    1000:	22 0f       	add	r18, r18
    1002:	33 1f       	adc	r19, r19
    1004:	88 0f       	add	r24, r24
    1006:	99 1f       	adc	r25, r25
    1008:	88 0f       	add	r24, r24
    100a:	99 1f       	adc	r25, r25
    100c:	88 0f       	add	r24, r24
    100e:	99 1f       	adc	r25, r25
    1010:	82 0f       	add	r24, r18
    1012:	93 1f       	adc	r25, r19
    1014:	9a 01       	movw	r18, r20
    1016:	28 1b       	sub	r18, r24
    1018:	39 0b       	sbc	r19, r25
    101a:	e1 e0       	ldi	r30, 0x01	; 1
    101c:	f0 e0       	ldi	r31, 0x00	; 0
    101e:	ec 0f       	add	r30, r28
    1020:	fd 1f       	adc	r31, r29
    1022:	e2 0f       	add	r30, r18
    1024:	f3 1f       	adc	r31, r19
    1026:	80 81       	ld	r24, Z
    1028:	80 93 62 00 	sts	0x0062, r24	; 0x800062 <__TEXT_REGION_LENGTH__+0x7e0062>
    102c:	2a c0       	rjmp	.+84     	; 0x1082 <__DATA_REGION_LENGTH__+0x82>
    102e:	83 b1       	in	r24, 0x03	; 3
    1030:	80 6f       	ori	r24, 0xF0	; 240
    1032:	83 b9       	out	0x03, r24	; 3
    1034:	80 e7       	ldi	r24, 0x70	; 112
    1036:	83 b9       	out	0x03, r24	; 3
    1038:	40 91 10 02 	lds	r20, 0x0210	; 0x800210 <fndData>
    103c:	50 91 11 02 	lds	r21, 0x0211	; 0x800211 <fndData+0x1>
    1040:	9a 01       	movw	r18, r20
    1042:	ad ec       	ldi	r26, 0xCD	; 205
    1044:	bc ec       	ldi	r27, 0xCC	; 204
    1046:	e3 d2       	rcall	.+1478   	; 0x160e <__umulhisi3>
    1048:	96 95       	lsr	r25
    104a:	87 95       	ror	r24
    104c:	96 95       	lsr	r25
    104e:	87 95       	ror	r24
    1050:	96 95       	lsr	r25
    1052:	87 95       	ror	r24
    1054:	9c 01       	movw	r18, r24
    1056:	22 0f       	add	r18, r18
    1058:	33 1f       	adc	r19, r19
    105a:	88 0f       	add	r24, r24
    105c:	99 1f       	adc	r25, r25
    105e:	88 0f       	add	r24, r24
    1060:	99 1f       	adc	r25, r25
    1062:	88 0f       	add	r24, r24
    1064:	99 1f       	adc	r25, r25
    1066:	82 0f       	add	r24, r18
    1068:	93 1f       	adc	r25, r19
    106a:	9a 01       	movw	r18, r20
    106c:	28 1b       	sub	r18, r24
    106e:	39 0b       	sbc	r19, r25
    1070:	e1 e0       	ldi	r30, 0x01	; 1
    1072:	f0 e0       	ldi	r31, 0x00	; 0
    1074:	ec 0f       	add	r30, r28
    1076:	fd 1f       	adc	r31, r29
    1078:	e2 0f       	add	r30, r18
    107a:	f3 1f       	adc	r31, r19
    107c:	80 81       	ld	r24, Z
    107e:	80 93 62 00 	sts	0x0062, r24	; 0x800062 <__TEXT_REGION_LENGTH__+0x7e0062>
    1082:	2a 96       	adiw	r28, 0x0a	; 10
    1084:	0f b6       	in	r0, 0x3f	; 63
    1086:	f8 94       	cli
    1088:	de bf       	out	0x3e, r29	; 62
    108a:	0f be       	out	0x3f, r0	; 63
    108c:	cd bf       	out	0x3d, r28	; 61
    108e:	df 91       	pop	r29
    1090:	cf 91       	pop	r28
    1092:	08 95       	ret

00001094 <FND_dispfan>:
    1094:	cf 93       	push	r28
    1096:	df 93       	push	r29
    1098:	00 d0       	rcall	.+0      	; 0x109a <FND_dispfan+0x6>
    109a:	00 d0       	rcall	.+0      	; 0x109c <FND_dispfan+0x8>
    109c:	1f 92       	push	r1
    109e:	cd b7       	in	r28, 0x3d	; 61
    10a0:	de b7       	in	r29, 0x3e	; 62
    10a2:	85 e0       	ldi	r24, 0x05	; 5
    10a4:	e8 e1       	ldi	r30, 0x18	; 24
    10a6:	f1 e0       	ldi	r31, 0x01	; 1
    10a8:	de 01       	movw	r26, r28
    10aa:	11 96       	adiw	r26, 0x01	; 1
    10ac:	01 90       	ld	r0, Z+
    10ae:	0d 92       	st	X+, r0
    10b0:	8a 95       	dec	r24
    10b2:	e1 f7       	brne	.-8      	; 0x10ac <FND_dispfan+0x18>
    10b4:	80 91 0c 02 	lds	r24, 0x020C	; 0x80020c <__data_end>
    10b8:	90 e0       	ldi	r25, 0x00	; 0
    10ba:	01 96       	adiw	r24, 0x01	; 1
    10bc:	83 70       	andi	r24, 0x03	; 3
    10be:	90 78       	andi	r25, 0x80	; 128
    10c0:	99 23       	and	r25, r25
    10c2:	24 f4       	brge	.+8      	; 0x10cc <FND_dispfan+0x38>
    10c4:	01 97       	sbiw	r24, 0x01	; 1
    10c6:	8c 6f       	ori	r24, 0xFC	; 252
    10c8:	9f 6f       	ori	r25, 0xFF	; 255
    10ca:	01 96       	adiw	r24, 0x01	; 1
    10cc:	80 93 0c 02 	sts	0x020C, r24	; 0x80020c <__data_end>
    10d0:	81 30       	cpi	r24, 0x01	; 1
    10d2:	09 f4       	brne	.+2      	; 0x10d6 <FND_dispfan+0x42>
    10d4:	43 c0       	rjmp	.+134    	; 0x115c <__stack+0x5d>
    10d6:	38 f0       	brcs	.+14     	; 0x10e6 <FND_dispfan+0x52>
    10d8:	82 30       	cpi	r24, 0x02	; 2
    10da:	09 f4       	brne	.+2      	; 0x10de <FND_dispfan+0x4a>
    10dc:	75 c0       	rjmp	.+234    	; 0x11c8 <__stack+0xc9>
    10de:	83 30       	cpi	r24, 0x03	; 3
    10e0:	09 f4       	brne	.+2      	; 0x10e4 <FND_dispfan+0x50>
    10e2:	a5 c0       	rjmp	.+330    	; 0x122e <__stack+0x12f>
    10e4:	ce c0       	rjmp	.+412    	; 0x1282 <__stack+0x183>
    10e6:	83 b1       	in	r24, 0x03	; 3
    10e8:	80 6f       	ori	r24, 0xF0	; 240
    10ea:	83 b9       	out	0x03, r24	; 3
    10ec:	80 ee       	ldi	r24, 0xE0	; 224
    10ee:	83 b9       	out	0x03, r24	; 3
    10f0:	20 91 0e 02 	lds	r18, 0x020E	; 0x80020e <fanData>
    10f4:	30 91 0f 02 	lds	r19, 0x020F	; 0x80020f <fanData+0x1>
    10f8:	36 95       	lsr	r19
    10fa:	27 95       	ror	r18
    10fc:	36 95       	lsr	r19
    10fe:	27 95       	ror	r18
    1100:	36 95       	lsr	r19
    1102:	27 95       	ror	r18
    1104:	a5 ec       	ldi	r26, 0xC5	; 197
    1106:	b0 e2       	ldi	r27, 0x20	; 32
    1108:	82 d2       	rcall	.+1284   	; 0x160e <__umulhisi3>
    110a:	ac 01       	movw	r20, r24
    110c:	52 95       	swap	r21
    110e:	42 95       	swap	r20
    1110:	4f 70       	andi	r20, 0x0F	; 15
    1112:	45 27       	eor	r20, r21
    1114:	5f 70       	andi	r21, 0x0F	; 15
    1116:	45 27       	eor	r20, r21
    1118:	9a 01       	movw	r18, r20
    111a:	ad ec       	ldi	r26, 0xCD	; 205
    111c:	bc ec       	ldi	r27, 0xCC	; 204
    111e:	77 d2       	rcall	.+1262   	; 0x160e <__umulhisi3>
    1120:	96 95       	lsr	r25
    1122:	87 95       	ror	r24
    1124:	96 95       	lsr	r25
    1126:	87 95       	ror	r24
    1128:	96 95       	lsr	r25
    112a:	87 95       	ror	r24
    112c:	9c 01       	movw	r18, r24
    112e:	22 0f       	add	r18, r18
    1130:	33 1f       	adc	r19, r19
    1132:	88 0f       	add	r24, r24
    1134:	99 1f       	adc	r25, r25
    1136:	88 0f       	add	r24, r24
    1138:	99 1f       	adc	r25, r25
    113a:	88 0f       	add	r24, r24
    113c:	99 1f       	adc	r25, r25
    113e:	82 0f       	add	r24, r18
    1140:	93 1f       	adc	r25, r19
    1142:	9a 01       	movw	r18, r20
    1144:	28 1b       	sub	r18, r24
    1146:	39 0b       	sbc	r19, r25
    1148:	e1 e0       	ldi	r30, 0x01	; 1
    114a:	f0 e0       	ldi	r31, 0x00	; 0
    114c:	ec 0f       	add	r30, r28
    114e:	fd 1f       	adc	r31, r29
    1150:	e2 0f       	add	r30, r18
    1152:	f3 1f       	adc	r31, r19
    1154:	80 81       	ld	r24, Z
    1156:	80 93 62 00 	sts	0x0062, r24	; 0x800062 <__TEXT_REGION_LENGTH__+0x7e0062>
    115a:	93 c0       	rjmp	.+294    	; 0x1282 <__stack+0x183>
    115c:	83 b1       	in	r24, 0x03	; 3
    115e:	80 6f       	ori	r24, 0xF0	; 240
    1160:	83 b9       	out	0x03, r24	; 3
    1162:	80 ed       	ldi	r24, 0xD0	; 208
    1164:	83 b9       	out	0x03, r24	; 3
    1166:	20 91 0e 02 	lds	r18, 0x020E	; 0x80020e <fanData>
    116a:	30 91 0f 02 	lds	r19, 0x020F	; 0x80020f <fanData+0x1>
    116e:	36 95       	lsr	r19
    1170:	27 95       	ror	r18
    1172:	36 95       	lsr	r19
    1174:	27 95       	ror	r18
    1176:	ab e7       	ldi	r26, 0x7B	; 123
    1178:	b4 e1       	ldi	r27, 0x14	; 20
    117a:	49 d2       	rcall	.+1170   	; 0x160e <__umulhisi3>
    117c:	ac 01       	movw	r20, r24
    117e:	56 95       	lsr	r21
    1180:	47 95       	ror	r20
    1182:	9a 01       	movw	r18, r20
    1184:	ad ec       	ldi	r26, 0xCD	; 205
    1186:	bc ec       	ldi	r27, 0xCC	; 204
    1188:	42 d2       	rcall	.+1156   	; 0x160e <__umulhisi3>
    118a:	96 95       	lsr	r25
    118c:	87 95       	ror	r24
    118e:	96 95       	lsr	r25
    1190:	87 95       	ror	r24
    1192:	96 95       	lsr	r25
    1194:	87 95       	ror	r24
    1196:	9c 01       	movw	r18, r24
    1198:	22 0f       	add	r18, r18
    119a:	33 1f       	adc	r19, r19
    119c:	88 0f       	add	r24, r24
    119e:	99 1f       	adc	r25, r25
    11a0:	88 0f       	add	r24, r24
    11a2:	99 1f       	adc	r25, r25
    11a4:	88 0f       	add	r24, r24
    11a6:	99 1f       	adc	r25, r25
    11a8:	82 0f       	add	r24, r18
    11aa:	93 1f       	adc	r25, r19
    11ac:	9a 01       	movw	r18, r20
    11ae:	28 1b       	sub	r18, r24
    11b0:	39 0b       	sbc	r19, r25
    11b2:	e1 e0       	ldi	r30, 0x01	; 1
    11b4:	f0 e0       	ldi	r31, 0x00	; 0
    11b6:	ec 0f       	add	r30, r28
    11b8:	fd 1f       	adc	r31, r29
    11ba:	e2 0f       	add	r30, r18
    11bc:	f3 1f       	adc	r31, r19
    11be:	80 81       	ld	r24, Z
    11c0:	80 68       	ori	r24, 0x80	; 128
    11c2:	80 93 62 00 	sts	0x0062, r24	; 0x800062 <__TEXT_REGION_LENGTH__+0x7e0062>
    11c6:	5d c0       	rjmp	.+186    	; 0x1282 <__stack+0x183>
    11c8:	83 b1       	in	r24, 0x03	; 3
    11ca:	80 6f       	ori	r24, 0xF0	; 240
    11cc:	83 b9       	out	0x03, r24	; 3
    11ce:	80 eb       	ldi	r24, 0xB0	; 176
    11d0:	83 b9       	out	0x03, r24	; 3
    11d2:	20 91 0e 02 	lds	r18, 0x020E	; 0x80020e <fanData>
    11d6:	30 91 0f 02 	lds	r19, 0x020F	; 0x80020f <fanData+0x1>
    11da:	ad ec       	ldi	r26, 0xCD	; 205
    11dc:	bc ec       	ldi	r27, 0xCC	; 204
    11de:	17 d2       	rcall	.+1070   	; 0x160e <__umulhisi3>
    11e0:	ac 01       	movw	r20, r24
    11e2:	56 95       	lsr	r21
    11e4:	47 95       	ror	r20
    11e6:	56 95       	lsr	r21
    11e8:	47 95       	ror	r20
    11ea:	56 95       	lsr	r21
    11ec:	47 95       	ror	r20
    11ee:	9a 01       	movw	r18, r20
    11f0:	0e d2       	rcall	.+1052   	; 0x160e <__umulhisi3>
    11f2:	96 95       	lsr	r25
    11f4:	87 95       	ror	r24
    11f6:	96 95       	lsr	r25
    11f8:	87 95       	ror	r24
    11fa:	96 95       	lsr	r25
    11fc:	87 95       	ror	r24
    11fe:	9c 01       	movw	r18, r24
    1200:	22 0f       	add	r18, r18
    1202:	33 1f       	adc	r19, r19
    1204:	88 0f       	add	r24, r24
    1206:	99 1f       	adc	r25, r25
    1208:	88 0f       	add	r24, r24
    120a:	99 1f       	adc	r25, r25
    120c:	88 0f       	add	r24, r24
    120e:	99 1f       	adc	r25, r25
    1210:	82 0f       	add	r24, r18
    1212:	93 1f       	adc	r25, r19
    1214:	9a 01       	movw	r18, r20
    1216:	28 1b       	sub	r18, r24
    1218:	39 0b       	sbc	r19, r25
    121a:	e1 e0       	ldi	r30, 0x01	; 1
    121c:	f0 e0       	ldi	r31, 0x00	; 0
    121e:	ec 0f       	add	r30, r28
    1220:	fd 1f       	adc	r31, r29
    1222:	e2 0f       	add	r30, r18
    1224:	f3 1f       	adc	r31, r19
    1226:	80 81       	ld	r24, Z
    1228:	80 93 62 00 	sts	0x0062, r24	; 0x800062 <__TEXT_REGION_LENGTH__+0x7e0062>
    122c:	2a c0       	rjmp	.+84     	; 0x1282 <__stack+0x183>
    122e:	83 b1       	in	r24, 0x03	; 3
    1230:	80 6f       	ori	r24, 0xF0	; 240
    1232:	83 b9       	out	0x03, r24	; 3
    1234:	80 e7       	ldi	r24, 0x70	; 112
    1236:	83 b9       	out	0x03, r24	; 3
    1238:	40 91 0e 02 	lds	r20, 0x020E	; 0x80020e <fanData>
    123c:	50 91 0f 02 	lds	r21, 0x020F	; 0x80020f <fanData+0x1>
    1240:	9a 01       	movw	r18, r20
    1242:	ad ec       	ldi	r26, 0xCD	; 205
    1244:	bc ec       	ldi	r27, 0xCC	; 204
    1246:	e3 d1       	rcall	.+966    	; 0x160e <__umulhisi3>
    1248:	96 95       	lsr	r25
    124a:	87 95       	ror	r24
    124c:	96 95       	lsr	r25
    124e:	87 95       	ror	r24
    1250:	96 95       	lsr	r25
    1252:	87 95       	ror	r24
    1254:	9c 01       	movw	r18, r24
    1256:	22 0f       	add	r18, r18
    1258:	33 1f       	adc	r19, r19
    125a:	88 0f       	add	r24, r24
    125c:	99 1f       	adc	r25, r25
    125e:	88 0f       	add	r24, r24
    1260:	99 1f       	adc	r25, r25
    1262:	88 0f       	add	r24, r24
    1264:	99 1f       	adc	r25, r25
    1266:	82 0f       	add	r24, r18
    1268:	93 1f       	adc	r25, r19
    126a:	9a 01       	movw	r18, r20
    126c:	28 1b       	sub	r18, r24
    126e:	39 0b       	sbc	r19, r25
    1270:	e1 e0       	ldi	r30, 0x01	; 1
    1272:	f0 e0       	ldi	r31, 0x00	; 0
    1274:	ec 0f       	add	r30, r28
    1276:	fd 1f       	adc	r31, r29
    1278:	e2 0f       	add	r30, r18
    127a:	f3 1f       	adc	r31, r19
    127c:	80 81       	ld	r24, Z
    127e:	80 93 62 00 	sts	0x0062, r24	; 0x800062 <__TEXT_REGION_LENGTH__+0x7e0062>
    1282:	0f 90       	pop	r0
    1284:	0f 90       	pop	r0
    1286:	0f 90       	pop	r0
    1288:	0f 90       	pop	r0
    128a:	0f 90       	pop	r0
    128c:	df 91       	pop	r29
    128e:	cf 91       	pop	r28
    1290:	08 95       	ret

00001292 <FND_setFndData>:
    1292:	90 93 11 02 	sts	0x0211, r25	; 0x800211 <fndData+0x1>
    1296:	80 93 10 02 	sts	0x0210, r24	; 0x800210 <fndData>
    129a:	08 95       	ret

0000129c <FND_ISR_Process>:



void FND_ISR_Process()
{
	FND_dispNum(fndData);
    129c:	80 91 10 02 	lds	r24, 0x0210	; 0x800210 <fndData>
    12a0:	90 91 11 02 	lds	r25, 0x0211	; 0x800211 <fndData+0x1>
    12a4:	f4 cd       	rjmp	.-1048   	; 0xe8e <FND_dispNum>
    12a6:	08 95       	ret

000012a8 <Gpioinit>:
    12a8:	44 e0       	ldi	r20, 0x04	; 4
    12aa:	61 e0       	ldi	r22, 0x01	; 1
    12ac:	87 e3       	ldi	r24, 0x37	; 55
    12ae:	90 e0       	ldi	r25, 0x00	; 0
    12b0:	01 d1       	rcall	.+514    	; 0x14b4 <Gpio_initpin>
    12b2:	46 e0       	ldi	r20, 0x06	; 6
    12b4:	61 e0       	ldi	r22, 0x01	; 1
    12b6:	87 e3       	ldi	r24, 0x37	; 55
    12b8:	90 e0       	ldi	r25, 0x00	; 0
    12ba:	fc d0       	rcall	.+504    	; 0x14b4 <Gpio_initpin>
    12bc:	47 e0       	ldi	r20, 0x07	; 7
    12be:	61 e0       	ldi	r22, 0x01	; 1
    12c0:	87 e3       	ldi	r24, 0x37	; 55
    12c2:	90 e0       	ldi	r25, 0x00	; 0
    12c4:	f7 d0       	rcall	.+494    	; 0x14b4 <Gpio_initpin>
    12c6:	61 e0       	ldi	r22, 0x01	; 1
    12c8:	84 e3       	ldi	r24, 0x34	; 52
    12ca:	90 e0       	ldi	r25, 0x00	; 0
    12cc:	ea c0       	rjmp	.+468    	; 0x14a2 <Gpio_initport>
    12ce:	08 95       	ret

000012d0 <LCDcmdmode>:
    12d0:	40 e0       	ldi	r20, 0x00	; 0
    12d2:	64 e0       	ldi	r22, 0x04	; 4
    12d4:	88 e3       	ldi	r24, 0x38	; 56
    12d6:	90 e0       	ldi	r25, 0x00	; 0
    12d8:	0a c1       	rjmp	.+532    	; 0x14ee <Gpio_writepin>
    12da:	08 95       	ret

000012dc <LCDcharmode>:
    12dc:	41 e0       	ldi	r20, 0x01	; 1
    12de:	64 e0       	ldi	r22, 0x04	; 4
    12e0:	88 e3       	ldi	r24, 0x38	; 56
    12e2:	90 e0       	ldi	r25, 0x00	; 0
    12e4:	04 c1       	rjmp	.+520    	; 0x14ee <Gpio_writepin>
    12e6:	08 95       	ret

000012e8 <LCDwritemode>:
    12e8:	40 e0       	ldi	r20, 0x00	; 0
    12ea:	66 e0       	ldi	r22, 0x06	; 6
    12ec:	88 e3       	ldi	r24, 0x38	; 56
    12ee:	90 e0       	ldi	r25, 0x00	; 0
    12f0:	fe c0       	rjmp	.+508    	; 0x14ee <Gpio_writepin>
    12f2:	08 95       	ret

000012f4 <LCDenablehigh>:
    12f4:	41 e0       	ldi	r20, 0x01	; 1
    12f6:	67 e0       	ldi	r22, 0x07	; 7
    12f8:	88 e3       	ldi	r24, 0x38	; 56
    12fa:	90 e0       	ldi	r25, 0x00	; 0
    12fc:	f8 d0       	rcall	.+496    	; 0x14ee <Gpio_writepin>
    12fe:	8f e9       	ldi	r24, 0x9F	; 159
    1300:	9f e0       	ldi	r25, 0x0F	; 15
    1302:	01 97       	sbiw	r24, 0x01	; 1
    1304:	f1 f7       	brne	.-4      	; 0x1302 <LCDenablehigh+0xe>
    1306:	00 c0       	rjmp	.+0      	; 0x1308 <LCDenablehigh+0x14>
    1308:	00 00       	nop
    130a:	08 95       	ret

0000130c <LCDenablelow>:
    130c:	40 e0       	ldi	r20, 0x00	; 0
    130e:	67 e0       	ldi	r22, 0x07	; 7
    1310:	88 e3       	ldi	r24, 0x38	; 56
    1312:	90 e0       	ldi	r25, 0x00	; 0
    1314:	ec d0       	rcall	.+472    	; 0x14ee <Gpio_writepin>
    1316:	8f e9       	ldi	r24, 0x9F	; 159
    1318:	9f e0       	ldi	r25, 0x0F	; 15
    131a:	01 97       	sbiw	r24, 0x01	; 1
    131c:	f1 f7       	brne	.-4      	; 0x131a <LCDenablelow+0xe>
    131e:	00 c0       	rjmp	.+0      	; 0x1320 <LCDenablelow+0x14>
    1320:	00 00       	nop
    1322:	08 95       	ret

00001324 <LCDwritebyte>:
    1324:	68 2f       	mov	r22, r24
    1326:	85 e3       	ldi	r24, 0x35	; 53
    1328:	90 e0       	ldi	r25, 0x00	; 0
    132a:	de c0       	rjmp	.+444    	; 0x14e8 <Gpio_writeport>
    132c:	08 95       	ret

0000132e <LCDwritecmddata>:
    132e:	cf 93       	push	r28
    1330:	c8 2f       	mov	r28, r24
    1332:	ce df       	rcall	.-100    	; 0x12d0 <LCDcmdmode>
    1334:	d9 df       	rcall	.-78     	; 0x12e8 <LCDwritemode>
    1336:	de df       	rcall	.-68     	; 0x12f4 <LCDenablehigh>
    1338:	8c 2f       	mov	r24, r28
    133a:	f4 df       	rcall	.-24     	; 0x1324 <LCDwritebyte>
    133c:	e7 df       	rcall	.-50     	; 0x130c <LCDenablelow>
    133e:	cf 91       	pop	r28
    1340:	08 95       	ret

00001342 <LCDinit>:
    1342:	b2 df       	rcall	.-156    	; 0x12a8 <Gpioinit>
    1344:	8f e5       	ldi	r24, 0x5F	; 95
    1346:	9a ee       	ldi	r25, 0xEA	; 234
    1348:	01 97       	sbiw	r24, 0x01	; 1
    134a:	f1 f7       	brne	.-4      	; 0x1348 <LCDinit+0x6>
    134c:	00 c0       	rjmp	.+0      	; 0x134e <LCDinit+0xc>
    134e:	00 00       	nop
    1350:	88 e3       	ldi	r24, 0x38	; 56
    1352:	ed df       	rcall	.-38     	; 0x132e <LCDwritecmddata>
    1354:	8f e1       	ldi	r24, 0x1F	; 31
    1356:	9e e4       	ldi	r25, 0x4E	; 78
    1358:	01 97       	sbiw	r24, 0x01	; 1
    135a:	f1 f7       	brne	.-4      	; 0x1358 <LCDinit+0x16>
    135c:	00 c0       	rjmp	.+0      	; 0x135e <LCDinit+0x1c>
    135e:	00 00       	nop
    1360:	88 e3       	ldi	r24, 0x38	; 56
    1362:	e5 df       	rcall	.-54     	; 0x132e <LCDwritecmddata>
    1364:	8f e9       	ldi	r24, 0x9F	; 159
    1366:	9f e0       	ldi	r25, 0x0F	; 15
    1368:	01 97       	sbiw	r24, 0x01	; 1
    136a:	f1 f7       	brne	.-4      	; 0x1368 <LCDinit+0x26>
    136c:	00 c0       	rjmp	.+0      	; 0x136e <LCDinit+0x2c>
    136e:	00 00       	nop
    1370:	88 e3       	ldi	r24, 0x38	; 56
    1372:	dd df       	rcall	.-70     	; 0x132e <LCDwritecmddata>
    1374:	88 e3       	ldi	r24, 0x38	; 56
    1376:	db df       	rcall	.-74     	; 0x132e <LCDwritecmddata>
    1378:	88 e0       	ldi	r24, 0x08	; 8
    137a:	d9 df       	rcall	.-78     	; 0x132e <LCDwritecmddata>
    137c:	81 e0       	ldi	r24, 0x01	; 1
    137e:	d7 df       	rcall	.-82     	; 0x132e <LCDwritecmddata>
    1380:	86 e0       	ldi	r24, 0x06	; 6
    1382:	d5 df       	rcall	.-86     	; 0x132e <LCDwritecmddata>
    1384:	8c e0       	ldi	r24, 0x0C	; 12
    1386:	d3 cf       	rjmp	.-90     	; 0x132e <LCDwritecmddata>
    1388:	08 95       	ret

0000138a <LCDwritechardata>:
    138a:	cf 93       	push	r28
    138c:	c8 2f       	mov	r28, r24
    138e:	a6 df       	rcall	.-180    	; 0x12dc <LCDcharmode>
    1390:	ab df       	rcall	.-170    	; 0x12e8 <LCDwritemode>
    1392:	b0 df       	rcall	.-160    	; 0x12f4 <LCDenablehigh>
    1394:	8c 2f       	mov	r24, r28
    1396:	c6 df       	rcall	.-116    	; 0x1324 <LCDwritebyte>
    1398:	b9 df       	rcall	.-142    	; 0x130c <LCDenablelow>
    139a:	cf 91       	pop	r28
    139c:	08 95       	ret

0000139e <LCDwritestring>:
    139e:	0f 93       	push	r16
    13a0:	1f 93       	push	r17
    13a2:	cf 93       	push	r28
    13a4:	df 93       	push	r29
    13a6:	8c 01       	movw	r16, r24
    13a8:	c0 e0       	ldi	r28, 0x00	; 0
    13aa:	d0 e0       	ldi	r29, 0x00	; 0
    13ac:	02 c0       	rjmp	.+4      	; 0x13b2 <LCDwritestring+0x14>
    13ae:	ed df       	rcall	.-38     	; 0x138a <LCDwritechardata>
    13b0:	21 96       	adiw	r28, 0x01	; 1
    13b2:	f8 01       	movw	r30, r16
    13b4:	ec 0f       	add	r30, r28
    13b6:	fd 1f       	adc	r31, r29
    13b8:	80 81       	ld	r24, Z
    13ba:	81 11       	cpse	r24, r1
    13bc:	f8 cf       	rjmp	.-16     	; 0x13ae <LCDwritestring+0x10>
    13be:	df 91       	pop	r29
    13c0:	cf 91       	pop	r28
    13c2:	1f 91       	pop	r17
    13c4:	0f 91       	pop	r16
    13c6:	08 95       	ret

000013c8 <LCDgotoxy>:
    13c8:	6f 70       	andi	r22, 0x0F	; 15
    13ca:	81 70       	andi	r24, 0x01	; 1
    13cc:	90 e4       	ldi	r25, 0x40	; 64
    13ce:	89 9f       	mul	r24, r25
    13d0:	60 0d       	add	r22, r0
    13d2:	11 24       	eor	r1, r1
    13d4:	86 2f       	mov	r24, r22
    13d6:	80 58       	subi	r24, 0x80	; 128
    13d8:	aa cf       	rjmp	.-172    	; 0x132e <LCDwritecmddata>
    13da:	08 95       	ret

000013dc <LCDwrtiestringxy>:
    13dc:	cf 93       	push	r28
    13de:	df 93       	push	r29
    13e0:	ea 01       	movw	r28, r20
    13e2:	f2 df       	rcall	.-28     	; 0x13c8 <LCDgotoxy>
    13e4:	ce 01       	movw	r24, r28
    13e6:	db df       	rcall	.-74     	; 0x139e <LCDwritestring>
    13e8:	df 91       	pop	r29
    13ea:	cf 91       	pop	r28
    13ec:	08 95       	ret

000013ee <Buzzer_soundOn>:
﻿#include "Mortor.h"

void Buzzer_soundOn()
{
	TCCR3A |= ((1<<COM3A1) | (0<<COM3A0));
    13ee:	eb e8       	ldi	r30, 0x8B	; 139
    13f0:	f0 e0       	ldi	r31, 0x00	; 0
    13f2:	80 81       	ld	r24, Z
    13f4:	80 68       	ori	r24, 0x80	; 128
    13f6:	80 83       	st	Z, r24
    13f8:	08 95       	ret

000013fa <Buzzer_soundOff>:
}
void Buzzer_soundOff()
{
	TCCR3A &= ~((1<<COM3A1) | (1<<COM3A0));
    13fa:	eb e8       	ldi	r30, 0x8B	; 139
    13fc:	f0 e0       	ldi	r31, 0x00	; 0
    13fe:	80 81       	ld	r24, Z
    1400:	8f 73       	andi	r24, 0x3F	; 63
    1402:	80 83       	st	Z, r24
    1404:	08 95       	ret

00001406 <Buzzer_makehz>:
}
void Buzzer_makehz(uint8_t strength, uint16_t hertz)
{
	if (hertz < 100) hertz = 100;
    1406:	64 36       	cpi	r22, 0x64	; 100
    1408:	71 05       	cpc	r23, r1
    140a:	28 f0       	brcs	.+10     	; 0x1416 <Buzzer_makehz+0x10>
	else if(hertz > 5000) hertz = 5000;
    140c:	69 38       	cpi	r22, 0x89	; 137
    140e:	83 e1       	ldi	r24, 0x13	; 19
    1410:	78 07       	cpc	r23, r24
    1412:	20 f4       	brcc	.+8      	; 0x141c <Buzzer_makehz+0x16>
    1414:	05 c0       	rjmp	.+10     	; 0x1420 <Buzzer_makehz+0x1a>
{
	TCCR3A &= ~((1<<COM3A1) | (1<<COM3A0));
}
void Buzzer_makehz(uint8_t strength, uint16_t hertz)
{
	if (hertz < 100) hertz = 100;
    1416:	64 e6       	ldi	r22, 0x64	; 100
    1418:	70 e0       	ldi	r23, 0x00	; 0
    141a:	02 c0       	rjmp	.+4      	; 0x1420 <Buzzer_makehz+0x1a>
	else if(hertz > 5000) hertz = 5000;
    141c:	68 e8       	ldi	r22, 0x88	; 136
    141e:	73 e1       	ldi	r23, 0x13	; 19
	BUZZER_ICR = (250000/  hertz)-1;
    1420:	9b 01       	movw	r18, r22
    1422:	40 e0       	ldi	r20, 0x00	; 0
    1424:	50 e0       	ldi	r21, 0x00	; 0
    1426:	60 e9       	ldi	r22, 0x90	; 144
    1428:	70 ed       	ldi	r23, 0xD0	; 208
    142a:	83 e0       	ldi	r24, 0x03	; 3
    142c:	90 e0       	ldi	r25, 0x00	; 0
    142e:	d3 d0       	rcall	.+422    	; 0x15d6 <__divmodsi4>
    1430:	21 50       	subi	r18, 0x01	; 1
    1432:	31 09       	sbc	r19, r1
    1434:	e0 e8       	ldi	r30, 0x80	; 128
    1436:	f0 e0       	ldi	r31, 0x00	; 0
    1438:	31 83       	std	Z+1, r19	; 0x01
    143a:	20 83       	st	Z, r18
	OCR3A = BUZZER_ICR / 4;				//Duty Cycle 50%
    143c:	80 81       	ld	r24, Z
    143e:	91 81       	ldd	r25, Z+1	; 0x01
    1440:	96 95       	lsr	r25
    1442:	87 95       	ror	r24
    1444:	96 95       	lsr	r25
    1446:	87 95       	ror	r24
    1448:	90 93 87 00 	sts	0x0087, r25	; 0x800087 <__TEXT_REGION_LENGTH__+0x7e0087>
    144c:	80 93 86 00 	sts	0x0086, r24	; 0x800086 <__TEXT_REGION_LENGTH__+0x7e0086>
    1450:	08 95       	ret

00001452 <Buzzer_init>:
}
void Buzzer_init()
{
	TCCR3B |= (0<<CS32) | (1<<CS31) | (1<<CS30); // 주기값
    1452:	ea e8       	ldi	r30, 0x8A	; 138
    1454:	f0 e0       	ldi	r31, 0x00	; 0
    1456:	80 81       	ld	r24, Z
    1458:	83 60       	ori	r24, 0x03	; 3
    145a:	80 83       	st	Z, r24
	
	TCCR3B |= ((1<<WGM33) | (1<<WGM32));
    145c:	80 81       	ld	r24, Z
    145e:	88 61       	ori	r24, 0x18	; 24
    1460:	80 83       	st	Z, r24
	TCCR3A |= ((1<<WGM31) | (0<<WGM30));		// Fast PWM mode
    1462:	eb e8       	ldi	r30, 0x8B	; 139
    1464:	f0 e0       	ldi	r31, 0x00	; 0
    1466:	80 81       	ld	r24, Z
    1468:	82 60       	ori	r24, 0x02	; 2
    146a:	80 83       	st	Z, r24
	
	DDRE |= (1<<3);								// 핀 값 제공
    146c:	82 b1       	in	r24, 0x02	; 2
    146e:	88 60       	ori	r24, 0x08	; 8
    1470:	82 b9       	out	0x02, r24	; 2
    1472:	08 95       	ret

00001474 <Buzzer_buttonOn>:
}
void Buzzer_buttonOn(uint8_t strength, uint16_t hertz)
{
	Buzzer_makehz(strength, hertz);
    1474:	c8 df       	rcall	.-112    	; 0x1406 <Buzzer_makehz>
    1476:	8f e3       	ldi	r24, 0x3F	; 63
    1478:	9c e9       	ldi	r25, 0x9C	; 156
    147a:	01 97       	sbiw	r24, 0x01	; 1
    147c:	f1 f7       	brne	.-4      	; 0x147a <Buzzer_buttonOn+0x6>
    147e:	00 c0       	rjmp	.+0      	; 0x1480 <Buzzer_buttonOn+0xc>
    1480:	00 00       	nop
	_delay_ms(10);
	TCNT3 = 0;
    1482:	10 92 89 00 	sts	0x0089, r1	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
    1486:	10 92 88 00 	sts	0x0088, r1	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
    148a:	08 95       	ret

0000148c <main>:

FILE UARTMODE = FDEV_SETUP_STREAM(UART0_Transmit, NULL,_FDEV_SETUP_WRITE);

int main(void)
{
	wind_init();
    148c:	a6 da       	rcall	.-2740   	; 0x9da <wind_init>
	stdout = &UARTMODE;
    148e:	80 e0       	ldi	r24, 0x00	; 0
    1490:	91 e0       	ldi	r25, 0x01	; 1
    1492:	90 93 be 02 	sts	0x02BE, r25	; 0x8002be <__iob+0x3>
    1496:	80 93 bd 02 	sts	0x02BD, r24	; 0x8002bd <__iob+0x2>
	sei();
	while (1)
	{
		UART0_execute();
    149a:	78 94       	sei
		wind_execute();
    149c:	40 db       	rcall	.-2432   	; 0xb1e <UART0_execute>
    149e:	a8 db       	rcall	.-2224   	; 0xbf0 <wind_execute>
    14a0:	fd cf       	rjmp	.-6      	; 0x149c <main+0x10>

000014a2 <Gpio_initport>:
	}
}
uint8_t Gpio_readport(volatile uint8_t* PIN) // 핀 그대로 반환 말 그대로 읽기
{
	return *PIN;
}
    14a2:	61 30       	cpi	r22, 0x01	; 1
    14a4:	21 f4       	brne	.+8      	; 0x14ae <Gpio_initport+0xc>
    14a6:	2f ef       	ldi	r18, 0xFF	; 255
    14a8:	fc 01       	movw	r30, r24
    14aa:	20 83       	st	Z, r18
    14ac:	08 95       	ret
    14ae:	fc 01       	movw	r30, r24
    14b0:	10 82       	st	Z, r1
    14b2:	08 95       	ret

000014b4 <Gpio_initpin>:
    14b4:	fc 01       	movw	r30, r24
    14b6:	61 30       	cpi	r22, 0x01	; 1
    14b8:	59 f4       	brne	.+22     	; 0x14d0 <Gpio_initpin+0x1c>
    14ba:	20 81       	ld	r18, Z
    14bc:	81 e0       	ldi	r24, 0x01	; 1
    14be:	90 e0       	ldi	r25, 0x00	; 0
    14c0:	02 c0       	rjmp	.+4      	; 0x14c6 <Gpio_initpin+0x12>
    14c2:	88 0f       	add	r24, r24
    14c4:	99 1f       	adc	r25, r25
    14c6:	4a 95       	dec	r20
    14c8:	e2 f7       	brpl	.-8      	; 0x14c2 <Gpio_initpin+0xe>
    14ca:	82 2b       	or	r24, r18
    14cc:	80 83       	st	Z, r24
    14ce:	08 95       	ret
    14d0:	90 81       	ld	r25, Z
    14d2:	21 e0       	ldi	r18, 0x01	; 1
    14d4:	30 e0       	ldi	r19, 0x00	; 0
    14d6:	02 c0       	rjmp	.+4      	; 0x14dc <Gpio_initpin+0x28>
    14d8:	22 0f       	add	r18, r18
    14da:	33 1f       	adc	r19, r19
    14dc:	4a 95       	dec	r20
    14de:	e2 f7       	brpl	.-8      	; 0x14d8 <Gpio_initpin+0x24>
    14e0:	20 95       	com	r18
    14e2:	29 23       	and	r18, r25
    14e4:	20 83       	st	Z, r18
    14e6:	08 95       	ret

000014e8 <Gpio_writeport>:
    14e8:	fc 01       	movw	r30, r24
    14ea:	60 83       	st	Z, r22
    14ec:	08 95       	ret

000014ee <Gpio_writepin>:
    14ee:	fc 01       	movw	r30, r24
    14f0:	41 30       	cpi	r20, 0x01	; 1
    14f2:	59 f4       	brne	.+22     	; 0x150a <Gpio_writepin+0x1c>
    14f4:	20 81       	ld	r18, Z
    14f6:	81 e0       	ldi	r24, 0x01	; 1
    14f8:	90 e0       	ldi	r25, 0x00	; 0
    14fa:	02 c0       	rjmp	.+4      	; 0x1500 <Gpio_writepin+0x12>
    14fc:	88 0f       	add	r24, r24
    14fe:	99 1f       	adc	r25, r25
    1500:	6a 95       	dec	r22
    1502:	e2 f7       	brpl	.-8      	; 0x14fc <Gpio_writepin+0xe>
    1504:	82 2b       	or	r24, r18
    1506:	80 83       	st	Z, r24
    1508:	08 95       	ret
    150a:	90 81       	ld	r25, Z
    150c:	21 e0       	ldi	r18, 0x01	; 1
    150e:	30 e0       	ldi	r19, 0x00	; 0
    1510:	02 c0       	rjmp	.+4      	; 0x1516 <Gpio_writepin+0x28>
    1512:	22 0f       	add	r18, r18
    1514:	33 1f       	adc	r19, r19
    1516:	6a 95       	dec	r22
    1518:	e2 f7       	brpl	.-8      	; 0x1512 <Gpio_writepin+0x24>
    151a:	20 95       	com	r18
    151c:	29 23       	and	r18, r25
    151e:	20 83       	st	Z, r18
    1520:	08 95       	ret

00001522 <Gpio_readpin>:
uint8_t Gpio_readpin(volatile uint8_t* PIN, uint8_t pinNum) // 특정 핀 읽기
{
	return ((*PIN & (1<<pinNum)) != 0);
    1522:	fc 01       	movw	r30, r24
    1524:	80 81       	ld	r24, Z
    1526:	90 e0       	ldi	r25, 0x00	; 0
    1528:	02 c0       	rjmp	.+4      	; 0x152e <Gpio_readpin+0xc>
    152a:	95 95       	asr	r25
    152c:	87 95       	ror	r24
    152e:	6a 95       	dec	r22
    1530:	e2 f7       	brpl	.-8      	; 0x152a <Gpio_readpin+0x8>
}
    1532:	81 70       	andi	r24, 0x01	; 1
    1534:	08 95       	ret

00001536 <TIM0init>:
﻿#include "TIM.h"

void TIM0init() // 1ms overflow Interrupt, FND Display 용도 
{
	TCCR0 |= ((1<<CS02) | (0<<CS01) | (1<<CS00));	// 128 PreScaler 설정
    1536:	83 b7       	in	r24, 0x33	; 51
    1538:	85 60       	ori	r24, 0x05	; 5
    153a:	83 bf       	out	0x33, r24	; 51
	TIMSK |= (1<<TOIE0);							// TIMSK Timer/Counter0 overflow Interrupt Enable
    153c:	87 b7       	in	r24, 0x37	; 55
    153e:	81 60       	ori	r24, 0x01	; 1
    1540:	87 bf       	out	0x37, r24	; 55
	TCNT0 = 130;									// 130부터 시작하라고 선언
    1542:	82 e8       	ldi	r24, 0x82	; 130
    1544:	82 bf       	out	0x32, r24	; 50
    1546:	08 95       	ret

00001548 <TIM2init>:
}

void TIM2init()
{
	// Timer/Counter 2 1/64 1ms period interrupt enable
	TCCR2 |= ((0<<CS22) | (1<<CS21) | (1<<CS20));	// 128 PreScaler 설정
    1548:	85 b5       	in	r24, 0x25	; 37
    154a:	83 60       	ori	r24, 0x03	; 3
    154c:	85 bd       	out	0x25, r24	; 37
	TIMSK |= (1<<OCIE2);
    154e:	87 b7       	in	r24, 0x37	; 55
    1550:	80 68       	ori	r24, 0x80	; 128
    1552:	87 bf       	out	0x37, r24	; 55
	TCCR2 |= ((1<<WGM21) | (0<<WGM20));
    1554:	85 b5       	in	r24, 0x25	; 37
    1556:	88 60       	ori	r24, 0x08	; 8
    1558:	85 bd       	out	0x25, r24	; 37
	OCR2 = 250-1;		// TIMSK Timer/Counter0 overflow Interrupt Enable
    155a:	89 ef       	ldi	r24, 0xF9	; 249
    155c:	83 bd       	out	0x23, r24	; 35
    155e:	08 95       	ret

00001560 <UART0_Transmit>:
	if( !(UCSR0A & (1<<RXC0)) )
	{
		return 0; // Rx Data가 없으면 0
	}
	return 1; // 있으면 1
}
    1560:	5d 9b       	sbis	0x0b, 5	; 11
    1562:	fe cf       	rjmp	.-4      	; 0x1560 <UART0_Transmit>
    1564:	8c b9       	out	0x0c, r24	; 12
    1566:	08 95       	ret

00001568 <UART0_init>:

void UART0_init()
{
	UCSR0B |= (1<<RXEN0) | (1<<TXEN0); //UCSR1B, UCSR0B 중에 선택한거임
    1568:	8a b1       	in	r24, 0x0a	; 10
    156a:	88 61       	ori	r24, 0x18	; 24
    156c:	8a b9       	out	0x0a, r24	; 10
	UCSR0A |= (1<<U2X0);//2배 모드
    156e:	8b b1       	in	r24, 0x0b	; 11
    1570:	82 60       	ori	r24, 0x02	; 2
    1572:	8b b9       	out	0x0b, r24	; 11
	
	UBRR0L = 207; // 16mhz
    1574:	8f ec       	ldi	r24, 0xCF	; 207
    1576:	89 b9       	out	0x09, r24	; 9
	UCSR0B |= (1<<RXCIE0); // 1byte 수신
    1578:	8a b1       	in	r24, 0x0a	; 10
    157a:	80 68       	ori	r24, 0x80	; 128
    157c:	8a b9       	out	0x0a, r24	; 10
    157e:	08 95       	ret

00001580 <UART0_clearRxFlag>:
	_delay_ms(1000);
}

void UART0_clearRxFlag()
{
	uart0Rxflag = 0;
    1580:	10 92 ba 02 	sts	0x02BA, r1	; 0x8002ba <uart0Rxflag>
    1584:	08 95       	ret

00001586 <UART0_setRxFlag>:
}


void UART0_setRxFlag()
{
	uart0Rxflag = 1;
    1586:	81 e0       	ldi	r24, 0x01	; 1
    1588:	80 93 ba 02 	sts	0x02BA, r24	; 0x8002ba <uart0Rxflag>
    158c:	08 95       	ret

0000158e <UART0_ISR_Process>:
// LED2_TOGGLE\n
// LED3_TOGGLE\n
void UART0_ISR_Process()
{
	static uint8_t uart0RxTail = 0;
	uint8_t rx0Data = UDR0;
    158e:	9c b1       	in	r25, 0x0c	; 12

	if(rx0Data == '\n')
    1590:	9a 30       	cpi	r25, 0x0A	; 10
    1592:	81 f4       	brne	.+32     	; 0x15b4 <UART0_ISR_Process+0x26>
	{
		uart0Rxbuff[uart0RxTail] = rx0Data;
    1594:	e0 91 12 02 	lds	r30, 0x0212	; 0x800212 <uart0RxTail.1746>
    1598:	ae 2f       	mov	r26, r30
    159a:	b0 e0       	ldi	r27, 0x00	; 0
    159c:	aa 5a       	subi	r26, 0xAA	; 170
    159e:	bd 4f       	sbci	r27, 0xFD	; 253
    15a0:	9c 93       	st	X, r25
		uart0RxTail++;
    15a2:	ef 5f       	subi	r30, 0xFF	; 255
		uart0Rxbuff[uart0RxTail] = 0;
    15a4:	f0 e0       	ldi	r31, 0x00	; 0
    15a6:	ea 5a       	subi	r30, 0xAA	; 170
    15a8:	fd 4f       	sbci	r31, 0xFD	; 253
    15aa:	10 82       	st	Z, r1
		uart0RxTail = 0;
    15ac:	10 92 12 02 	sts	0x0212, r1	; 0x800212 <uart0RxTail.1746>
		UART0_setRxFlag();
    15b0:	ea cf       	rjmp	.-44     	; 0x1586 <UART0_setRxFlag>
    15b2:	08 95       	ret
	}
	else
	{
		uart0Rxbuff[uart0RxTail] = rx0Data;
    15b4:	80 91 12 02 	lds	r24, 0x0212	; 0x800212 <uart0RxTail.1746>
    15b8:	e8 2f       	mov	r30, r24
    15ba:	f0 e0       	ldi	r31, 0x00	; 0
    15bc:	ea 5a       	subi	r30, 0xAA	; 170
    15be:	fd 4f       	sbci	r31, 0xFD	; 253
    15c0:	90 83       	st	Z, r25
		uart0RxTail++;
    15c2:	8f 5f       	subi	r24, 0xFF	; 255
    15c4:	80 93 12 02 	sts	0x0212, r24	; 0x800212 <uart0RxTail.1746>
    15c8:	08 95       	ret

000015ca <UART0_GetRxFlag>:
}

uint8_t UART0_GetRxFlag()
{
	return uart0Rxflag;
}
    15ca:	80 91 ba 02 	lds	r24, 0x02BA	; 0x8002ba <uart0Rxflag>
    15ce:	08 95       	ret

000015d0 <UART0_readRxBuff>:

uint8_t *UART0_readRxBuff()
{
	return uart0Rxbuff;
    15d0:	86 e5       	ldi	r24, 0x56	; 86
    15d2:	92 e0       	ldi	r25, 0x02	; 2
    15d4:	08 95       	ret

000015d6 <__divmodsi4>:
    15d6:	05 2e       	mov	r0, r21
    15d8:	97 fb       	bst	r25, 7
    15da:	16 f4       	brtc	.+4      	; 0x15e0 <__divmodsi4+0xa>
    15dc:	00 94       	com	r0
    15de:	0f d0       	rcall	.+30     	; 0x15fe <__negsi2>
    15e0:	57 fd       	sbrc	r21, 7
    15e2:	05 d0       	rcall	.+10     	; 0x15ee <__divmodsi4_neg2>
    15e4:	23 d0       	rcall	.+70     	; 0x162c <__udivmodsi4>
    15e6:	07 fc       	sbrc	r0, 7
    15e8:	02 d0       	rcall	.+4      	; 0x15ee <__divmodsi4_neg2>
    15ea:	46 f4       	brtc	.+16     	; 0x15fc <__divmodsi4_exit>
    15ec:	08 c0       	rjmp	.+16     	; 0x15fe <__negsi2>

000015ee <__divmodsi4_neg2>:
    15ee:	50 95       	com	r21
    15f0:	40 95       	com	r20
    15f2:	30 95       	com	r19
    15f4:	21 95       	neg	r18
    15f6:	3f 4f       	sbci	r19, 0xFF	; 255
    15f8:	4f 4f       	sbci	r20, 0xFF	; 255
    15fa:	5f 4f       	sbci	r21, 0xFF	; 255

000015fc <__divmodsi4_exit>:
    15fc:	08 95       	ret

000015fe <__negsi2>:
    15fe:	90 95       	com	r25
    1600:	80 95       	com	r24
    1602:	70 95       	com	r23
    1604:	61 95       	neg	r22
    1606:	7f 4f       	sbci	r23, 0xFF	; 255
    1608:	8f 4f       	sbci	r24, 0xFF	; 255
    160a:	9f 4f       	sbci	r25, 0xFF	; 255
    160c:	08 95       	ret

0000160e <__umulhisi3>:
    160e:	a2 9f       	mul	r26, r18
    1610:	b0 01       	movw	r22, r0
    1612:	b3 9f       	mul	r27, r19
    1614:	c0 01       	movw	r24, r0
    1616:	a3 9f       	mul	r26, r19
    1618:	70 0d       	add	r23, r0
    161a:	81 1d       	adc	r24, r1
    161c:	11 24       	eor	r1, r1
    161e:	91 1d       	adc	r25, r1
    1620:	b2 9f       	mul	r27, r18
    1622:	70 0d       	add	r23, r0
    1624:	81 1d       	adc	r24, r1
    1626:	11 24       	eor	r1, r1
    1628:	91 1d       	adc	r25, r1
    162a:	08 95       	ret

0000162c <__udivmodsi4>:
    162c:	a1 e2       	ldi	r26, 0x21	; 33
    162e:	1a 2e       	mov	r1, r26
    1630:	aa 1b       	sub	r26, r26
    1632:	bb 1b       	sub	r27, r27
    1634:	fd 01       	movw	r30, r26
    1636:	0d c0       	rjmp	.+26     	; 0x1652 <__udivmodsi4_ep>

00001638 <__udivmodsi4_loop>:
    1638:	aa 1f       	adc	r26, r26
    163a:	bb 1f       	adc	r27, r27
    163c:	ee 1f       	adc	r30, r30
    163e:	ff 1f       	adc	r31, r31
    1640:	a2 17       	cp	r26, r18
    1642:	b3 07       	cpc	r27, r19
    1644:	e4 07       	cpc	r30, r20
    1646:	f5 07       	cpc	r31, r21
    1648:	20 f0       	brcs	.+8      	; 0x1652 <__udivmodsi4_ep>
    164a:	a2 1b       	sub	r26, r18
    164c:	b3 0b       	sbc	r27, r19
    164e:	e4 0b       	sbc	r30, r20
    1650:	f5 0b       	sbc	r31, r21

00001652 <__udivmodsi4_ep>:
    1652:	66 1f       	adc	r22, r22
    1654:	77 1f       	adc	r23, r23
    1656:	88 1f       	adc	r24, r24
    1658:	99 1f       	adc	r25, r25
    165a:	1a 94       	dec	r1
    165c:	69 f7       	brne	.-38     	; 0x1638 <__udivmodsi4_loop>
    165e:	60 95       	com	r22
    1660:	70 95       	com	r23
    1662:	80 95       	com	r24
    1664:	90 95       	com	r25
    1666:	9b 01       	movw	r18, r22
    1668:	ac 01       	movw	r20, r24
    166a:	bd 01       	movw	r22, r26
    166c:	cf 01       	movw	r24, r30
    166e:	08 95       	ret

00001670 <strcmp>:
    1670:	fb 01       	movw	r30, r22
    1672:	dc 01       	movw	r26, r24
    1674:	8d 91       	ld	r24, X+
    1676:	01 90       	ld	r0, Z+
    1678:	80 19       	sub	r24, r0
    167a:	01 10       	cpse	r0, r1
    167c:	d9 f3       	breq	.-10     	; 0x1674 <strcmp+0x4>
    167e:	99 0b       	sbc	r25, r25
    1680:	08 95       	ret

00001682 <puts>:
    1682:	0f 93       	push	r16
    1684:	1f 93       	push	r17
    1686:	cf 93       	push	r28
    1688:	df 93       	push	r29
    168a:	e0 91 bd 02 	lds	r30, 0x02BD	; 0x8002bd <__iob+0x2>
    168e:	f0 91 be 02 	lds	r31, 0x02BE	; 0x8002be <__iob+0x3>
    1692:	23 81       	ldd	r18, Z+3	; 0x03
    1694:	21 ff       	sbrs	r18, 1
    1696:	1b c0       	rjmp	.+54     	; 0x16ce <puts+0x4c>
    1698:	8c 01       	movw	r16, r24
    169a:	d0 e0       	ldi	r29, 0x00	; 0
    169c:	c0 e0       	ldi	r28, 0x00	; 0
    169e:	f8 01       	movw	r30, r16
    16a0:	81 91       	ld	r24, Z+
    16a2:	8f 01       	movw	r16, r30
    16a4:	60 91 bd 02 	lds	r22, 0x02BD	; 0x8002bd <__iob+0x2>
    16a8:	70 91 be 02 	lds	r23, 0x02BE	; 0x8002be <__iob+0x3>
    16ac:	db 01       	movw	r26, r22
    16ae:	18 96       	adiw	r26, 0x08	; 8
    16b0:	ed 91       	ld	r30, X+
    16b2:	fc 91       	ld	r31, X
    16b4:	19 97       	sbiw	r26, 0x09	; 9
    16b6:	88 23       	and	r24, r24
    16b8:	31 f0       	breq	.+12     	; 0x16c6 <puts+0x44>
    16ba:	09 95       	icall
    16bc:	89 2b       	or	r24, r25
    16be:	79 f3       	breq	.-34     	; 0x169e <puts+0x1c>
    16c0:	df ef       	ldi	r29, 0xFF	; 255
    16c2:	cf ef       	ldi	r28, 0xFF	; 255
    16c4:	ec cf       	rjmp	.-40     	; 0x169e <puts+0x1c>
    16c6:	8a e0       	ldi	r24, 0x0A	; 10
    16c8:	09 95       	icall
    16ca:	89 2b       	or	r24, r25
    16cc:	19 f0       	breq	.+6      	; 0x16d4 <puts+0x52>
    16ce:	8f ef       	ldi	r24, 0xFF	; 255
    16d0:	9f ef       	ldi	r25, 0xFF	; 255
    16d2:	02 c0       	rjmp	.+4      	; 0x16d8 <puts+0x56>
    16d4:	8d 2f       	mov	r24, r29
    16d6:	9c 2f       	mov	r25, r28
    16d8:	df 91       	pop	r29
    16da:	cf 91       	pop	r28
    16dc:	1f 91       	pop	r17
    16de:	0f 91       	pop	r16
    16e0:	08 95       	ret

000016e2 <sprintf>:
    16e2:	0f 93       	push	r16
    16e4:	1f 93       	push	r17
    16e6:	cf 93       	push	r28
    16e8:	df 93       	push	r29
    16ea:	cd b7       	in	r28, 0x3d	; 61
    16ec:	de b7       	in	r29, 0x3e	; 62
    16ee:	2e 97       	sbiw	r28, 0x0e	; 14
    16f0:	0f b6       	in	r0, 0x3f	; 63
    16f2:	f8 94       	cli
    16f4:	de bf       	out	0x3e, r29	; 62
    16f6:	0f be       	out	0x3f, r0	; 63
    16f8:	cd bf       	out	0x3d, r28	; 61
    16fa:	0d 89       	ldd	r16, Y+21	; 0x15
    16fc:	1e 89       	ldd	r17, Y+22	; 0x16
    16fe:	86 e0       	ldi	r24, 0x06	; 6
    1700:	8c 83       	std	Y+4, r24	; 0x04
    1702:	1a 83       	std	Y+2, r17	; 0x02
    1704:	09 83       	std	Y+1, r16	; 0x01
    1706:	8f ef       	ldi	r24, 0xFF	; 255
    1708:	9f e7       	ldi	r25, 0x7F	; 127
    170a:	9e 83       	std	Y+6, r25	; 0x06
    170c:	8d 83       	std	Y+5, r24	; 0x05
    170e:	ae 01       	movw	r20, r28
    1710:	47 5e       	subi	r20, 0xE7	; 231
    1712:	5f 4f       	sbci	r21, 0xFF	; 255
    1714:	6f 89       	ldd	r22, Y+23	; 0x17
    1716:	78 8d       	ldd	r23, Y+24	; 0x18
    1718:	ce 01       	movw	r24, r28
    171a:	01 96       	adiw	r24, 0x01	; 1
    171c:	10 d0       	rcall	.+32     	; 0x173e <vfprintf>
    171e:	ef 81       	ldd	r30, Y+7	; 0x07
    1720:	f8 85       	ldd	r31, Y+8	; 0x08
    1722:	e0 0f       	add	r30, r16
    1724:	f1 1f       	adc	r31, r17
    1726:	10 82       	st	Z, r1
    1728:	2e 96       	adiw	r28, 0x0e	; 14
    172a:	0f b6       	in	r0, 0x3f	; 63
    172c:	f8 94       	cli
    172e:	de bf       	out	0x3e, r29	; 62
    1730:	0f be       	out	0x3f, r0	; 63
    1732:	cd bf       	out	0x3d, r28	; 61
    1734:	df 91       	pop	r29
    1736:	cf 91       	pop	r28
    1738:	1f 91       	pop	r17
    173a:	0f 91       	pop	r16
    173c:	08 95       	ret

0000173e <vfprintf>:
    173e:	2f 92       	push	r2
    1740:	3f 92       	push	r3
    1742:	4f 92       	push	r4
    1744:	5f 92       	push	r5
    1746:	6f 92       	push	r6
    1748:	7f 92       	push	r7
    174a:	8f 92       	push	r8
    174c:	9f 92       	push	r9
    174e:	af 92       	push	r10
    1750:	bf 92       	push	r11
    1752:	cf 92       	push	r12
    1754:	df 92       	push	r13
    1756:	ef 92       	push	r14
    1758:	ff 92       	push	r15
    175a:	0f 93       	push	r16
    175c:	1f 93       	push	r17
    175e:	cf 93       	push	r28
    1760:	df 93       	push	r29
    1762:	cd b7       	in	r28, 0x3d	; 61
    1764:	de b7       	in	r29, 0x3e	; 62
    1766:	2b 97       	sbiw	r28, 0x0b	; 11
    1768:	0f b6       	in	r0, 0x3f	; 63
    176a:	f8 94       	cli
    176c:	de bf       	out	0x3e, r29	; 62
    176e:	0f be       	out	0x3f, r0	; 63
    1770:	cd bf       	out	0x3d, r28	; 61
    1772:	6c 01       	movw	r12, r24
    1774:	7b 01       	movw	r14, r22
    1776:	8a 01       	movw	r16, r20
    1778:	fc 01       	movw	r30, r24
    177a:	17 82       	std	Z+7, r1	; 0x07
    177c:	16 82       	std	Z+6, r1	; 0x06
    177e:	83 81       	ldd	r24, Z+3	; 0x03
    1780:	81 ff       	sbrs	r24, 1
    1782:	bf c1       	rjmp	.+894    	; 0x1b02 <vfprintf+0x3c4>
    1784:	ce 01       	movw	r24, r28
    1786:	01 96       	adiw	r24, 0x01	; 1
    1788:	3c 01       	movw	r6, r24
    178a:	f6 01       	movw	r30, r12
    178c:	93 81       	ldd	r25, Z+3	; 0x03
    178e:	f7 01       	movw	r30, r14
    1790:	93 fd       	sbrc	r25, 3
    1792:	85 91       	lpm	r24, Z+
    1794:	93 ff       	sbrs	r25, 3
    1796:	81 91       	ld	r24, Z+
    1798:	7f 01       	movw	r14, r30
    179a:	88 23       	and	r24, r24
    179c:	09 f4       	brne	.+2      	; 0x17a0 <vfprintf+0x62>
    179e:	ad c1       	rjmp	.+858    	; 0x1afa <vfprintf+0x3bc>
    17a0:	85 32       	cpi	r24, 0x25	; 37
    17a2:	39 f4       	brne	.+14     	; 0x17b2 <vfprintf+0x74>
    17a4:	93 fd       	sbrc	r25, 3
    17a6:	85 91       	lpm	r24, Z+
    17a8:	93 ff       	sbrs	r25, 3
    17aa:	81 91       	ld	r24, Z+
    17ac:	7f 01       	movw	r14, r30
    17ae:	85 32       	cpi	r24, 0x25	; 37
    17b0:	21 f4       	brne	.+8      	; 0x17ba <vfprintf+0x7c>
    17b2:	b6 01       	movw	r22, r12
    17b4:	90 e0       	ldi	r25, 0x00	; 0
    17b6:	d6 d1       	rcall	.+940    	; 0x1b64 <fputc>
    17b8:	e8 cf       	rjmp	.-48     	; 0x178a <vfprintf+0x4c>
    17ba:	91 2c       	mov	r9, r1
    17bc:	21 2c       	mov	r2, r1
    17be:	31 2c       	mov	r3, r1
    17c0:	ff e1       	ldi	r31, 0x1F	; 31
    17c2:	f3 15       	cp	r31, r3
    17c4:	d8 f0       	brcs	.+54     	; 0x17fc <vfprintf+0xbe>
    17c6:	8b 32       	cpi	r24, 0x2B	; 43
    17c8:	79 f0       	breq	.+30     	; 0x17e8 <vfprintf+0xaa>
    17ca:	38 f4       	brcc	.+14     	; 0x17da <vfprintf+0x9c>
    17cc:	80 32       	cpi	r24, 0x20	; 32
    17ce:	79 f0       	breq	.+30     	; 0x17ee <vfprintf+0xb0>
    17d0:	83 32       	cpi	r24, 0x23	; 35
    17d2:	a1 f4       	brne	.+40     	; 0x17fc <vfprintf+0xbe>
    17d4:	23 2d       	mov	r18, r3
    17d6:	20 61       	ori	r18, 0x10	; 16
    17d8:	1d c0       	rjmp	.+58     	; 0x1814 <vfprintf+0xd6>
    17da:	8d 32       	cpi	r24, 0x2D	; 45
    17dc:	61 f0       	breq	.+24     	; 0x17f6 <vfprintf+0xb8>
    17de:	80 33       	cpi	r24, 0x30	; 48
    17e0:	69 f4       	brne	.+26     	; 0x17fc <vfprintf+0xbe>
    17e2:	23 2d       	mov	r18, r3
    17e4:	21 60       	ori	r18, 0x01	; 1
    17e6:	16 c0       	rjmp	.+44     	; 0x1814 <vfprintf+0xd6>
    17e8:	83 2d       	mov	r24, r3
    17ea:	82 60       	ori	r24, 0x02	; 2
    17ec:	38 2e       	mov	r3, r24
    17ee:	e3 2d       	mov	r30, r3
    17f0:	e4 60       	ori	r30, 0x04	; 4
    17f2:	3e 2e       	mov	r3, r30
    17f4:	2a c0       	rjmp	.+84     	; 0x184a <vfprintf+0x10c>
    17f6:	f3 2d       	mov	r31, r3
    17f8:	f8 60       	ori	r31, 0x08	; 8
    17fa:	1d c0       	rjmp	.+58     	; 0x1836 <vfprintf+0xf8>
    17fc:	37 fc       	sbrc	r3, 7
    17fe:	2d c0       	rjmp	.+90     	; 0x185a <vfprintf+0x11c>
    1800:	20 ed       	ldi	r18, 0xD0	; 208
    1802:	28 0f       	add	r18, r24
    1804:	2a 30       	cpi	r18, 0x0A	; 10
    1806:	40 f0       	brcs	.+16     	; 0x1818 <vfprintf+0xda>
    1808:	8e 32       	cpi	r24, 0x2E	; 46
    180a:	b9 f4       	brne	.+46     	; 0x183a <vfprintf+0xfc>
    180c:	36 fc       	sbrc	r3, 6
    180e:	75 c1       	rjmp	.+746    	; 0x1afa <vfprintf+0x3bc>
    1810:	23 2d       	mov	r18, r3
    1812:	20 64       	ori	r18, 0x40	; 64
    1814:	32 2e       	mov	r3, r18
    1816:	19 c0       	rjmp	.+50     	; 0x184a <vfprintf+0x10c>
    1818:	36 fe       	sbrs	r3, 6
    181a:	06 c0       	rjmp	.+12     	; 0x1828 <vfprintf+0xea>
    181c:	8a e0       	ldi	r24, 0x0A	; 10
    181e:	98 9e       	mul	r9, r24
    1820:	20 0d       	add	r18, r0
    1822:	11 24       	eor	r1, r1
    1824:	92 2e       	mov	r9, r18
    1826:	11 c0       	rjmp	.+34     	; 0x184a <vfprintf+0x10c>
    1828:	ea e0       	ldi	r30, 0x0A	; 10
    182a:	2e 9e       	mul	r2, r30
    182c:	20 0d       	add	r18, r0
    182e:	11 24       	eor	r1, r1
    1830:	22 2e       	mov	r2, r18
    1832:	f3 2d       	mov	r31, r3
    1834:	f0 62       	ori	r31, 0x20	; 32
    1836:	3f 2e       	mov	r3, r31
    1838:	08 c0       	rjmp	.+16     	; 0x184a <vfprintf+0x10c>
    183a:	8c 36       	cpi	r24, 0x6C	; 108
    183c:	21 f4       	brne	.+8      	; 0x1846 <vfprintf+0x108>
    183e:	83 2d       	mov	r24, r3
    1840:	80 68       	ori	r24, 0x80	; 128
    1842:	38 2e       	mov	r3, r24
    1844:	02 c0       	rjmp	.+4      	; 0x184a <vfprintf+0x10c>
    1846:	88 36       	cpi	r24, 0x68	; 104
    1848:	41 f4       	brne	.+16     	; 0x185a <vfprintf+0x11c>
    184a:	f7 01       	movw	r30, r14
    184c:	93 fd       	sbrc	r25, 3
    184e:	85 91       	lpm	r24, Z+
    1850:	93 ff       	sbrs	r25, 3
    1852:	81 91       	ld	r24, Z+
    1854:	7f 01       	movw	r14, r30
    1856:	81 11       	cpse	r24, r1
    1858:	b3 cf       	rjmp	.-154    	; 0x17c0 <vfprintf+0x82>
    185a:	98 2f       	mov	r25, r24
    185c:	9f 7d       	andi	r25, 0xDF	; 223
    185e:	95 54       	subi	r25, 0x45	; 69
    1860:	93 30       	cpi	r25, 0x03	; 3
    1862:	28 f4       	brcc	.+10     	; 0x186e <vfprintf+0x130>
    1864:	0c 5f       	subi	r16, 0xFC	; 252
    1866:	1f 4f       	sbci	r17, 0xFF	; 255
    1868:	9f e3       	ldi	r25, 0x3F	; 63
    186a:	99 83       	std	Y+1, r25	; 0x01
    186c:	0d c0       	rjmp	.+26     	; 0x1888 <vfprintf+0x14a>
    186e:	83 36       	cpi	r24, 0x63	; 99
    1870:	31 f0       	breq	.+12     	; 0x187e <vfprintf+0x140>
    1872:	83 37       	cpi	r24, 0x73	; 115
    1874:	71 f0       	breq	.+28     	; 0x1892 <vfprintf+0x154>
    1876:	83 35       	cpi	r24, 0x53	; 83
    1878:	09 f0       	breq	.+2      	; 0x187c <vfprintf+0x13e>
    187a:	55 c0       	rjmp	.+170    	; 0x1926 <vfprintf+0x1e8>
    187c:	20 c0       	rjmp	.+64     	; 0x18be <vfprintf+0x180>
    187e:	f8 01       	movw	r30, r16
    1880:	80 81       	ld	r24, Z
    1882:	89 83       	std	Y+1, r24	; 0x01
    1884:	0e 5f       	subi	r16, 0xFE	; 254
    1886:	1f 4f       	sbci	r17, 0xFF	; 255
    1888:	88 24       	eor	r8, r8
    188a:	83 94       	inc	r8
    188c:	91 2c       	mov	r9, r1
    188e:	53 01       	movw	r10, r6
    1890:	12 c0       	rjmp	.+36     	; 0x18b6 <vfprintf+0x178>
    1892:	28 01       	movw	r4, r16
    1894:	f2 e0       	ldi	r31, 0x02	; 2
    1896:	4f 0e       	add	r4, r31
    1898:	51 1c       	adc	r5, r1
    189a:	f8 01       	movw	r30, r16
    189c:	a0 80       	ld	r10, Z
    189e:	b1 80       	ldd	r11, Z+1	; 0x01
    18a0:	36 fe       	sbrs	r3, 6
    18a2:	03 c0       	rjmp	.+6      	; 0x18aa <vfprintf+0x16c>
    18a4:	69 2d       	mov	r22, r9
    18a6:	70 e0       	ldi	r23, 0x00	; 0
    18a8:	02 c0       	rjmp	.+4      	; 0x18ae <vfprintf+0x170>
    18aa:	6f ef       	ldi	r22, 0xFF	; 255
    18ac:	7f ef       	ldi	r23, 0xFF	; 255
    18ae:	c5 01       	movw	r24, r10
    18b0:	4e d1       	rcall	.+668    	; 0x1b4e <strnlen>
    18b2:	4c 01       	movw	r8, r24
    18b4:	82 01       	movw	r16, r4
    18b6:	f3 2d       	mov	r31, r3
    18b8:	ff 77       	andi	r31, 0x7F	; 127
    18ba:	3f 2e       	mov	r3, r31
    18bc:	15 c0       	rjmp	.+42     	; 0x18e8 <vfprintf+0x1aa>
    18be:	28 01       	movw	r4, r16
    18c0:	22 e0       	ldi	r18, 0x02	; 2
    18c2:	42 0e       	add	r4, r18
    18c4:	51 1c       	adc	r5, r1
    18c6:	f8 01       	movw	r30, r16
    18c8:	a0 80       	ld	r10, Z
    18ca:	b1 80       	ldd	r11, Z+1	; 0x01
    18cc:	36 fe       	sbrs	r3, 6
    18ce:	03 c0       	rjmp	.+6      	; 0x18d6 <vfprintf+0x198>
    18d0:	69 2d       	mov	r22, r9
    18d2:	70 e0       	ldi	r23, 0x00	; 0
    18d4:	02 c0       	rjmp	.+4      	; 0x18da <vfprintf+0x19c>
    18d6:	6f ef       	ldi	r22, 0xFF	; 255
    18d8:	7f ef       	ldi	r23, 0xFF	; 255
    18da:	c5 01       	movw	r24, r10
    18dc:	2d d1       	rcall	.+602    	; 0x1b38 <strnlen_P>
    18de:	4c 01       	movw	r8, r24
    18e0:	f3 2d       	mov	r31, r3
    18e2:	f0 68       	ori	r31, 0x80	; 128
    18e4:	3f 2e       	mov	r3, r31
    18e6:	82 01       	movw	r16, r4
    18e8:	33 fc       	sbrc	r3, 3
    18ea:	19 c0       	rjmp	.+50     	; 0x191e <vfprintf+0x1e0>
    18ec:	82 2d       	mov	r24, r2
    18ee:	90 e0       	ldi	r25, 0x00	; 0
    18f0:	88 16       	cp	r8, r24
    18f2:	99 06       	cpc	r9, r25
    18f4:	a0 f4       	brcc	.+40     	; 0x191e <vfprintf+0x1e0>
    18f6:	b6 01       	movw	r22, r12
    18f8:	80 e2       	ldi	r24, 0x20	; 32
    18fa:	90 e0       	ldi	r25, 0x00	; 0
    18fc:	33 d1       	rcall	.+614    	; 0x1b64 <fputc>
    18fe:	2a 94       	dec	r2
    1900:	f5 cf       	rjmp	.-22     	; 0x18ec <vfprintf+0x1ae>
    1902:	f5 01       	movw	r30, r10
    1904:	37 fc       	sbrc	r3, 7
    1906:	85 91       	lpm	r24, Z+
    1908:	37 fe       	sbrs	r3, 7
    190a:	81 91       	ld	r24, Z+
    190c:	5f 01       	movw	r10, r30
    190e:	b6 01       	movw	r22, r12
    1910:	90 e0       	ldi	r25, 0x00	; 0
    1912:	28 d1       	rcall	.+592    	; 0x1b64 <fputc>
    1914:	21 10       	cpse	r2, r1
    1916:	2a 94       	dec	r2
    1918:	21 e0       	ldi	r18, 0x01	; 1
    191a:	82 1a       	sub	r8, r18
    191c:	91 08       	sbc	r9, r1
    191e:	81 14       	cp	r8, r1
    1920:	91 04       	cpc	r9, r1
    1922:	79 f7       	brne	.-34     	; 0x1902 <vfprintf+0x1c4>
    1924:	e1 c0       	rjmp	.+450    	; 0x1ae8 <vfprintf+0x3aa>
    1926:	84 36       	cpi	r24, 0x64	; 100
    1928:	11 f0       	breq	.+4      	; 0x192e <vfprintf+0x1f0>
    192a:	89 36       	cpi	r24, 0x69	; 105
    192c:	39 f5       	brne	.+78     	; 0x197c <vfprintf+0x23e>
    192e:	f8 01       	movw	r30, r16
    1930:	37 fe       	sbrs	r3, 7
    1932:	07 c0       	rjmp	.+14     	; 0x1942 <vfprintf+0x204>
    1934:	60 81       	ld	r22, Z
    1936:	71 81       	ldd	r23, Z+1	; 0x01
    1938:	82 81       	ldd	r24, Z+2	; 0x02
    193a:	93 81       	ldd	r25, Z+3	; 0x03
    193c:	0c 5f       	subi	r16, 0xFC	; 252
    193e:	1f 4f       	sbci	r17, 0xFF	; 255
    1940:	08 c0       	rjmp	.+16     	; 0x1952 <vfprintf+0x214>
    1942:	60 81       	ld	r22, Z
    1944:	71 81       	ldd	r23, Z+1	; 0x01
    1946:	07 2e       	mov	r0, r23
    1948:	00 0c       	add	r0, r0
    194a:	88 0b       	sbc	r24, r24
    194c:	99 0b       	sbc	r25, r25
    194e:	0e 5f       	subi	r16, 0xFE	; 254
    1950:	1f 4f       	sbci	r17, 0xFF	; 255
    1952:	f3 2d       	mov	r31, r3
    1954:	ff 76       	andi	r31, 0x6F	; 111
    1956:	3f 2e       	mov	r3, r31
    1958:	97 ff       	sbrs	r25, 7
    195a:	09 c0       	rjmp	.+18     	; 0x196e <vfprintf+0x230>
    195c:	90 95       	com	r25
    195e:	80 95       	com	r24
    1960:	70 95       	com	r23
    1962:	61 95       	neg	r22
    1964:	7f 4f       	sbci	r23, 0xFF	; 255
    1966:	8f 4f       	sbci	r24, 0xFF	; 255
    1968:	9f 4f       	sbci	r25, 0xFF	; 255
    196a:	f0 68       	ori	r31, 0x80	; 128
    196c:	3f 2e       	mov	r3, r31
    196e:	2a e0       	ldi	r18, 0x0A	; 10
    1970:	30 e0       	ldi	r19, 0x00	; 0
    1972:	a3 01       	movw	r20, r6
    1974:	33 d1       	rcall	.+614    	; 0x1bdc <__ultoa_invert>
    1976:	88 2e       	mov	r8, r24
    1978:	86 18       	sub	r8, r6
    197a:	44 c0       	rjmp	.+136    	; 0x1a04 <vfprintf+0x2c6>
    197c:	85 37       	cpi	r24, 0x75	; 117
    197e:	31 f4       	brne	.+12     	; 0x198c <vfprintf+0x24e>
    1980:	23 2d       	mov	r18, r3
    1982:	2f 7e       	andi	r18, 0xEF	; 239
    1984:	b2 2e       	mov	r11, r18
    1986:	2a e0       	ldi	r18, 0x0A	; 10
    1988:	30 e0       	ldi	r19, 0x00	; 0
    198a:	25 c0       	rjmp	.+74     	; 0x19d6 <vfprintf+0x298>
    198c:	93 2d       	mov	r25, r3
    198e:	99 7f       	andi	r25, 0xF9	; 249
    1990:	b9 2e       	mov	r11, r25
    1992:	8f 36       	cpi	r24, 0x6F	; 111
    1994:	c1 f0       	breq	.+48     	; 0x19c6 <vfprintf+0x288>
    1996:	18 f4       	brcc	.+6      	; 0x199e <vfprintf+0x260>
    1998:	88 35       	cpi	r24, 0x58	; 88
    199a:	79 f0       	breq	.+30     	; 0x19ba <vfprintf+0x27c>
    199c:	ae c0       	rjmp	.+348    	; 0x1afa <vfprintf+0x3bc>
    199e:	80 37       	cpi	r24, 0x70	; 112
    19a0:	19 f0       	breq	.+6      	; 0x19a8 <vfprintf+0x26a>
    19a2:	88 37       	cpi	r24, 0x78	; 120
    19a4:	21 f0       	breq	.+8      	; 0x19ae <vfprintf+0x270>
    19a6:	a9 c0       	rjmp	.+338    	; 0x1afa <vfprintf+0x3bc>
    19a8:	e9 2f       	mov	r30, r25
    19aa:	e0 61       	ori	r30, 0x10	; 16
    19ac:	be 2e       	mov	r11, r30
    19ae:	b4 fe       	sbrs	r11, 4
    19b0:	0d c0       	rjmp	.+26     	; 0x19cc <vfprintf+0x28e>
    19b2:	fb 2d       	mov	r31, r11
    19b4:	f4 60       	ori	r31, 0x04	; 4
    19b6:	bf 2e       	mov	r11, r31
    19b8:	09 c0       	rjmp	.+18     	; 0x19cc <vfprintf+0x28e>
    19ba:	34 fe       	sbrs	r3, 4
    19bc:	0a c0       	rjmp	.+20     	; 0x19d2 <vfprintf+0x294>
    19be:	29 2f       	mov	r18, r25
    19c0:	26 60       	ori	r18, 0x06	; 6
    19c2:	b2 2e       	mov	r11, r18
    19c4:	06 c0       	rjmp	.+12     	; 0x19d2 <vfprintf+0x294>
    19c6:	28 e0       	ldi	r18, 0x08	; 8
    19c8:	30 e0       	ldi	r19, 0x00	; 0
    19ca:	05 c0       	rjmp	.+10     	; 0x19d6 <vfprintf+0x298>
    19cc:	20 e1       	ldi	r18, 0x10	; 16
    19ce:	30 e0       	ldi	r19, 0x00	; 0
    19d0:	02 c0       	rjmp	.+4      	; 0x19d6 <vfprintf+0x298>
    19d2:	20 e1       	ldi	r18, 0x10	; 16
    19d4:	32 e0       	ldi	r19, 0x02	; 2
    19d6:	f8 01       	movw	r30, r16
    19d8:	b7 fe       	sbrs	r11, 7
    19da:	07 c0       	rjmp	.+14     	; 0x19ea <vfprintf+0x2ac>
    19dc:	60 81       	ld	r22, Z
    19de:	71 81       	ldd	r23, Z+1	; 0x01
    19e0:	82 81       	ldd	r24, Z+2	; 0x02
    19e2:	93 81       	ldd	r25, Z+3	; 0x03
    19e4:	0c 5f       	subi	r16, 0xFC	; 252
    19e6:	1f 4f       	sbci	r17, 0xFF	; 255
    19e8:	06 c0       	rjmp	.+12     	; 0x19f6 <vfprintf+0x2b8>
    19ea:	60 81       	ld	r22, Z
    19ec:	71 81       	ldd	r23, Z+1	; 0x01
    19ee:	80 e0       	ldi	r24, 0x00	; 0
    19f0:	90 e0       	ldi	r25, 0x00	; 0
    19f2:	0e 5f       	subi	r16, 0xFE	; 254
    19f4:	1f 4f       	sbci	r17, 0xFF	; 255
    19f6:	a3 01       	movw	r20, r6
    19f8:	f1 d0       	rcall	.+482    	; 0x1bdc <__ultoa_invert>
    19fa:	88 2e       	mov	r8, r24
    19fc:	86 18       	sub	r8, r6
    19fe:	fb 2d       	mov	r31, r11
    1a00:	ff 77       	andi	r31, 0x7F	; 127
    1a02:	3f 2e       	mov	r3, r31
    1a04:	36 fe       	sbrs	r3, 6
    1a06:	0d c0       	rjmp	.+26     	; 0x1a22 <vfprintf+0x2e4>
    1a08:	23 2d       	mov	r18, r3
    1a0a:	2e 7f       	andi	r18, 0xFE	; 254
    1a0c:	a2 2e       	mov	r10, r18
    1a0e:	89 14       	cp	r8, r9
    1a10:	58 f4       	brcc	.+22     	; 0x1a28 <vfprintf+0x2ea>
    1a12:	34 fe       	sbrs	r3, 4
    1a14:	0b c0       	rjmp	.+22     	; 0x1a2c <vfprintf+0x2ee>
    1a16:	32 fc       	sbrc	r3, 2
    1a18:	09 c0       	rjmp	.+18     	; 0x1a2c <vfprintf+0x2ee>
    1a1a:	83 2d       	mov	r24, r3
    1a1c:	8e 7e       	andi	r24, 0xEE	; 238
    1a1e:	a8 2e       	mov	r10, r24
    1a20:	05 c0       	rjmp	.+10     	; 0x1a2c <vfprintf+0x2ee>
    1a22:	b8 2c       	mov	r11, r8
    1a24:	a3 2c       	mov	r10, r3
    1a26:	03 c0       	rjmp	.+6      	; 0x1a2e <vfprintf+0x2f0>
    1a28:	b8 2c       	mov	r11, r8
    1a2a:	01 c0       	rjmp	.+2      	; 0x1a2e <vfprintf+0x2f0>
    1a2c:	b9 2c       	mov	r11, r9
    1a2e:	a4 fe       	sbrs	r10, 4
    1a30:	0f c0       	rjmp	.+30     	; 0x1a50 <vfprintf+0x312>
    1a32:	fe 01       	movw	r30, r28
    1a34:	e8 0d       	add	r30, r8
    1a36:	f1 1d       	adc	r31, r1
    1a38:	80 81       	ld	r24, Z
    1a3a:	80 33       	cpi	r24, 0x30	; 48
    1a3c:	21 f4       	brne	.+8      	; 0x1a46 <vfprintf+0x308>
    1a3e:	9a 2d       	mov	r25, r10
    1a40:	99 7e       	andi	r25, 0xE9	; 233
    1a42:	a9 2e       	mov	r10, r25
    1a44:	09 c0       	rjmp	.+18     	; 0x1a58 <vfprintf+0x31a>
    1a46:	a2 fe       	sbrs	r10, 2
    1a48:	06 c0       	rjmp	.+12     	; 0x1a56 <vfprintf+0x318>
    1a4a:	b3 94       	inc	r11
    1a4c:	b3 94       	inc	r11
    1a4e:	04 c0       	rjmp	.+8      	; 0x1a58 <vfprintf+0x31a>
    1a50:	8a 2d       	mov	r24, r10
    1a52:	86 78       	andi	r24, 0x86	; 134
    1a54:	09 f0       	breq	.+2      	; 0x1a58 <vfprintf+0x31a>
    1a56:	b3 94       	inc	r11
    1a58:	a3 fc       	sbrc	r10, 3
    1a5a:	10 c0       	rjmp	.+32     	; 0x1a7c <vfprintf+0x33e>
    1a5c:	a0 fe       	sbrs	r10, 0
    1a5e:	06 c0       	rjmp	.+12     	; 0x1a6c <vfprintf+0x32e>
    1a60:	b2 14       	cp	r11, r2
    1a62:	80 f4       	brcc	.+32     	; 0x1a84 <vfprintf+0x346>
    1a64:	28 0c       	add	r2, r8
    1a66:	92 2c       	mov	r9, r2
    1a68:	9b 18       	sub	r9, r11
    1a6a:	0d c0       	rjmp	.+26     	; 0x1a86 <vfprintf+0x348>
    1a6c:	b2 14       	cp	r11, r2
    1a6e:	58 f4       	brcc	.+22     	; 0x1a86 <vfprintf+0x348>
    1a70:	b6 01       	movw	r22, r12
    1a72:	80 e2       	ldi	r24, 0x20	; 32
    1a74:	90 e0       	ldi	r25, 0x00	; 0
    1a76:	76 d0       	rcall	.+236    	; 0x1b64 <fputc>
    1a78:	b3 94       	inc	r11
    1a7a:	f8 cf       	rjmp	.-16     	; 0x1a6c <vfprintf+0x32e>
    1a7c:	b2 14       	cp	r11, r2
    1a7e:	18 f4       	brcc	.+6      	; 0x1a86 <vfprintf+0x348>
    1a80:	2b 18       	sub	r2, r11
    1a82:	02 c0       	rjmp	.+4      	; 0x1a88 <vfprintf+0x34a>
    1a84:	98 2c       	mov	r9, r8
    1a86:	21 2c       	mov	r2, r1
    1a88:	a4 fe       	sbrs	r10, 4
    1a8a:	0f c0       	rjmp	.+30     	; 0x1aaa <vfprintf+0x36c>
    1a8c:	b6 01       	movw	r22, r12
    1a8e:	80 e3       	ldi	r24, 0x30	; 48
    1a90:	90 e0       	ldi	r25, 0x00	; 0
    1a92:	68 d0       	rcall	.+208    	; 0x1b64 <fputc>
    1a94:	a2 fe       	sbrs	r10, 2
    1a96:	16 c0       	rjmp	.+44     	; 0x1ac4 <vfprintf+0x386>
    1a98:	a1 fc       	sbrc	r10, 1
    1a9a:	03 c0       	rjmp	.+6      	; 0x1aa2 <vfprintf+0x364>
    1a9c:	88 e7       	ldi	r24, 0x78	; 120
    1a9e:	90 e0       	ldi	r25, 0x00	; 0
    1aa0:	02 c0       	rjmp	.+4      	; 0x1aa6 <vfprintf+0x368>
    1aa2:	88 e5       	ldi	r24, 0x58	; 88
    1aa4:	90 e0       	ldi	r25, 0x00	; 0
    1aa6:	b6 01       	movw	r22, r12
    1aa8:	0c c0       	rjmp	.+24     	; 0x1ac2 <vfprintf+0x384>
    1aaa:	8a 2d       	mov	r24, r10
    1aac:	86 78       	andi	r24, 0x86	; 134
    1aae:	51 f0       	breq	.+20     	; 0x1ac4 <vfprintf+0x386>
    1ab0:	a1 fe       	sbrs	r10, 1
    1ab2:	02 c0       	rjmp	.+4      	; 0x1ab8 <vfprintf+0x37a>
    1ab4:	8b e2       	ldi	r24, 0x2B	; 43
    1ab6:	01 c0       	rjmp	.+2      	; 0x1aba <vfprintf+0x37c>
    1ab8:	80 e2       	ldi	r24, 0x20	; 32
    1aba:	a7 fc       	sbrc	r10, 7
    1abc:	8d e2       	ldi	r24, 0x2D	; 45
    1abe:	b6 01       	movw	r22, r12
    1ac0:	90 e0       	ldi	r25, 0x00	; 0
    1ac2:	50 d0       	rcall	.+160    	; 0x1b64 <fputc>
    1ac4:	89 14       	cp	r8, r9
    1ac6:	30 f4       	brcc	.+12     	; 0x1ad4 <vfprintf+0x396>
    1ac8:	b6 01       	movw	r22, r12
    1aca:	80 e3       	ldi	r24, 0x30	; 48
    1acc:	90 e0       	ldi	r25, 0x00	; 0
    1ace:	4a d0       	rcall	.+148    	; 0x1b64 <fputc>
    1ad0:	9a 94       	dec	r9
    1ad2:	f8 cf       	rjmp	.-16     	; 0x1ac4 <vfprintf+0x386>
    1ad4:	8a 94       	dec	r8
    1ad6:	f3 01       	movw	r30, r6
    1ad8:	e8 0d       	add	r30, r8
    1ada:	f1 1d       	adc	r31, r1
    1adc:	80 81       	ld	r24, Z
    1ade:	b6 01       	movw	r22, r12
    1ae0:	90 e0       	ldi	r25, 0x00	; 0
    1ae2:	40 d0       	rcall	.+128    	; 0x1b64 <fputc>
    1ae4:	81 10       	cpse	r8, r1
    1ae6:	f6 cf       	rjmp	.-20     	; 0x1ad4 <vfprintf+0x396>
    1ae8:	22 20       	and	r2, r2
    1aea:	09 f4       	brne	.+2      	; 0x1aee <vfprintf+0x3b0>
    1aec:	4e ce       	rjmp	.-868    	; 0x178a <vfprintf+0x4c>
    1aee:	b6 01       	movw	r22, r12
    1af0:	80 e2       	ldi	r24, 0x20	; 32
    1af2:	90 e0       	ldi	r25, 0x00	; 0
    1af4:	37 d0       	rcall	.+110    	; 0x1b64 <fputc>
    1af6:	2a 94       	dec	r2
    1af8:	f7 cf       	rjmp	.-18     	; 0x1ae8 <vfprintf+0x3aa>
    1afa:	f6 01       	movw	r30, r12
    1afc:	86 81       	ldd	r24, Z+6	; 0x06
    1afe:	97 81       	ldd	r25, Z+7	; 0x07
    1b00:	02 c0       	rjmp	.+4      	; 0x1b06 <vfprintf+0x3c8>
    1b02:	8f ef       	ldi	r24, 0xFF	; 255
    1b04:	9f ef       	ldi	r25, 0xFF	; 255
    1b06:	2b 96       	adiw	r28, 0x0b	; 11
    1b08:	0f b6       	in	r0, 0x3f	; 63
    1b0a:	f8 94       	cli
    1b0c:	de bf       	out	0x3e, r29	; 62
    1b0e:	0f be       	out	0x3f, r0	; 63
    1b10:	cd bf       	out	0x3d, r28	; 61
    1b12:	df 91       	pop	r29
    1b14:	cf 91       	pop	r28
    1b16:	1f 91       	pop	r17
    1b18:	0f 91       	pop	r16
    1b1a:	ff 90       	pop	r15
    1b1c:	ef 90       	pop	r14
    1b1e:	df 90       	pop	r13
    1b20:	cf 90       	pop	r12
    1b22:	bf 90       	pop	r11
    1b24:	af 90       	pop	r10
    1b26:	9f 90       	pop	r9
    1b28:	8f 90       	pop	r8
    1b2a:	7f 90       	pop	r7
    1b2c:	6f 90       	pop	r6
    1b2e:	5f 90       	pop	r5
    1b30:	4f 90       	pop	r4
    1b32:	3f 90       	pop	r3
    1b34:	2f 90       	pop	r2
    1b36:	08 95       	ret

00001b38 <strnlen_P>:
    1b38:	fc 01       	movw	r30, r24
    1b3a:	05 90       	lpm	r0, Z+
    1b3c:	61 50       	subi	r22, 0x01	; 1
    1b3e:	70 40       	sbci	r23, 0x00	; 0
    1b40:	01 10       	cpse	r0, r1
    1b42:	d8 f7       	brcc	.-10     	; 0x1b3a <strnlen_P+0x2>
    1b44:	80 95       	com	r24
    1b46:	90 95       	com	r25
    1b48:	8e 0f       	add	r24, r30
    1b4a:	9f 1f       	adc	r25, r31
    1b4c:	08 95       	ret

00001b4e <strnlen>:
    1b4e:	fc 01       	movw	r30, r24
    1b50:	61 50       	subi	r22, 0x01	; 1
    1b52:	70 40       	sbci	r23, 0x00	; 0
    1b54:	01 90       	ld	r0, Z+
    1b56:	01 10       	cpse	r0, r1
    1b58:	d8 f7       	brcc	.-10     	; 0x1b50 <strnlen+0x2>
    1b5a:	80 95       	com	r24
    1b5c:	90 95       	com	r25
    1b5e:	8e 0f       	add	r24, r30
    1b60:	9f 1f       	adc	r25, r31
    1b62:	08 95       	ret

00001b64 <fputc>:
    1b64:	0f 93       	push	r16
    1b66:	1f 93       	push	r17
    1b68:	cf 93       	push	r28
    1b6a:	df 93       	push	r29
    1b6c:	fb 01       	movw	r30, r22
    1b6e:	23 81       	ldd	r18, Z+3	; 0x03
    1b70:	21 fd       	sbrc	r18, 1
    1b72:	03 c0       	rjmp	.+6      	; 0x1b7a <fputc+0x16>
    1b74:	8f ef       	ldi	r24, 0xFF	; 255
    1b76:	9f ef       	ldi	r25, 0xFF	; 255
    1b78:	2c c0       	rjmp	.+88     	; 0x1bd2 <fputc+0x6e>
    1b7a:	22 ff       	sbrs	r18, 2
    1b7c:	16 c0       	rjmp	.+44     	; 0x1baa <fputc+0x46>
    1b7e:	46 81       	ldd	r20, Z+6	; 0x06
    1b80:	57 81       	ldd	r21, Z+7	; 0x07
    1b82:	24 81       	ldd	r18, Z+4	; 0x04
    1b84:	35 81       	ldd	r19, Z+5	; 0x05
    1b86:	42 17       	cp	r20, r18
    1b88:	53 07       	cpc	r21, r19
    1b8a:	44 f4       	brge	.+16     	; 0x1b9c <fputc+0x38>
    1b8c:	a0 81       	ld	r26, Z
    1b8e:	b1 81       	ldd	r27, Z+1	; 0x01
    1b90:	9d 01       	movw	r18, r26
    1b92:	2f 5f       	subi	r18, 0xFF	; 255
    1b94:	3f 4f       	sbci	r19, 0xFF	; 255
    1b96:	31 83       	std	Z+1, r19	; 0x01
    1b98:	20 83       	st	Z, r18
    1b9a:	8c 93       	st	X, r24
    1b9c:	26 81       	ldd	r18, Z+6	; 0x06
    1b9e:	37 81       	ldd	r19, Z+7	; 0x07
    1ba0:	2f 5f       	subi	r18, 0xFF	; 255
    1ba2:	3f 4f       	sbci	r19, 0xFF	; 255
    1ba4:	37 83       	std	Z+7, r19	; 0x07
    1ba6:	26 83       	std	Z+6, r18	; 0x06
    1ba8:	14 c0       	rjmp	.+40     	; 0x1bd2 <fputc+0x6e>
    1baa:	8b 01       	movw	r16, r22
    1bac:	ec 01       	movw	r28, r24
    1bae:	fb 01       	movw	r30, r22
    1bb0:	00 84       	ldd	r0, Z+8	; 0x08
    1bb2:	f1 85       	ldd	r31, Z+9	; 0x09
    1bb4:	e0 2d       	mov	r30, r0
    1bb6:	09 95       	icall
    1bb8:	89 2b       	or	r24, r25
    1bba:	e1 f6       	brne	.-72     	; 0x1b74 <fputc+0x10>
    1bbc:	d8 01       	movw	r26, r16
    1bbe:	16 96       	adiw	r26, 0x06	; 6
    1bc0:	8d 91       	ld	r24, X+
    1bc2:	9c 91       	ld	r25, X
    1bc4:	17 97       	sbiw	r26, 0x07	; 7
    1bc6:	01 96       	adiw	r24, 0x01	; 1
    1bc8:	17 96       	adiw	r26, 0x07	; 7
    1bca:	9c 93       	st	X, r25
    1bcc:	8e 93       	st	-X, r24
    1bce:	16 97       	sbiw	r26, 0x06	; 6
    1bd0:	ce 01       	movw	r24, r28
    1bd2:	df 91       	pop	r29
    1bd4:	cf 91       	pop	r28
    1bd6:	1f 91       	pop	r17
    1bd8:	0f 91       	pop	r16
    1bda:	08 95       	ret

00001bdc <__ultoa_invert>:
    1bdc:	fa 01       	movw	r30, r20
    1bde:	aa 27       	eor	r26, r26
    1be0:	28 30       	cpi	r18, 0x08	; 8
    1be2:	51 f1       	breq	.+84     	; 0x1c38 <__ultoa_invert+0x5c>
    1be4:	20 31       	cpi	r18, 0x10	; 16
    1be6:	81 f1       	breq	.+96     	; 0x1c48 <__ultoa_invert+0x6c>
    1be8:	e8 94       	clt
    1bea:	6f 93       	push	r22
    1bec:	6e 7f       	andi	r22, 0xFE	; 254
    1bee:	6e 5f       	subi	r22, 0xFE	; 254
    1bf0:	7f 4f       	sbci	r23, 0xFF	; 255
    1bf2:	8f 4f       	sbci	r24, 0xFF	; 255
    1bf4:	9f 4f       	sbci	r25, 0xFF	; 255
    1bf6:	af 4f       	sbci	r26, 0xFF	; 255
    1bf8:	b1 e0       	ldi	r27, 0x01	; 1
    1bfa:	3e d0       	rcall	.+124    	; 0x1c78 <__ultoa_invert+0x9c>
    1bfc:	b4 e0       	ldi	r27, 0x04	; 4
    1bfe:	3c d0       	rcall	.+120    	; 0x1c78 <__ultoa_invert+0x9c>
    1c00:	67 0f       	add	r22, r23
    1c02:	78 1f       	adc	r23, r24
    1c04:	89 1f       	adc	r24, r25
    1c06:	9a 1f       	adc	r25, r26
    1c08:	a1 1d       	adc	r26, r1
    1c0a:	68 0f       	add	r22, r24
    1c0c:	79 1f       	adc	r23, r25
    1c0e:	8a 1f       	adc	r24, r26
    1c10:	91 1d       	adc	r25, r1
    1c12:	a1 1d       	adc	r26, r1
    1c14:	6a 0f       	add	r22, r26
    1c16:	71 1d       	adc	r23, r1
    1c18:	81 1d       	adc	r24, r1
    1c1a:	91 1d       	adc	r25, r1
    1c1c:	a1 1d       	adc	r26, r1
    1c1e:	20 d0       	rcall	.+64     	; 0x1c60 <__ultoa_invert+0x84>
    1c20:	09 f4       	brne	.+2      	; 0x1c24 <__ultoa_invert+0x48>
    1c22:	68 94       	set
    1c24:	3f 91       	pop	r19
    1c26:	2a e0       	ldi	r18, 0x0A	; 10
    1c28:	26 9f       	mul	r18, r22
    1c2a:	11 24       	eor	r1, r1
    1c2c:	30 19       	sub	r19, r0
    1c2e:	30 5d       	subi	r19, 0xD0	; 208
    1c30:	31 93       	st	Z+, r19
    1c32:	de f6       	brtc	.-74     	; 0x1bea <__ultoa_invert+0xe>
    1c34:	cf 01       	movw	r24, r30
    1c36:	08 95       	ret
    1c38:	46 2f       	mov	r20, r22
    1c3a:	47 70       	andi	r20, 0x07	; 7
    1c3c:	40 5d       	subi	r20, 0xD0	; 208
    1c3e:	41 93       	st	Z+, r20
    1c40:	b3 e0       	ldi	r27, 0x03	; 3
    1c42:	0f d0       	rcall	.+30     	; 0x1c62 <__ultoa_invert+0x86>
    1c44:	c9 f7       	brne	.-14     	; 0x1c38 <__ultoa_invert+0x5c>
    1c46:	f6 cf       	rjmp	.-20     	; 0x1c34 <__ultoa_invert+0x58>
    1c48:	46 2f       	mov	r20, r22
    1c4a:	4f 70       	andi	r20, 0x0F	; 15
    1c4c:	40 5d       	subi	r20, 0xD0	; 208
    1c4e:	4a 33       	cpi	r20, 0x3A	; 58
    1c50:	18 f0       	brcs	.+6      	; 0x1c58 <__ultoa_invert+0x7c>
    1c52:	49 5d       	subi	r20, 0xD9	; 217
    1c54:	31 fd       	sbrc	r19, 1
    1c56:	40 52       	subi	r20, 0x20	; 32
    1c58:	41 93       	st	Z+, r20
    1c5a:	02 d0       	rcall	.+4      	; 0x1c60 <__ultoa_invert+0x84>
    1c5c:	a9 f7       	brne	.-22     	; 0x1c48 <__ultoa_invert+0x6c>
    1c5e:	ea cf       	rjmp	.-44     	; 0x1c34 <__ultoa_invert+0x58>
    1c60:	b4 e0       	ldi	r27, 0x04	; 4
    1c62:	a6 95       	lsr	r26
    1c64:	97 95       	ror	r25
    1c66:	87 95       	ror	r24
    1c68:	77 95       	ror	r23
    1c6a:	67 95       	ror	r22
    1c6c:	ba 95       	dec	r27
    1c6e:	c9 f7       	brne	.-14     	; 0x1c62 <__ultoa_invert+0x86>
    1c70:	00 97       	sbiw	r24, 0x00	; 0
    1c72:	61 05       	cpc	r22, r1
    1c74:	71 05       	cpc	r23, r1
    1c76:	08 95       	ret
    1c78:	9b 01       	movw	r18, r22
    1c7a:	ac 01       	movw	r20, r24
    1c7c:	0a 2e       	mov	r0, r26
    1c7e:	06 94       	lsr	r0
    1c80:	57 95       	ror	r21
    1c82:	47 95       	ror	r20
    1c84:	37 95       	ror	r19
    1c86:	27 95       	ror	r18
    1c88:	ba 95       	dec	r27
    1c8a:	c9 f7       	brne	.-14     	; 0x1c7e <__ultoa_invert+0xa2>
    1c8c:	62 0f       	add	r22, r18
    1c8e:	73 1f       	adc	r23, r19
    1c90:	84 1f       	adc	r24, r20
    1c92:	95 1f       	adc	r25, r21
    1c94:	a0 1d       	adc	r26, r0
    1c96:	08 95       	ret

00001c98 <_exit>:
    1c98:	f8 94       	cli

00001c9a <__stop_program>:
    1c9a:	ff cf       	rjmp	.-2      	; 0x1c9a <__stop_program>
